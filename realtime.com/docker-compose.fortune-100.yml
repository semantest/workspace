version: '3.8'

services:
  # Fortune 100 Quantum Performance Platform
  fortune-100-quantum-platform:
    build:
      context: .
      dockerfile: Dockerfile.fortune-100
    ports:
      - "8080:8080"    # Load balancer
      - "9100:9100"    # Enterprise dashboard
      - "9101:9101"    # Quantum metrics
    environment:
      NODE_ENV: production
      ENTERPRISE_SCALE: fortune100
      LOG_LEVEL: info
      
      # Quantum Performance Configuration
      TARGET_CONNECTIONS: 10000000
      TARGET_THROUGHPUT: 5000000
      TARGET_LATENCY: 0.1
      
      # Enterprise Security
      ZERO_TRUST_NETWORKING: true
      ENCRYPTION_AT_REST: true
      ENCRYPTION_IN_TRANSIT: true
      COMPLIANCE_LEVEL: ALL
      
      # Ultra-Scale Configuration
      MIN_NODES: 10
      MAX_NODES: 500
      SCALE_UP_THRESHOLD: 0.75
      SCALE_DOWN_THRESHOLD: 0.25
      
      # Reliability
      TARGET_UPTIME: 0.99999
      MAX_RECOVERY_TIME: 30
      DISASTER_RECOVERY: true
      
      # Monitoring
      DISTRIBUTED_TRACING: true
      REAL_TIME_ALERTING: true
      QUANTUM_METRICS: true
      NANOSECOND_PRECISION: true
      
      # Infrastructure
      REDIS_CLUSTER_NODES: redis-cluster-1:7001,redis-cluster-2:7002,redis-cluster-3:7003,redis-cluster-4:7004,redis-cluster-5:7005,redis-cluster-6:7006
      KAFKA_BROKERS: kafka-cluster-1:29092,kafka-cluster-2:29093,kafka-cluster-3:29094
      
    depends_on:
      - redis-cluster-1
      - redis-cluster-2
      - redis-cluster-3
      - redis-cluster-4
      - redis-cluster-5
      - redis-cluster-6
      - kafka-cluster-1
      - kafka-cluster-2
      - kafka-cluster-3
      - zookeeper-cluster
    volumes:
      - ./logs:/app/logs
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 32G
          cpus: '16.0'
        reservations:
          memory: 16G
          cpus: '8.0'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/fortune-100/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 120s
    privileged: true

  # Redis Cluster for Ultra-High Performance (6 nodes)
  redis-cluster-1:
    image: redis:7-alpine
    command: >
      redis-server 
      --cluster-enabled yes 
      --cluster-config-file nodes-1.conf 
      --cluster-node-timeout 5000 
      --appendonly yes 
      --port 7001
      --maxmemory 8gb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    ports:
      - "7001:7001"
    volumes:
      - redis-cluster-1-data:/data
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2.0'

  redis-cluster-2:
    image: redis:7-alpine
    command: >
      redis-server 
      --cluster-enabled yes 
      --cluster-config-file nodes-2.conf 
      --cluster-node-timeout 5000 
      --appendonly yes 
      --port 7002
      --maxmemory 8gb
      --maxmemory-policy allkeys-lru
    ports:
      - "7002:7002"
    volumes:
      - redis-cluster-2-data:/data
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2.0'

  redis-cluster-3:
    image: redis:7-alpine
    command: >
      redis-server 
      --cluster-enabled yes 
      --cluster-config-file nodes-3.conf 
      --cluster-node-timeout 5000 
      --appendonly yes 
      --port 7003
      --maxmemory 8gb
      --maxmemory-policy allkeys-lru
    ports:
      - "7003:7003"
    volumes:
      - redis-cluster-3-data:/data
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2.0'

  redis-cluster-4:
    image: redis:7-alpine
    command: >
      redis-server 
      --cluster-enabled yes 
      --cluster-config-file nodes-4.conf 
      --cluster-node-timeout 5000 
      --appendonly yes 
      --port 7004
      --maxmemory 8gb
      --maxmemory-policy allkeys-lru
    ports:
      - "7004:7004"
    volumes:
      - redis-cluster-4-data:/data
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2.0'

  redis-cluster-5:
    image: redis:7-alpine
    command: >
      redis-server 
      --cluster-enabled yes 
      --cluster-config-file nodes-5.conf 
      --cluster-node-timeout 5000 
      --appendonly yes 
      --port 7005
      --maxmemory 8gb
      --maxmemory-policy allkeys-lru
    ports:
      - "7005:7005"
    volumes:
      - redis-cluster-5-data:/data
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2.0'

  redis-cluster-6:
    image: redis:7-alpine
    command: >
      redis-server 
      --cluster-enabled yes 
      --cluster-config-file nodes-6.conf 
      --cluster-node-timeout 5000 
      --appendonly yes 
      --port 7006
      --maxmemory 8gb
      --maxmemory-policy allkeys-lru
    ports:
      - "7006:7006"
    volumes:
      - redis-cluster-6-data:/data
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2.0'

  # Kafka Cluster for High-Throughput Messaging (3 brokers)
  zookeeper-cluster:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5
      ZOOKEEPER_MAX_CLIENT_CNXNS: 1000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-cluster-data:/var/lib/zookeeper/data
      - zookeeper-cluster-logs:/var/lib/zookeeper/log
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'

  kafka-cluster-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-cluster
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-cluster:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-cluster-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_NUM_PARTITIONS: 24
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
    volumes:
      - kafka-cluster-1-data:/var/lib/kafka/data
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'

  kafka-cluster-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-cluster
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-cluster:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-cluster-2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_NUM_PARTITIONS: 24
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_MESSAGE_MAX_BYTES: 10485760
    volumes:
      - kafka-cluster-2-data:/var/lib/kafka/data
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'

  kafka-cluster-3:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-cluster
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-cluster:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-cluster-3:29094,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_NUM_PARTITIONS: 24
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_MESSAGE_MAX_BYTES: 10485760
    volumes:
      - kafka-cluster-3-data:/var/lib/kafka/data
    networks:
      - fortune-100-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'

  # Enterprise Monitoring Stack
  prometheus-enterprise:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-fortune-100.yml:/etc/prometheus/prometheus.yml
      - prometheus-enterprise-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'
      - '--storage.tsdb.retention.size=100GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--query.max-concurrency=50'
      - '--query.max-samples=50000000'
    networks:
      - fortune-100-network
    profiles:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 16G
          cpus: '4.0'

  grafana-enterprise:
    image: grafana/grafana-enterprise:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: fortune100admin
      GF_USERS_ALLOW_SIGN_UP: false
      GF_ENTERPRISE_LICENSE_TEXT: ""
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana-enterprise-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards-fortune-100:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus-enterprise
    networks:
      - fortune-100-network
    profiles:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'

  # Enterprise Log Analytics
  elasticsearch-enterprise:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms16g -Xmx16g"
      xpack.security.enabled: false
      cluster.name: fortune-100-cluster
      node.name: fortune-100-node-1
      bootstrap.memory_lock: true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-enterprise-data:/usr/share/elasticsearch/data
    networks:
      - fortune-100-network
    profiles:
      - logging
    deploy:
      resources:
        limits:
          memory: 20G
          cpus: '4.0'

  kibana-enterprise:
    image: docker.elastic.co/kibana/kibana:8.11.0
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch-enterprise:9200
      SERVER_NAME: fortune-100-kibana
      XPACK_MONITORING_ENABLED: true
    depends_on:
      - elasticsearch-enterprise
    networks:
      - fortune-100-network
    profiles:
      - logging
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'

  # Load Testing for Fortune 100 Scale
  quantum-load-tester:
    build:
      context: .
      dockerfile: Dockerfile.quantum-loadtest
    environment:
      TARGET_HOST: fortune-100-quantum-platform
      TARGET_PORT: 8080
      MAX_CONNECTIONS: 1000000
      MESSAGES_PER_SECOND: 100000
      TEST_DURATION: 3600
      QUANTUM_SCALE: true
      ENTERPRISE_MODE: true
    depends_on:
      - fortune-100-quantum-platform
    networks:
      - fortune-100-network
    profiles:
      - testing
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'

volumes:
  # Redis Cluster volumes
  redis-cluster-1-data:
  redis-cluster-2-data:
  redis-cluster-3-data:
  redis-cluster-4-data:
  redis-cluster-5-data:
  redis-cluster-6-data:
  
  # Kafka Cluster volumes
  zookeeper-cluster-data:
  zookeeper-cluster-logs:
  kafka-cluster-1-data:
  kafka-cluster-2-data:
  kafka-cluster-3-data:
  
  # Enterprise Monitoring volumes
  prometheus-enterprise-data:
  grafana-enterprise-data:
  elasticsearch-enterprise-data:

networks:
  fortune-100-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.100.0.0/16
    driver_opts:
      com.docker.network.bridge.name: fortune100-br0
      com.docker.network.driver.mtu: 9000