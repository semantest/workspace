name: Chrome Extension Tests

on:
  push:
    branches: [ main, develop, feature/* ]
    paths:
      - 'extension.chrome/**'
      - '.github/workflows/extension-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'extension.chrome/**'
      - '.github/workflows/extension-tests.yml'
  workflow_dispatch:

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: extension.chrome/package-lock.json

    - name: Install dependencies
      run: |
        cd extension.chrome
        npm ci

    - name: Run ESLint
      run: |
        cd extension.chrome
        npm run lint

    - name: Run TypeScript type checking
      run: |
        cd extension.chrome
        npm run typecheck

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: extension.chrome/package-lock.json

    - name: Install dependencies
      run: |
        cd extension.chrome
        npm ci

    - name: Run unit tests with coverage
      run: |
        cd extension.chrome
        npm test -- --coverage --ci

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./extension.chrome/coverage
        flags: unittests
        name: extension-coverage

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: extension.chrome/package-lock.json

    - name: Install dependencies
      run: |
        cd extension.chrome
        npm ci

    - name: Build extension
      run: |
        cd extension.chrome
        npm run build

    - name: Verify build output
      run: |
        cd extension.chrome
        test -f build/manifest.json
        test -d build/assets
        test -f build/background.js
        test -f build/content.js
        test -f build/popup.js

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: extension-build
        path: extension.chrome/build/

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build
    
    strategy:
      matrix:
        browser: [chromium, chrome]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: extension.chrome/package-lock.json

    - name: Install dependencies
      run: |
        cd extension.chrome
        npm ci

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: extension-build
        path: extension.chrome/build/

    - name: Install Playwright browsers
      run: |
        cd extension.chrome
        npx playwright install ${{ matrix.browser }}

    - name: Run E2E tests
      run: |
        cd extension.chrome
        npm run test:e2e -- --browser=${{ matrix.browser }}
      env:
        HEADLESS: true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: e2e-test-results-${{ matrix.browser }}
        path: extension.chrome/test-results/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: extension.chrome/package-lock.json

    - name: Install dependencies
      run: |
        cd extension.chrome
        npm ci

    - name: Run npm audit
      run: |
        cd extension.chrome
        npm audit --production

    - name: Check for known vulnerabilities
      run: |
        cd extension.chrome
        npx snyk test --severity-threshold=high

    - name: Validate manifest permissions
      run: |
        cd extension.chrome
        node scripts/validate-permissions.js

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: extension.chrome/package-lock.json

    - name: Install dependencies
      run: |
        cd extension.chrome
        npm ci

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: extension-build
        path: extension.chrome/build/

    - name: Run performance tests
      run: |
        cd extension.chrome
        npm run test:performance

    - name: Check performance benchmarks
      run: |
        cd extension.chrome
        node scripts/check-performance-benchmarks.js

  all-tests-passed:
    name: All Tests Passed
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests, security-scan, performance-tests]
    
    steps:
    - name: All tests completed successfully
      run: echo "âœ… All tests passed!"