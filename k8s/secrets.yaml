# Kubernetes secrets for Semantest Enterprise
# NOTE: In production, use external secret management like AWS Secrets Manager, HashiCorp Vault, etc.
apiVersion: v1
kind: Secret
metadata:
  name: semantest-secrets
  namespace: semantest
  labels:
    app: semantest
    component: secrets
type: Opaque
data:
  # Database credentials (base64 encoded)
  database-url: cG9zdGdyZXNxbDovL3NlbWFudGVzdDpwYXNzd29yZEBwb3N0Z3Jlcy1zZXJ2aWNlOjU0MzIvc2VtYW50ZXN0
  postgres-password: cGFzc3dvcmQ=
  
  # Redis credentials
  redis-url: cmVkaXM6Ly86cGFzc3dvcmRAcmVkaXMtc2VydmljZTo2Mzc5
  redis-password: cGFzc3dvcmQ=
  
  # JWT and encryption keys
  jwt-secret: eW91ci1qd3Qtc2VjcmV0LWtleS1oZXJl
  encryption-key: eW91ci1lbmNyeXB0aW9uLWtleS1oZXJl
  
  # API keys
  analytics-key: eW91ci1hbmFseXRpY3MtYXBpLWtleQ==
  monitoring-key: eW91ci1tb25pdG9yaW5nLWFwaS1rZXk=
  
  # OAuth credentials
  oauth-client-secret: eW91ci1vYXV0aC1jbGllbnQtc2VjcmV0
  
  # SMTP credentials
  smtp-username: eW91ci1zbXRwLXVzZXJuYW1l
  smtp-password: eW91ci1zbXRwLXBhc3N3b3Jk

---
# TLS certificate secret (managed by cert-manager)
apiVersion: v1
kind: Secret
metadata:
  name: semantest-tls
  namespace: semantest
  labels:
    app: semantest
    component: tls
type: kubernetes.io/tls
data:
  tls.crt: # Certificate data (base64 encoded)
  tls.key: # Private key data (base64 encoded)

---
# API TLS certificate secret
apiVersion: v1
kind: Secret
metadata:
  name: semantest-api-tls
  namespace: semantest
  labels:
    app: semantest
    component: api-tls
type: kubernetes.io/tls
data:
  tls.crt: # Certificate data (base64 encoded)
  tls.key: # Private key data (base64 encoded)

---
# Docker registry credentials (if using private registry)
apiVersion: v1
kind: Secret
metadata:
  name: semantest-registry
  namespace: semantest
  labels:
    app: semantest
    component: registry
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: # Docker config JSON (base64 encoded)

---
# External secrets integration (example using External Secrets Operator)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: semantest-external-secrets
  namespace: semantest
spec:
  refreshInterval: 300s
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: semantest-secrets
    creationPolicy: Owner
  data:
  - secretKey: database-url
    remoteRef:
      key: semantest/database
      property: url
  - secretKey: redis-password
    remoteRef:
      key: semantest/redis
      property: password
  - secretKey: jwt-secret
    remoteRef:
      key: semantest/auth
      property: jwt-secret
  - secretKey: encryption-key
    remoteRef:
      key: semantest/encryption
      property: key

---
# SecretStore for AWS Secrets Manager
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secrets-manager
  namespace: semantest
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        jwt:
          serviceAccountRef:
            name: semantest-service-account