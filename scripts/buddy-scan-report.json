{
  "scanDate": "2025-07-18T06:20:23.953Z",
  "totalFiles": 184,
  "totalOccurrences": 2380,
  "fileTypes": {
    ".ts": 68,
    ".js": 47,
    ".json": 9,
    ".md": 16,
    ".yml": 1,
    ".html": 17,
    ".org": 23,
    ".txt": 2,
    ".py": 1
  },
  "variations": {
    "web-buddy": 393,
    "* event-driven web-buddy": 1,
    "* pure event-driven interface following the web-buddy": 1,
    "webbuddy": 516,
    "// create the dispatch payload in web-buddy": 1,
    "* @fileoverview chatgpt-buddy": 4,
    "* @description example usage of the chatgpt-buddy": 1,
    "chatgptbuddy": 118,
    "chatgpt-buddy": 312,
    ".webbuddy": 57,
    "* launch browser with web-buddy": 1,
    "// get the tab id for web-buddy": 1,
    "// request download through web-buddy": 1,
    "* alternative: download directly without web-buddy": 1,
    "* @description typescript client for chatgpt-buddy": 1,
    "* main chatgpt-buddy": 1,
    "* factory function to create and initialize a chatgpt-buddy": 1,
    "* @fileoverview main entry point for web-buddy": 3,
    "* @author web-buddy": 21,
    "google-buddy": 29,
    "* using the web-buddy": 1,
    "googlebuddy": 58,
    "* @fileoverview backward-compatible google buddy": 1,
    "* @module google-buddy": 1,
    "* configuration for googlebuddy": 1,
    "* legacy webbuddy": 1,
    "// indexeddb storage manager for web-buddy": 2,
    "// web-buddy": 6,
    "* for the chatgpt-buddy": 2,
    "* @description ai-enhanced background script extending web-buddy": 2,
    "@web-buddy": 101,
    "* chatgpt-specific background application extending web-buddy": 2,
    "// initialize parent web-buddy": 2,
    "// browser extension background script for web-buddy": 4,
    "// handles websocket communication with web-buddy": 4,
    "chatgpt buddy": 20,
    "* @fileoverview plugin ui component system for web-buddy": 2,
    "* @fileoverview plugin storage system for web-buddy": 2,
    "* @fileoverview plugin security system for web-buddy": 2,
    "* @fileoverview plugin registry implementation for web-buddy": 2,
    "* @fileoverview plugin loader implementation for web-buddy": 2,
    "* @fileoverview core plugin interfaces and types for web-buddy": 2,
    "* web-buddy": 5,
    "* @fileoverview plugin context implementation for web-buddy": 2,
    "* @fileoverview plugin communication system for web-buddy": 2,
    "* @fileoverview chatgpt buddy": 3,
    "* chatgpt buddy": 2,
    "//github.com/rydnr/chatgpt-buddy": 42,
    "* contract discovery and management adapter for web-buddy": 2,
    "\"web-buddy": 30,
    "* @description maintains the original chatgptbuddy": 1,
    "* backward compatibility wrapper for chatgptbuddy": 1,
    "* configuration interface for webbuddy": 4,
    "* generic web-buddy": 9,
    "// note: server infrastructure moved to @web-buddy": 2,
    "* factory function to create a configured webbuddy": 6,
    "* @returns configured webbuddy": 6,
    "* note: server creation moved to @web-buddy": 3,
    "* use createwebbuddyserver from '@web-buddy": 3,
    "* configuration for the web-buddy": 2,
    "* connects to the web-buddy": 3,
    "* disconnects from the web-buddy": 3,
    "// convert content script message to webbuddy": 2,
    "* base interface for all web-buddy": 4,
    "* abstract base class for all web-buddy": 6,
    "* interface for message handlers that process web-buddy": 2,
    "* interface for event handlers that process web-buddy": 2,
    "* @description tests for contract discovery and execution in web-buddy": 1,
    "//github.com/rydnr/web-buddy": 13,
    "# webbuddy": 2,
    "### option 3: full web-buddy": 1,
    "# first, ensure the web-buddy": 1,
    "**web-buddy framework integration** (`google-images-downloader.ts`) - uses the event-driven architecture to communicate with the web-buddy": 1,
    "### method 1: simple web-buddy": 1,
    "### method 2: playwright with web-buddy": 1,
    "### event-driven approach (web-buddy": 1,
    "**server connection failed**: start the web-buddy": 1,
    "# security audit checklist: buddy": 1,
    "web_buddy": 28,
    "`buddy": 14,
    "//*.webbuddy": 1,
    "//localhost:*/buddy": 1,
    "/buddy": 6,
    "-buddy": 43,
    "buddy": 58,
    ".buddy": 20,
    "* from buddy": 1,
    "// todo: remove hardcoded buddy": 1,
    "// webbuddy": 4,
    "* old buddy endpoint: https://api.webbuddy": 1,
    "//buddy": 1,
    "**note**: this checklist must be completed before any mass buddy": 1,
    "# buddy": 1,
    "**objective**: verify engineer's script catches all buddy": 1,
    "\"buddy": 5,
    "## buddy": 1,
    "### 1. pascalcase: `webbuddy": 1,
    "### 2. camelcase: `webbuddy": 1,
    "### 3. kebab-case: `web-buddy": 1,
    "/web-buddy": 22,
    "### 4. snake_case: `web_buddy": 1,
    "_web_buddy": 2,
    "### 5. npm scope: `@web-buddy": 1,
    "### 6. no separator: `webbuddy": 1,
    "#webbuddy": 1,
    "### 7. title-case: `web-buddy": 1,
    "# web-buddy": 2,
    "### 8. snake_case: `web_buddy": 1,
    "### 9. standalone 'buddy": 1,
    "// buddy": 1,
    "'buddy": 3,
    "* as webbuddy from 'web-buddy": 1,
    "** @param {webbuddy} buddy": 1,
    "// todo: update webbuddy": 1,
    "// fixme: web-buddy": 1,
    "* webbuddy": 1,
    "<!-- web-buddy": 1,
    "// web_buddy": 1,
    "#buddy": 1,
    "@buddy": 1,
    "**note**: this test plan ensures comprehensive coverage of all possible \"buddy": 1,
    "*.ts\" -o -name \"*.js\" -o -name \"*.json\" -o -name \"*.md\" -o -name \"*.org\" -o -name \"*.yml\" -o -name \"*.yaml\" -o -name \"*.html\" -o -name \"*.txt\" \\) -exec grep -l \"buddy\\|buddy\\|buddy": 1,
    "*.ts\" -o -name \"*.js\" -o -name \"*.json\" -o -name \"*.md\" -o -name \"*.org\" -o -name \"*.yml\" -o -name \"*.yaml\" -o -name \"*.html\" -o -name \"*.txt\" \\) -exec grep -h \"buddy\\|buddy\\|buddy": 1,
    "**week 1-2**: webbuddy": 1,
    "# milestone: webbuddy": 1,
    "**task 001**: scan entire codebase for all variations of \"buddy": 1,
    "**environment**: chrome extension with web-buddy": 1,
    "**test environment**: chrome extension with web-buddy": 1,
    "**extension**: web-buddy": 1,
    "**learn web-buddy": 1,
    "**real-world example** to teach you how to extend web-buddy": 1,
    "**right-click context menu**: \"download with web-buddy": 1,
    "**universal pattern** for extending web-buddy": 1,
    "//github.com/web-buddy": 1,
    "**🎉 you're now ready to build web-buddy": 1,
    "**questions?** join our [discord community](https://discord.gg/web-buddy": 1,
    "# 🚀 getting started with web-buddy": 1,
    "**start the web-buddy": 1,
    "**congratulations!** you just completed your first web-buddy": 1,
    "// ✅ web-buddy": 1,
    "**web-buddy": 1,
    "**github**: [github.com/web-buddy/framework](https://github.com/web-buddy": 1,
    "**discord**: [discord.gg/web-buddy](https://discord.gg/web-buddy": 1,
    "**documentation**: [docs.web-buddy.dev](https://docs.web-buddy": 1,
    "**examples**: [github.com/web-buddy/examples](https://github.com/web-buddy": 1,
    "**documentation issues**: [docs.web-buddy.dev/issues](https://docs.web-buddy": 1,
    "**sdk problems**: [github.com/web-buddy/client-ts/issues](https://github.com/web-buddy": 1,
    "**general questions**: [discord community](https://discord.gg/web-buddy": 1,
    "**feature requests**: [github.com/web-buddy/framework/discussions](https://github.com/web-buddy": 1,
    "*\"web-buddy": 1,
    "*\"the event-driven architecture made it incredibly easy to integrate web-buddy": 1,
    "**ready to build amazing automation?** start with the [google images tutorial](./google_images_getting_started.md) to see how web-buddy": 1,
    "**project**: semantest - web automation testing framework using web-buddy": 1,
    "**framework**: web-buddy": 1,
    "//rydnr.github.io/chatgpt-buddy": 2,
    "#39;chatgpt-buddy": 1,
    "#39;@chatgpt-buddy": 20,
    "chatgpt_buddy": 14,
    "#39;@web-buddy": 21,
    "// example: github-buddy": 2,
    "#39;name&#39;, &#39;github-buddy": 1,
    "// v2.x: extended server with web-buddy": 2,
    "// example: contract test for web-buddy → chatgpt-buddy": 2,
    "#39;chatgpt-buddy ↔ web-buddy": 1,
    "#39;should handle web-buddy": 1,
    "// 1. use web-buddy": 2,
    "#39;web_buddy": 3,
    "#39;@google-buddy": 3,
    "//www.npmjs.com/package/@web-buddy": 2,
    "# install web-buddy": 2,
    "// src/core/web-buddy": 2,
    "#39;../../core/web-buddy": 2,
    "#39;./core/web-buddy": 1,
    "#39;🎯 running web-buddy": 1,
    "// connect via websocket to your web-buddy": 2,
    "//www.npmjs.com/package/@chatgpt-buddy": 2,
    "# install chatgpt-buddy": 2,
    "#39;✅ connected to chatgpt-buddy": 1,
    "# terminal 1: start the web-buddy": 2,
    "# chrome → extensions → web-buddy": 4,
    "# 1. chrome → extensions → web-buddy": 2,
    "// implementations/google-buddy": 12,
    "#39;google-buddy": 1,
    "// given: google homepage is loaded with web-buddy": 2,
    "// when: using generic web-buddy": 2,
    "* built on top of the generic webbuddy": 2,
    "* receives messages from web-buddy": 2,
    "// listen for messages from web-buddy": 2,
    "// twitter-buddy": 4,
    "#+title: web-buddy": 3,
    "**core layer** (@web-buddy": 1,
    "** challenge: evolving from -buddy": 1,
    "**professional positioning**: the =-buddy": 1,
    "**client**: chatgptclient with modern api, chatgptbuddy": 1,
    "**client**: wikipediaclient with modern api, wikipediabuddy": 1,
    "**migration guide** (docs/migration-guide/readme.org): comprehensive web-buddy": 1,
    "**migration confidence**: zero-disruption transition from web-buddy": 1,
    "**intermediate**: multi-domain web-buddy": 1,
    "**initial**: informal \"-buddy": 1,
    "**framework development**: multi-domain web-buddy": 1,
    "** journey overview: from chatgpt-buddy": 1,
    "**migration tools**: automated tooling for web-buddy": 1,
    "**generic framework**: web-buddy": 1,
    "*backward compatible*: supports legacy =@google-buddy": 1,
    "#+title: migration guide: @google-buddy": 1,
    "*old*: =@google-buddy": 1,
    "*old*: =@web-buddy": 1,
    "*webbuddy": 1,
    "#+author: web-buddy": 4,
    "** 1. chatgpt-buddy": 1,
    "** 2. github-buddy": 1,
    "// check web-buddy": 1,
    "**github discussions**: =chatgpt-buddy": 1,
    "**email support**: =migration@chatgpt-buddy": 1,
    "**community wiki**: =wiki.chatgpt-buddy": 1,
    "#+title: typescript-eda & web-buddy": 1,
    "**framework layer**: web-buddy": 1,
    "**implementation layer**: specialized tools like chatgpt-buddy built on web-buddy": 1,
    "*** @web-buddy": 2,
    "**repository**: =https://github.com/rydnr/web-buddy": 2,
    "*** @chatgpt-buddy": 3,
    "**dependencies**: =@web-buddy": 2,
    "**repository**: =https://github.com/rydnr/chatgpt-buddy": 3,
    "**purpose**: ai automation browser extension built on web-buddy": 1,
    "**framework second**: build web-buddy": 1,
    "**implementation third**: create specialized implementations (chatgpt-buddy": 1,
    "**update frameworks**: adapt web-buddy": 1,
    "**update implementations**: finally update chatgpt-buddy": 1,
    "**e2e tests**: full ecosystem testing in chatgpt-buddy": 1,
    "**memory usage**: ~50mb for full chatgpt-buddy": 1,
    "**@web-buddy": 1,
    "**@chatgpt-buddy": 1,
    "**@github-buddy": 1,
    "**@gmail-buddy": 1,
    "**@docs-buddy": 1,
    "**@testing-buddy": 1,
    "**framework**: enhance web-buddy": 1,
    "**implementation**: extend chatgpt-buddy": 1,
    "**web-buddy**: [[./web-buddy": 1,
    "**chatgpt-buddy**: [[./chatgpt-buddy": 1,
    "**stack overflow**: =typescript-eda= and =web-buddy": 1,
    "** web-buddy": 1,
    "#+subtitle: how chatgpt-buddy became web-buddy": 1,
    "#+project: web-buddy": 3,
    "** google-buddy": 1,
    "*discovery*: find web-buddy through domain implementation (google-buddy, chatgpt-buddy": 1,
    "**the transformation from chatgpt-buddy to web-buddy": 1,
    "** the web-buddy": 1,
    "*web-buddy": 2,
    "*domain implementations*: google-buddy, chatgpt-buddy": 1,
    "#+title: getting started with web-buddy": 1,
    "*core layer* (~webbuddy": 1,
    "*api layer* (googlebuddyclient/wikipediabuddy": 1,
    "# migration guide: web-buddy": 1,
    "#+title: migration guide: web-buddy": 1,
    "// old: web-buddy": 3,
    "// old: domain buddy": 1,
    "// old: googlebuddy": 1,
    "// old: chatgptbuddy": 1,
    "// old: wikipediabuddy": 1,
    "// old: custom web-buddy": 1,
    "* migration from web-buddy": 2,
    "// old web-buddy": 1,
    "// was: new chatgptbuddy": 1,
    "#+title: the chatgpt-buddy": 1,
    "#+author: chatgpt-buddy": 6,
    "#+project: chatgpt-buddy": 6,
    "#+title: chatgpt-buddy": 3,
    "*** chatgpt-buddy": 1,
    "** the chatgpt-buddy": 1,
    "#+title: getting started with chatgpt-buddy": 1,
    "*core framework*: generic messaging infrastructure (~packages/web-buddy": 1,
    "*server*: event-driven http server with websocket support (~packages/chatgpt-buddy": 1,
    "*core layer*: generic messaging (~web-buddy": 1,
    "*domain layer*: site-specific logic (~google-buddy": 1,
    "*api layer*: developer-friendly wrappers (~googlebuddy": 1,
    "*architecture*: ~specs/web-buddy": 1,
    "#+title: atdd testing guide for chatgpt-buddy": 1,
    "* introduction: web-buddy": 1,
    "**core layer**: generic message-passing infrastructure (=webbuddy": 1,
    "* google-buddy": 1,
    "// legacy googlebuddy": 1,
    "** webbuddy": 1,
    "# create the dispatch payload in web-buddy": 1,
    "**kwargs) -> eventdrivenwebbuddy": 1,
    "**kwargs) -> synceventdrivenwebbuddy": 1
  },
  "files": [
    {
      "filePath": "/home/chous/work/semantest/scripts/buddy-variations-test-cases.md",
      "occurrenceCount": 167,
      "references": [
        {
          "variation": "# Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "# Buddy Variations Test Cases"
        },
        {
          "variation": "**Objective**: Verify Engineer's script catches ALL buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "**Objective**: Verify Engineer's script catches ALL buddy variations across the codebase"
        },
        {
          "variation": "buddy",
          "line": 10,
          "column": 67,
          "context": "code",
          "lineText": "This document defines comprehensive test cases to verify that the buddy variations detection script correctly identifies all possible variations of \"buddy\" naming conventions throughout the codebase."
        },
        {
          "variation": "\"buddy",
          "line": 10,
          "column": 149,
          "context": "code",
          "lineText": "This document defines comprehensive test cases to verify that the buddy variations detection script correctly identifies all possible variations of \"buddy\" naming conventions throughout the codebase."
        },
        {
          "variation": "## Buddy",
          "line": 12,
          "column": 1,
          "context": "code",
          "lineText": "## Buddy Variations to Test"
        },
        {
          "variation": "### 1. PascalCase: `WebBuddy",
          "line": 14,
          "column": 1,
          "context": "code",
          "lineText": "### 1. PascalCase: `WebBuddy`"
        },
        {
          "variation": "WebBuddy",
          "line": 16,
          "column": 42,
          "context": "string",
          "lineText": "- TC-VAR-001: Class declarations: `class WebBuddy {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 17,
          "column": 43,
          "context": "string",
          "lineText": "- TC-VAR-002: Interface names: `interface WebBuddyConfig {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 18,
          "column": 39,
          "context": "string",
          "lineText": "- TC-VAR-003: Type definitions: `type WebBuddyOptions = {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 19,
          "column": 33,
          "context": "string",
          "lineText": "- TC-VAR-004: Enum names: `enum WebBuddyStatus {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 20,
          "column": 44,
          "context": "string",
          "lineText": "- TC-VAR-005: Import statements: `import { WebBuddy } from './lib'`"
        },
        {
          "variation": "WebBuddy",
          "line": 21,
          "column": 48,
          "context": "string",
          "lineText": "- TC-VAR-006: Export statements: `export class WebBuddy`"
        },
        {
          "variation": "WebBuddy",
          "line": 22,
          "column": 39,
          "context": "string",
          "lineText": "- TC-VAR-007: Constructor calls: `new WebBuddy()`"
        },
        {
          "variation": "WebBuddy",
          "line": 23,
          "column": 35,
          "context": "string",
          "lineText": "- TC-VAR-008: Static references: `WebBuddy.getInstance()`"
        },
        {
          "variation": "### 2. camelCase: `webBuddy",
          "line": 25,
          "column": 1,
          "context": "code",
          "lineText": "### 2. camelCase: `webBuddy`"
        },
        {
          "variation": "webBuddy",
          "line": 27,
          "column": 45,
          "context": "string",
          "lineText": "- TC-VAR-009: Variable declarations: `const webBuddy = new Client()`"
        },
        {
          "variation": "webBuddy",
          "line": 28,
          "column": 51,
          "context": "string",
          "lineText": "- TC-VAR-010: Function parameters: `function init(webBuddy: Client)`"
        },
        {
          "variation": ".webBuddy",
          "line": 29,
          "column": 41,
          "context": "string",
          "lineText": "- TC-VAR-011: Object properties: `config.webBuddy.enabled`"
        },
        {
          "variation": ".webBuddy",
          "line": 30,
          "column": 36,
          "context": "string",
          "lineText": "- TC-VAR-012: Method names: `client.webBuddy()`"
        },
        {
          "variation": ".webBuddy",
          "line": 31,
          "column": 40,
          "context": "string",
          "lineText": "- TC-VAR-013: Instance variables: `this.webBuddy = instance`"
        },
        {
          "variation": "webBuddy",
          "line": 32,
          "column": 39,
          "context": "string",
          "lineText": "- TC-VAR-014: Destructuring: `const { webBuddy } = props`"
        },
        {
          "variation": "webBuddy",
          "line": 33,
          "column": 45,
          "context": "string",
          "lineText": "- TC-VAR-015: Array elements: `clients.push(webBuddy)`"
        },
        {
          "variation": "webBuddy",
          "line": 34,
          "column": 37,
          "context": "string",
          "lineText": "- TC-VAR-016: Template literals: `${webBuddy.name}`"
        },
        {
          "variation": "### 3. kebab-case: `web-buddy",
          "line": 36,
          "column": 1,
          "context": "code",
          "lineText": "### 3. kebab-case: `web-buddy`"
        },
        {
          "variation": "web-buddy",
          "line": 38,
          "column": 43,
          "context": "string",
          "lineText": "- TC-VAR-017: HTML attributes: `<div data-web-buddy=\"true\">`"
        },
        {
          "variation": "web-buddy",
          "line": 39,
          "column": 30,
          "context": "string",
          "lineText": "- TC-VAR-018: CSS classes: `.web-buddy-container`"
        },
        {
          "variation": "web-buddy",
          "line": 40,
          "column": 28,
          "context": "string",
          "lineText": "- TC-VAR-019: File names: `web-buddy-config.ts`"
        },
        {
          "variation": "/web-buddy",
          "line": 41,
          "column": 31,
          "context": "string",
          "lineText": "- TC-VAR-020: URL paths: `/api/web-buddy/status`"
        },
        {
          "variation": "\"web-buddy",
          "line": 42,
          "column": 31,
          "context": "string",
          "lineText": "- TC-VAR-021: Package names: `\"web-buddy\": \"^1.0.0\"`"
        },
        {
          "variation": "web-buddy",
          "line": 43,
          "column": 30,
          "context": "string",
          "lineText": "- TC-VAR-022: CLI commands: `web-buddy --init`"
        },
        {
          "variation": "web-buddy",
          "line": 44,
          "column": 30,
          "context": "string",
          "lineText": "- TC-VAR-023: Event names: `'web-buddy-ready'`"
        },
        {
          "variation": "/web-buddy",
          "line": 45,
          "column": 36,
          "context": "string",
          "lineText": "- TC-VAR-024: Directory names: `src/web-buddy/`"
        },
        {
          "variation": "### 4. SNAKE_CASE: `WEB_BUDDY",
          "line": 47,
          "column": 1,
          "context": "code",
          "lineText": "### 4. SNAKE_CASE: `WEB_BUDDY`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 49,
          "column": 33,
          "context": "string",
          "lineText": "- TC-VAR-025: Constants: `const WEB_BUDDY_VERSION = '1.0'`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 50,
          "column": 46,
          "context": "string",
          "lineText": "- TC-VAR-026: Environment vars: `process.env.WEB_BUDDY_API_KEY`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 51,
          "column": 31,
          "context": "string",
          "lineText": "- TC-VAR-027: Config keys: `{ WEB_BUDDY_ENABLED: true }`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 52,
          "column": 36,
          "context": "string",
          "lineText": "- TC-VAR-028: Enum values: `Status.WEB_BUDDY_ACTIVE`"
        },
        {
          "variation": "_WEB_BUDDY",
          "line": 53,
          "column": 33,
          "context": "string",
          "lineText": "- TC-VAR-029: Error codes: `'ERR_WEB_BUDDY_NOT_FOUND'`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 54,
          "column": 31,
          "context": "string",
          "lineText": "- TC-VAR-030: Action types: `'WEB_BUDDY_INITIALIZED'`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 55,
          "column": 33,
          "context": "string",
          "lineText": "- TC-VAR-031: Database fields: `WEB_BUDDY_ID`"
        },
        {
          "variation": "WEB-BUDDY",
          "line": 56,
          "column": 33,
          "context": "string",
          "lineText": "- TC-VAR-032: Header names: `'X-WEB-BUDDY-TOKEN'`"
        },
        {
          "variation": "### 5. npm scope: `@web-buddy",
          "line": 58,
          "column": 1,
          "context": "code",
          "lineText": "### 5. npm scope: `@web-buddy/`"
        },
        {
          "variation": "@web-buddy",
          "line": 60,
          "column": 57,
          "context": "string",
          "lineText": "- TC-VAR-033: Package imports: `import { Client } from '@web-buddy/client'`"
        },
        {
          "variation": "@web-buddy",
          "line": 61,
          "column": 36,
          "context": "string",
          "lineText": "- TC-VAR-034: Package.json deps: `\"@web-buddy/core\": \"^2.0.0\"`"
        },
        {
          "variation": "@web-buddy",
          "line": 62,
          "column": 45,
          "context": "string",
          "lineText": "- TC-VAR-035: Require statements: `require('@web-buddy/utils')`"
        },
        {
          "variation": "@web-buddy",
          "line": 63,
          "column": 47,
          "context": "string",
          "lineText": "- TC-VAR-036: Dynamic imports: `await import('@web-buddy/plugin')`"
        },
        {
          "variation": "@web-buddy",
          "line": 64,
          "column": 59,
          "context": "string",
          "lineText": "- TC-VAR-037: Type imports: `import type { Config } from '@web-buddy/types'`"
        },
        {
          "variation": "@web-buddy",
          "line": 65,
          "column": 33,
          "context": "string",
          "lineText": "- TC-VAR-038: Workspace refs: `\"@web-buddy/*\": [\"packages/*\"]`"
        },
        {
          "variation": "@web-buddy",
          "line": 66,
          "column": 36,
          "context": "string",
          "lineText": "- TC-VAR-039: Module resolution: `'@web-buddy/shared/constants'`"
        },
        {
          "variation": "@web-buddy",
          "line": 67,
          "column": 58,
          "context": "string",
          "lineText": "- TC-VAR-040: Peer dependencies: `\"peerDependencies\": { \"@web-buddy/core\": \"*\" }`"
        },
        {
          "variation": "### 6. No separator: `webbuddy",
          "line": 69,
          "column": 1,
          "context": "code",
          "lineText": "### 6. No separator: `webbuddy`"
        },
        {
          "variation": "webbuddy",
          "line": 71,
          "column": 35,
          "context": "string",
          "lineText": "- TC-VAR-041: Username/IDs: `user_webbuddy123`"
        },
        {
          "variation": "webbuddy",
          "line": 72,
          "column": 33,
          "context": "string",
          "lineText": "- TC-VAR-042: Database tables: `webbuddy_sessions`"
        },
        {
          "variation": "webbuddy",
          "line": 73,
          "column": 32,
          "context": "string",
          "lineText": "- TC-VAR-043: API endpoints: `/webbuddy/auth`"
        },
        {
          "variation": "webbuddy",
          "line": 74,
          "column": 31,
          "context": "string",
          "lineText": "- TC-VAR-044: Docker images: `webbuddy:latest`"
        },
        {
          "variation": "webbuddy",
          "line": 75,
          "column": 31,
          "context": "string",
          "lineText": "- TC-VAR-045: Log prefixes: `[webbuddy] Starting...`"
        },
        {
          "variation": "webbuddy",
          "line": 76,
          "column": 34,
          "context": "string",
          "lineText": "- TC-VAR-046: Config sections: `[webbuddy]`"
        },
        {
          "variation": "#webbuddy",
          "line": 77,
          "column": 27,
          "context": "string",
          "lineText": "- TC-VAR-047: Hash tags: `#webbuddy`"
        },
        {
          "variation": "webbuddy",
          "line": 78,
          "column": 30,
          "context": "string",
          "lineText": "- TC-VAR-048: Domain names: `webbuddy.example.com`"
        },
        {
          "variation": "### 7. Title-Case: `Web-Buddy",
          "line": 80,
          "column": 1,
          "context": "code",
          "lineText": "### 7. Title-Case: `Web-Buddy`"
        },
        {
          "variation": "# Web-Buddy",
          "line": 82,
          "column": 38,
          "context": "string",
          "lineText": "- TC-VAR-049: Documentation titles: `# Web-Buddy Documentation`"
        },
        {
          "variation": "\"Web-Buddy",
          "line": 83,
          "column": 46,
          "context": "string",
          "lineText": "- TC-VAR-050: Display names: `\"displayName\": \"Web-Buddy Extension\"`"
        },
        {
          "variation": "Web-Buddy",
          "line": 84,
          "column": 34,
          "context": "string",
          "lineText": "- TC-VAR-051: UI labels: `<label>Web-Buddy Settings</label>`"
        },
        {
          "variation": "Web-Buddy",
          "line": 85,
          "column": 38,
          "context": "string",
          "lineText": "- TC-VAR-052: Menu items: `{ label: 'Web-Buddy', action: 'open' }`"
        },
        {
          "variation": "\"Web-Buddy",
          "line": 86,
          "column": 32,
          "context": "string",
          "lineText": "- TC-VAR-053: Error messages: `\"Web-Buddy is not configured\"`"
        },
        {
          "variation": "Web-Buddy",
          "line": 87,
          "column": 45,
          "context": "string",
          "lineText": "- TC-VAR-054: Notification titles: `notify('Web-Buddy Update')`"
        },
        {
          "variation": "Web-Buddy",
          "line": 88,
          "column": 46,
          "context": "string",
          "lineText": "- TC-VAR-055: Brand references: `\"Powered by Web-Buddy\"`"
        },
        {
          "variation": "Web-Buddy",
          "line": 89,
          "column": 49,
          "context": "string",
          "lineText": "- TC-VAR-056: Window titles: `document.title = 'Web-Buddy Dashboard'`"
        },
        {
          "variation": "### 8. snake_case: `web_buddy",
          "line": 91,
          "column": 1,
          "context": "code",
          "lineText": "### 8. snake_case: `web_buddy`"
        },
        {
          "variation": "web_buddy",
          "line": 93,
          "column": 34,
          "context": "string",
          "lineText": "- TC-VAR-057: Python variables: `web_buddy_client = Client()`"
        },
        {
          "variation": "web_buddy",
          "line": 94,
          "column": 34,
          "context": "string",
          "lineText": "- TC-VAR-058: Database columns: `web_buddy_created_at`"
        },
        {
          "variation": "_web_buddy",
          "line": 95,
          "column": 40,
          "context": "string",
          "lineText": "- TC-VAR-059: Function names: `def init_web_buddy():`"
        },
        {
          "variation": "web_buddy",
          "line": 96,
          "column": 28,
          "context": "string",
          "lineText": "- TC-VAR-060: File names: `web_buddy_utils.py`"
        },
        {
          "variation": "web_buddy",
          "line": 97,
          "column": 30,
          "context": "string",
          "lineText": "- TC-VAR-061: JSON keys: `{ \"web_buddy_config\": {} }`"
        },
        {
          "variation": "web_buddy",
          "line": 98,
          "column": 31,
          "context": "string",
          "lineText": "- TC-VAR-062: Query params: `?web_buddy_mode=debug`"
        },
        {
          "variation": "web_buddy",
          "line": 99,
          "column": 42,
          "context": "string",
          "lineText": "- TC-VAR-063: Form fields: `<input name=\"web_buddy_key\">`"
        },
        {
          "variation": "web_buddy",
          "line": 100,
          "column": 30,
          "context": "string",
          "lineText": "- TC-VAR-064: Cookie names: `web_buddy_session`"
        },
        {
          "variation": "### 9. Standalone 'buddy",
          "line": 102,
          "column": 1,
          "context": "code",
          "lineText": "### 9. Standalone 'buddy'"
        },
        {
          "variation": "buddy",
          "line": 104,
          "column": 38,
          "context": "string",
          "lineText": "- TC-VAR-065: Variable names: `const buddy = getInstance()`"
        },
        {
          "variation": ".buddy",
          "line": 105,
          "column": 38,
          "context": "string",
          "lineText": "- TC-VAR-066: Property names: `client.buddy.connect()`"
        },
        {
          "variation": "`buddy",
          "line": 106,
          "column": 29,
          "context": "code",
          "lineText": "- TC-VAR-067: Method names: `buddy.initialize()`"
        },
        {
          "variation": "// buddy",
          "line": 107,
          "column": 26,
          "context": "string",
          "lineText": "- TC-VAR-068: Comments: `// buddy feature enabled`"
        },
        {
          "variation": "'buddy",
          "line": 108,
          "column": 32,
          "context": "string",
          "lineText": "- TC-VAR-069: String content: `'buddy mode activated'`"
        },
        {
          "variation": "'buddy",
          "line": 109,
          "column": 48,
          "context": "string",
          "lineText": "- TC-VAR-070: Error messages: `throw new Error('buddy not found')`"
        },
        {
          "variation": "buddy",
          "line": 110,
          "column": 31,
          "context": "string",
          "lineText": "- TC-VAR-071: Config keys: `{ buddy: { enabled: true } }`"
        },
        {
          "variation": "Buddy",
          "line": 111,
          "column": 42,
          "context": "string",
          "lineText": "- TC-VAR-072: Class suffix: `class ClientBuddy {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 117,
          "column": 38,
          "context": "string",
          "lineText": "- TC-CTX-001: ES6 imports: `import { WebBuddy } from '@web-buddy/client'`"
        },
        {
          "variation": "@web-buddy",
          "line": 117,
          "column": 55,
          "context": "string",
          "lineText": "- TC-CTX-001: ES6 imports: `import { WebBuddy } from '@web-buddy/client'`"
        },
        {
          "variation": "webBuddy",
          "line": 118,
          "column": 32,
          "context": "string",
          "lineText": "- TC-CTX-002: CommonJS: `const webBuddy = require('web-buddy')`"
        },
        {
          "variation": "web-buddy",
          "line": 118,
          "column": 52,
          "context": "string",
          "lineText": "- TC-CTX-002: CommonJS: `const webBuddy = require('web-buddy')`"
        },
        {
          "variation": "webBuddy",
          "line": 119,
          "column": 41,
          "context": "string",
          "lineText": "- TC-CTX-003: Dynamic imports: `const { webBuddy } = await import('./web-buddy')`"
        },
        {
          "variation": "/web-buddy",
          "line": 119,
          "column": 69,
          "context": "string",
          "lineText": "- TC-CTX-003: Dynamic imports: `const { webBuddy } = await import('./web-buddy')`"
        },
        {
          "variation": "WebBuddy",
          "line": 120,
          "column": 44,
          "context": "string",
          "lineText": "- TC-CTX-004: Type imports: `import type { WebBuddyConfig } from '@web-buddy/types'`"
        },
        {
          "variation": "@web-buddy",
          "line": 120,
          "column": 67,
          "context": "string",
          "lineText": "- TC-CTX-004: Type imports: `import type { WebBuddyConfig } from '@web-buddy/types'`"
        },
        {
          "variation": "* as WebBuddy from 'web-buddy",
          "line": 121,
          "column": 42,
          "context": "string",
          "lineText": "- TC-CTX-005: Namespace imports: `import * as WebBuddy from 'web-buddy'`"
        },
        {
          "variation": "webBuddy",
          "line": 122,
          "column": 40,
          "context": "string",
          "lineText": "- TC-CTX-006: Default imports: `import webBuddy from 'web-buddy'`"
        },
        {
          "variation": "web-buddy",
          "line": 122,
          "column": 55,
          "context": "string",
          "lineText": "- TC-CTX-006: Default imports: `import webBuddy from 'web-buddy'`"
        },
        {
          "variation": "WebBuddy",
          "line": 123,
          "column": 37,
          "context": "string",
          "lineText": "- TC-CTX-007: Re-exports: `export { WebBuddy } from '@web-buddy/core'`"
        },
        {
          "variation": "@web-buddy",
          "line": 123,
          "column": 54,
          "context": "string",
          "lineText": "- TC-CTX-007: Re-exports: `export { WebBuddy } from '@web-buddy/core'`"
        },
        {
          "variation": "WebBuddy",
          "line": 124,
          "column": 42,
          "context": "string",
          "lineText": "- TC-CTX-008: Aliased imports: `import { WebBuddy as WB } from 'web-buddy'`"
        },
        {
          "variation": "web-buddy",
          "line": 124,
          "column": 65,
          "context": "string",
          "lineText": "- TC-CTX-008: Aliased imports: `import { WebBuddy as WB } from 'web-buddy'`"
        },
        {
          "variation": "webBuddy",
          "line": 128,
          "column": 42,
          "context": "string",
          "lineText": "- TC-CTX-009: Const declarations: `const webBuddyClient = new Client()`"
        },
        {
          "variation": "webBuddy",
          "line": 129,
          "column": 38,
          "context": "string",
          "lineText": "- TC-CTX-010: Let declarations: `let webBuddy = null`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 130,
          "column": 38,
          "context": "string",
          "lineText": "- TC-CTX-011: Var declarations: `var WEB_BUDDY_CONFIG = {}`"
        },
        {
          "variation": "webBuddy",
          "line": 131,
          "column": 39,
          "context": "string",
          "lineText": "- TC-CTX-012: Destructuring: `const { webBuddy, config } = options`"
        },
        {
          "variation": "webBuddy",
          "line": 132,
          "column": 44,
          "context": "string",
          "lineText": "- TC-CTX-013: Array destructuring: `const [webBuddy] = clients`"
        },
        {
          "variation": "webBuddy",
          "line": 133,
          "column": 48,
          "context": "string",
          "lineText": "- TC-CTX-014: Object shorthand: `const obj = { webBuddy }`"
        },
        {
          "variation": "webBuddy",
          "line": 134,
          "column": 48,
          "context": "string",
          "lineText": "- TC-CTX-015: Function params: `function setup(webBuddy, options)`"
        },
        {
          "variation": "webBuddy",
          "line": 135,
          "column": 46,
          "context": "string",
          "lineText": "- TC-CTX-016: Default params: `function init(webBuddy = defaultClient)`"
        },
        {
          "variation": "WebBuddy",
          "line": 139,
          "column": 32,
          "context": "string",
          "lineText": "- TC-CTX-017: Single quotes: `'WebBuddy Extension v1.0'`"
        },
        {
          "variation": "\"web-buddy",
          "line": 140,
          "column": 31,
          "context": "string",
          "lineText": "- TC-CTX-018: Double quotes: `\"web-buddy-initialized\"`"
        },
        {
          "variation": "webBuddy",
          "line": 141,
          "column": 40,
          "context": "string",
          "lineText": "- TC-CTX-019: Template literals: `` `${webBuddy} connected` ``"
        },
        {
          "variation": "Web-Buddy",
          "line": 142,
          "column": 39,
          "context": "string",
          "lineText": "- TC-CTX-020: Multi-line strings: `` `Web-Buddy\\nStatus: Active` ``"
        },
        {
          "variation": "webBuddy",
          "line": 143,
          "column": 33,
          "context": "string",
          "lineText": "- TC-CTX-021: JSON strings: `'{\"webBuddy\": {\"enabled\": true}}'`"
        },
        {
          "variation": "WebBuddy",
          "line": 144,
          "column": 33,
          "context": "string",
          "lineText": "- TC-CTX-022: Error messages: `'WebBuddy initialization failed'`"
        },
        {
          "variation": "web-buddy",
          "line": 145,
          "column": 43,
          "context": "string",
          "lineText": "- TC-CTX-023: Log messages: `console.log('web-buddy started')`"
        },
        {
          "variation": "// WebBuddy",
          "line": 146,
          "column": 38,
          "context": "string",
          "lineText": "- TC-CTX-024: Comments in strings: `\"// WebBuddy configuration\"`"
        },
        {
          "variation": "// WebBuddy",
          "line": 150,
          "column": 38,
          "context": "string",
          "lineText": "- TC-CTX-025: Single-line comments: `// WebBuddy feature flag`"
        },
        {
          "variation": "* Web-Buddy",
          "line": 151,
          "column": 38,
          "context": "string",
          "lineText": "- TC-CTX-026: Multi-line comments: `/* Web-Buddy module */`"
        },
        {
          "variation": "** @param {WebBuddy} buddy",
          "line": 152,
          "column": 33,
          "context": "string",
          "lineText": "- TC-CTX-027: JSDoc comments: `/** @param {WebBuddy} buddy */`"
        },
        {
          "variation": "// TODO: Update webBuddy",
          "line": 153,
          "column": 31,
          "context": "string",
          "lineText": "- TC-CTX-028: TODO comments: `// TODO: Update webBuddy config`"
        },
        {
          "variation": "// FIXME: web-buddy",
          "line": 154,
          "column": 32,
          "context": "string",
          "lineText": "- TC-CTX-029: FIXME comments: `// FIXME: web-buddy connection issue`"
        },
        {
          "variation": "* WebBuddy",
          "line": 155,
          "column": 33,
          "context": "string",
          "lineText": "- TC-CTX-030: Block comments: `/* WebBuddy\\n * Configuration\\n */`"
        },
        {
          "variation": "// webBuddy",
          "line": 156,
          "column": 46,
          "context": "string",
          "lineText": "- TC-CTX-031: Inline comments: `const x = 1; // webBuddy count`"
        },
        {
          "variation": "<!-- Web-Buddy",
          "line": 157,
          "column": 31,
          "context": "string",
          "lineText": "- TC-CTX-032: HTML comments: `<!-- Web-Buddy Widget -->`"
        },
        {
          "variation": "WebBuddy",
          "line": 161,
          "column": 42,
          "context": "string",
          "lineText": "- TC-CTX-033: Class declarations: `class WebBuddyAdapter {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 162,
          "column": 41,
          "context": "string",
          "lineText": "- TC-CTX-034: Class expressions: `const WebBuddy = class {}`"
        },
        {
          "variation": "Buddy",
          "line": 163,
          "column": 42,
          "context": "string",
          "lineText": "- TC-CTX-035: Extended classes: `class MyBuddy extends WebBuddy {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 163,
          "column": 56,
          "context": "string",
          "lineText": "- TC-CTX-035: Extended classes: `class MyBuddy extends WebBuddy {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 164,
          "column": 52,
          "context": "string",
          "lineText": "- TC-CTX-036: Implements: `class Client implements WebBuddyInterface {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 165,
          "column": 39,
          "context": "string",
          "lineText": "- TC-CTX-037: Generic classes: `class WebBuddyManager<T> {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 166,
          "column": 49,
          "context": "string",
          "lineText": "- TC-CTX-038: Abstract classes: `abstract class WebBuddyBase {}`"
        },
        {
          "variation": "WebBuddy",
          "line": 167,
          "column": 52,
          "context": "string",
          "lineText": "- TC-CTX-039: Nested classes: `class Outer { class WebBuddy {} }`"
        },
        {
          "variation": "webBuddy",
          "line": 168,
          "column": 44,
          "context": "string",
          "lineText": "- TC-CTX-040: Class properties: `class X { webBuddy = new Buddy() }`"
        },
        {
          "variation": "Buddy",
          "line": 168,
          "column": 59,
          "context": "string",
          "lineText": "- TC-CTX-040: Class properties: `class X { webBuddy = new Buddy() }`"
        },
        {
          "variation": "webBuddy",
          "line": 174,
          "column": 43,
          "context": "string",
          "lineText": "- TC-EDGE-001: Mixed in same line: `const webBuddy = new WebBuddy(); // WEB_BUDDY instance`"
        },
        {
          "variation": "WebBuddy",
          "line": 174,
          "column": 58,
          "context": "string",
          "lineText": "- TC-EDGE-001: Mixed in same line: `const webBuddy = new WebBuddy(); // WEB_BUDDY instance`"
        },
        {
          "variation": "// WEB_BUDDY",
          "line": 174,
          "column": 70,
          "context": "string",
          "lineText": "- TC-EDGE-001: Mixed in same line: `const webBuddy = new WebBuddy(); // WEB_BUDDY instance`"
        },
        {
          "variation": "webBuddy",
          "line": 175,
          "column": 34,
          "context": "string",
          "lineText": "- TC-EDGE-002: Partial matches: `webBuddyConfig`, `buddyWeb`, `prebuddy`"
        },
        {
          "variation": "`buddy",
          "line": 175,
          "column": 51,
          "context": "code",
          "lineText": "- TC-EDGE-002: Partial matches: `webBuddyConfig`, `buddyWeb`, `prebuddy`"
        },
        {
          "variation": "buddy",
          "line": 175,
          "column": 67,
          "context": "string",
          "lineText": "- TC-EDGE-002: Partial matches: `webBuddyConfig`, `buddyWeb`, `prebuddy`"
        },
        {
          "variation": "`buddy",
          "line": 176,
          "column": 38,
          "context": "code",
          "lineText": "- TC-EDGE-003: Concatenated: `web` + `buddy`, `'web' + 'buddy'`"
        },
        {
          "variation": "'buddy",
          "line": 176,
          "column": 56,
          "context": "string",
          "lineText": "- TC-EDGE-003: Concatenated: `web` + `buddy`, `'web' + 'buddy'`"
        },
        {
          "variation": "buddy",
          "line": 177,
          "column": 42,
          "context": "string",
          "lineText": "- TC-EDGE-004: Split across lines: `web\\nbuddy`"
        },
        {
          "variation": "webBuddy",
          "line": 179,
          "column": 31,
          "context": "string",
          "lineText": "- TC-EDGE-006: With numbers: `webBuddy2`, `web-buddy-v3`"
        },
        {
          "variation": "web-buddy",
          "line": 179,
          "column": 44,
          "context": "string",
          "lineText": "- TC-EDGE-006: With numbers: `webBuddy2`, `web-buddy-v3`"
        },
        {
          "variation": ".buddy",
          "line": 180,
          "column": 40,
          "context": "string",
          "lineText": "- TC-EDGE-007: With special chars: `web.buddy`, `web$buddy`, `web#buddy`"
        },
        {
          "variation": "buddy",
          "line": 180,
          "column": 54,
          "context": "string",
          "lineText": "- TC-EDGE-007: With special chars: `web.buddy`, `web$buddy`, `web#buddy`"
        },
        {
          "variation": "#buddy",
          "line": 180,
          "column": 66,
          "context": "string",
          "lineText": "- TC-EDGE-007: With special chars: `web.buddy`, `web$buddy`, `web#buddy`"
        },
        {
          "variation": "WeBbUdDy",
          "line": 181,
          "column": 34,
          "context": "string",
          "lineText": "- TC-EDGE-008: Case variations: `WeBbUdDy`, `wEb-BuDdY`"
        },
        {
          "variation": "wEb-BuDdY",
          "line": 181,
          "column": 46,
          "context": "string",
          "lineText": "- TC-EDGE-008: Case variations: `WeBbUdDy`, `wEb-BuDdY`"
        },
        {
          "variation": "buddy",
          "line": 185,
          "column": 27,
          "context": "code",
          "lineText": "- TC-FALSE-001: Unrelated buddy: `studybuddy`, `buddypress`"
        },
        {
          "variation": "buddy",
          "line": 185,
          "column": 40,
          "context": "string",
          "lineText": "- TC-FALSE-001: Unrelated buddy: `studybuddy`, `buddypress`"
        },
        {
          "variation": "`buddy",
          "line": 185,
          "column": 48,
          "context": "code",
          "lineText": "- TC-FALSE-001: Unrelated buddy: `studybuddy`, `buddypress`"
        },
        {
          "variation": "webbuddy",
          "line": 186,
          "column": 33,
          "context": "string",
          "lineText": "- TC-FALSE-002: Partial words: `webbuddying`, `buddyweb`"
        },
        {
          "variation": "`buddy",
          "line": 186,
          "column": 47,
          "context": "code",
          "lineText": "- TC-FALSE-002: Partial words: `webbuddying`, `buddyweb`"
        },
        {
          "variation": "`buddy",
          "line": 187,
          "column": 36,
          "context": "code",
          "lineText": "- TC-FALSE-003: Different context: `buddy system`, `buddy list`"
        },
        {
          "variation": "`buddy",
          "line": 187,
          "column": 52,
          "context": "code",
          "lineText": "- TC-FALSE-003: Different context: `buddy system`, `buddy list`"
        },
        {
          "variation": "buddy",
          "line": 188,
          "column": 37,
          "context": "string",
          "lineText": "- TC-FALSE-004: Non-code text: `\"My buddy likes web development\"`"
        },
        {
          "variation": "/buddy",
          "line": 189,
          "column": 35,
          "context": "string",
          "lineText": "- TC-FALSE-005: URLs: `example.com/buddy`, `buddy.example.com`"
        },
        {
          "variation": "`buddy",
          "line": 189,
          "column": 44,
          "context": "code",
          "lineText": "- TC-FALSE-005: URLs: `example.com/buddy`, `buddy.example.com`"
        },
        {
          "variation": "@buddy",
          "line": 190,
          "column": 38,
          "context": "string",
          "lineText": "- TC-FALSE-006: Unrelated packages: `@buddy/webpack`"
        },
        {
          "variation": "`Buddy",
          "line": 191,
          "column": 37,
          "context": "code",
          "lineText": "- TC-FALSE-007: Different products: `BuddyBuild`, `GitBuddy`"
        },
        {
          "variation": "Buddy",
          "line": 191,
          "column": 55,
          "context": "string",
          "lineText": "- TC-FALSE-007: Different products: `BuddyBuild`, `GitBuddy`"
        },
        {
          "variation": "buddy",
          "line": 201,
          "column": 26,
          "context": "code",
          "lineText": "5. ✅ Nested occurrences (buddy within buddy contexts)"
        },
        {
          "variation": "buddy",
          "line": 201,
          "column": 39,
          "context": "code",
          "lineText": "5. ✅ Nested occurrences (buddy within buddy contexts)"
        },
        {
          "variation": "**Note**: This test plan ensures comprehensive coverage of all possible \"buddy",
          "line": 236,
          "column": 1,
          "context": "code",
          "lineText": "**Note**: This test plan ensures comprehensive coverage of all possible \"buddy\" variations in the codebase. The Engineer's script should be validated against these test cases to ensure nothing is missed."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/ecosystem-overview.html",
      "occurrenceCount": 82,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 26,
          "context": "string",
          "lineText": "title: \"TypeScript-EDA & Web-Buddy Ecosystem Overview\""
        },
        {
          "variation": "Web-Buddy",
          "line": 11,
          "column": 27,
          "context": "code",
          "lineText": "<p>The TypeScript-EDA and Web-Buddy ecosystem represents a revolutionary"
        },
        {
          "variation": "Web-Buddy",
          "line": 23,
          "column": 56,
          "context": "code",
          "lineText": "<li><strong><strong>Framework Layer</strong></strong>: Web-Buddy"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 26,
          "column": 12,
          "context": "code",
          "lineText": "tools like ChatGPT-buddy built on Web-Buddy</li>"
        },
        {
          "variation": "Web-Buddy",
          "line": 26,
          "column": 35,
          "context": "code",
          "lineText": "tools like ChatGPT-buddy built on Web-Buddy</li>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 31,
          "column": 7,
          "context": "code",
          "lineText": "│  📱 ChatGPT-Buddy     │  🐙 GitHub-Buddy   │  📧 Gmail-Buddy │"
        },
        {
          "variation": "-Buddy",
          "line": 31,
          "column": 37,
          "context": "code",
          "lineText": "│  📱 ChatGPT-Buddy     │  🐙 GitHub-Buddy   │  📧 Gmail-Buddy │"
        },
        {
          "variation": "-Buddy",
          "line": 31,
          "column": 57,
          "context": "code",
          "lineText": "│  📱 ChatGPT-Buddy     │  🐙 GitHub-Buddy   │  📧 Gmail-Buddy │"
        },
        {
          "variation": "Web-Buddy",
          "line": 36,
          "column": 7,
          "context": "code",
          "lineText": "│  🌐 Web-Buddy Server  │  🧩 Web-Buddy Extension             │"
        },
        {
          "variation": "Web-Buddy",
          "line": 36,
          "column": 31,
          "context": "code",
          "lineText": "│  🌐 Web-Buddy Server  │  🧩 Web-Buddy Extension             │"
        },
        {
          "variation": "\"web-buddy",
          "line": 85,
          "column": 8,
          "context": "code",
          "lineText": "<h3 id=\"web-buddynodejs-server\">@web-buddy/nodejs-server</h3>"
        },
        {
          "variation": "@web-buddy",
          "line": 85,
          "column": 33,
          "context": "code",
          "lineText": "<h3 id=\"web-buddynodejs-server\">@web-buddy/nodejs-server</h3>"
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 94,
          "column": 24,
          "context": "code",
          "lineText": "class=\"verbatim\">https://github.com/rydnr/web-buddy-nodejs-server</code></li>"
        },
        {
          "variation": "\"web-buddy",
          "line": 96,
          "column": 8,
          "context": "code",
          "lineText": "<h3 id=\"web-buddybrowser-extension\">@web-buddy/browser-extension</h3>"
        },
        {
          "variation": "@web-buddy",
          "line": 96,
          "column": 37,
          "context": "code",
          "lineText": "<h3 id=\"web-buddybrowser-extension\">@web-buddy/browser-extension</h3>"
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 105,
          "column": 24,
          "context": "code",
          "lineText": "class=\"verbatim\">https://github.com/rydnr/web-buddy-browser-extension</code></li>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 108,
          "column": 9,
          "context": "string",
          "lineText": "<h3 id=\"chatgpt-buddyserver\">@chatgpt-buddy/server</h3>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 108,
          "column": 31,
          "context": "code",
          "lineText": "<h3 id=\"chatgpt-buddyserver\">@chatgpt-buddy/server</h3>"
        },
        {
          "variation": "@web-buddy",
          "line": 115,
          "column": 18,
          "context": "code",
          "lineText": "class=\"verbatim\">@web-buddy/nodejs-server</code>, All <code"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 118,
          "column": 24,
          "context": "code",
          "lineText": "class=\"verbatim\">https://github.com/rydnr/chatgpt-buddy</code> (server"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 121,
          "column": 9,
          "context": "string",
          "lineText": "<h3 id=\"chatgpt-buddyextension\">@chatgpt-buddy/extension</h3>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 121,
          "column": 34,
          "context": "code",
          "lineText": "<h3 id=\"chatgpt-buddyextension\">@chatgpt-buddy/extension</h3>"
        },
        {
          "variation": "Web-Buddy",
          "line": 124,
          "column": 20,
          "context": "code",
          "lineText": "extension built on Web-Buddy framework</li>"
        },
        {
          "variation": "@web-buddy",
          "line": 128,
          "column": 18,
          "context": "code",
          "lineText": "class=\"verbatim\">@web-buddy/browser-extension</code>, All <code"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 131,
          "column": 24,
          "context": "code",
          "lineText": "class=\"verbatim\">https://github.com/rydnr/chatgpt-buddy</code>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 134,
          "column": 9,
          "context": "string",
          "lineText": "<h3 id=\"chatgpt-buddyclient\">@chatgpt-buddy/client</h3>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 134,
          "column": 31,
          "context": "code",
          "lineText": "<h3 id=\"chatgpt-buddyclient\">@chatgpt-buddy/client</h3>"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 143,
          "column": 24,
          "context": "code",
          "lineText": "class=\"verbatim\">https://github.com/rydnr/chatgpt-buddy</code> (client"
        },
        {
          "variation": "@web-buddy",
          "line": 157,
          "column": 8,
          "context": "code",
          "lineText": "├─ @web-buddy/nodejs-server"
        },
        {
          "variation": "@web-buddy",
          "line": 158,
          "column": 8,
          "context": "code",
          "lineText": "├─ @web-buddy/browser-extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 160,
          "column": 9,
          "context": "code",
          "lineText": "├─ @chatgpt-buddy/server"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 161,
          "column": 9,
          "context": "code",
          "lineText": "├─ @chatgpt-buddy/extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 162,
          "column": 9,
          "context": "code",
          "lineText": "├─ @chatgpt-buddy/client"
        },
        {
          "variation": "-buddy",
          "line": 163,
          "column": 15,
          "context": "code",
          "lineText": "├─ @github-buddy/* (future)"
        },
        {
          "variation": "-buddy",
          "line": 164,
          "column": 14,
          "context": "code",
          "lineText": "└─ @gmail-buddy/* (future)"
        },
        {
          "variation": "Web-Buddy",
          "line": 172,
          "column": 5,
          "context": "code",
          "lineText": "<th>Web-Buddy</th>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 173,
          "column": 5,
          "context": "code",
          "lineText": "<th>ChatGPT-Buddy</th>"
        },
        {
          "variation": "Web-Buddy",
          "line": 196,
          "column": 5,
          "context": "code",
          "lineText": "<td>Web-Buddy Server</td>"
        },
        {
          "variation": "Web-Buddy",
          "line": 202,
          "column": 5,
          "context": "code",
          "lineText": "<td>Web-Buddy Extension</td>"
        },
        {
          "variation": "Web-Buddy",
          "line": 232,
          "column": 63,
          "context": "code",
          "lineText": "<li><strong><strong>Framework Second</strong></strong>: Build Web-Buddy"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 235,
          "column": 30,
          "context": "code",
          "lineText": "specialized implementations (ChatGPT-buddy, etc.)</li>"
        },
        {
          "variation": "Web-Buddy",
          "line": 248,
          "column": 64,
          "context": "code",
          "lineText": "<li><strong><strong>Update Frameworks</strong></strong>: Adapt Web-Buddy"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 251,
          "column": 8,
          "context": "code",
          "lineText": "update ChatGPT-buddy and other tools</li>"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 262,
          "column": 4,
          "context": "code",
          "lineText": "in ChatGPT-buddy and implementations</li>"
        },
        {
          "variation": "-buddy",
          "line": 266,
          "column": 46,
          "context": "code",
          "lineText": "<p>Building new automation frameworks (GitHub-buddy, Gmail-buddy,"
        },
        {
          "variation": "-buddy",
          "line": 266,
          "column": 59,
          "context": "code",
          "lineText": "<p>Building new automation frameworks (GitHub-buddy, Gmail-buddy,"
        },
        {
          "variation": "// 1. Use Web-Buddy",
          "line": 268,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// 1. Use Web-Buddy as foundation"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 269,
          "column": 40,
          "context": "code",
          "lineText": "import { BackgroundApplication } from &#39;@web-buddy/browser-extension&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 270,
          "column": 36,
          "context": "code",
          "lineText": "import { ServerApplication } from &#39;@web-buddy/nodejs-server&#39;;"
        },
        {
          "variation": "Buddy",
          "line": 274,
          "column": 20,
          "context": "code",
          "lineText": "export class GitHubBuddyApplication extends BackgroundApplication {"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 279,
          "column": 30,
          "context": "code",
          "lineText": "<p>Using existing tools like ChatGPT-buddy:</p>"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 280,
          "column": 46,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { createChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 280,
          "column": 73,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { createChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 282,
          "column": 28,
          "context": "code",
          "lineText": "const client = await createChatGPTBuddyClient({"
        },
        {
          "variation": "@web-buddy",
          "line": 363,
          "column": 5,
          "context": "code",
          "lineText": "<td>@web-buddy/nodejs-server</td>"
        },
        {
          "variation": "@web-buddy",
          "line": 369,
          "column": 5,
          "context": "code",
          "lineText": "<td>@web-buddy/browser-extension</td>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 375,
          "column": 6,
          "context": "code",
          "lineText": "<td>@chatgpt-buddy/client</td>"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 387,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-buddy installation</li>"
        },
        {
          "variation": "@web-buddy",
          "line": 425,
          "column": 21,
          "context": "code",
          "lineText": "<li><strong><strong>@web-buddy</strong></strong>: Web automation"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 427,
          "column": 22,
          "context": "code",
          "lineText": "<li><strong><strong>@chatgpt-buddy</strong></strong>: AI automation"
        },
        {
          "variation": "-buddy",
          "line": 433,
          "column": 28,
          "context": "code",
          "lineText": "<li><strong><strong>@github-buddy</strong></strong>: Git workflow"
        },
        {
          "variation": "-buddy",
          "line": 435,
          "column": 27,
          "context": "code",
          "lineText": "<li><strong><strong>@gmail-buddy</strong></strong>: Email management"
        },
        {
          "variation": "-buddy",
          "line": 437,
          "column": 26,
          "context": "code",
          "lineText": "<li><strong><strong>@docs-buddy</strong></strong>: Documentation"
        },
        {
          "variation": "-buddy",
          "line": 439,
          "column": 29,
          "context": "code",
          "lineText": "<li><strong><strong>@testing-buddy</strong></strong>: Automated testing"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 461,
          "column": 19,
          "context": "code",
          "lineText": "class=\"verbatim\">@chatgpt-buddy/*</code></li>"
        },
        {
          "variation": "@web-buddy",
          "line": 463,
          "column": 18,
          "context": "code",
          "lineText": "class=\"verbatim\">@web-buddy/*</code></li>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 468,
          "column": 38,
          "context": "code",
          "lineText": "<pre class=\"bash\"><code>npm install @chatgpt-buddy/client  # For AI automation"
        },
        {
          "variation": "@web-buddy",
          "line": 469,
          "column": 13,
          "context": "code",
          "lineText": "npm install @web-buddy/browser-extension  # For custom automation"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 475,
          "column": 16,
          "context": "string",
          "lineText": "<li><a href=\"./chatgpt-buddy/getting-started.org\">ChatGPT-Buddy Getting"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 475,
          "column": 51,
          "context": "code",
          "lineText": "<li><a href=\"./chatgpt-buddy/getting-started.org\">ChatGPT-Buddy Getting"
        },
        {
          "variation": "/web-buddy",
          "line": 477,
          "column": 15,
          "context": "string",
          "lineText": "<li><a href=\"./web-buddy/getting-started.org\">Web-Buddy Getting"
        },
        {
          "variation": "Web-Buddy",
          "line": 477,
          "column": 47,
          "context": "code",
          "lineText": "<li><a href=\"./web-buddy/getting-started.org\">Web-Buddy Getting"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 486,
          "column": 41,
          "context": "code",
          "lineText": "<pre class=\"bash\"><code>git clone https://github.com/rydnr/chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 487,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 496,
          "column": 58,
          "context": "code",
          "lineText": "<li><strong><strong>Framework</strong></strong>: Enhance Web-Buddy"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 499,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-buddy features</li>"
        },
        {
          "variation": "Web-Buddy",
          "line": 517,
          "column": 21,
          "context": "code",
          "lineText": "<li><strong><strong>Web-Buddy</strong></strong>: <a"
        },
        {
          "variation": "/web-buddy",
          "line": 518,
          "column": 8,
          "context": "string",
          "lineText": "href=\"./web-buddy/\">Framework Documentation</a></li>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 519,
          "column": 21,
          "context": "code",
          "lineText": "<li><strong><strong>ChatGPT-Buddy</strong></strong>: <a"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 520,
          "column": 9,
          "context": "string",
          "lineText": "href=\"./chatgpt-buddy/\">Implementation Documentation</a></li>"
        },
        {
          "variation": "web-buddy",
          "line": 532,
          "column": 18,
          "context": "code",
          "lineText": "class=\"verbatim\">web-buddy</code> tags</li>"
        },
        {
          "variation": "Web-Buddy",
          "line": 549,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy ecosystem provides the foundation for reliable, maintainable,"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/ecosystem-overview.org",
      "occurrenceCount": 74,
      "references": [
        {
          "variation": "#+TITLE: TypeScript-EDA & Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: TypeScript-EDA & Web-Buddy Ecosystem Overview"
        },
        {
          "variation": "Web-Buddy",
          "line": 8,
          "column": 24,
          "context": "code",
          "lineText": "The TypeScript-EDA and Web-Buddy ecosystem represents a revolutionary approach to web automation, combining event-driven architecture with intelligent pattern learning. This document provides a comprehensive overview of the multi-repository architecture and the relationships between all components."
        },
        {
          "variation": "**Framework Layer**: Web-Buddy",
          "line": 17,
          "column": 4,
          "context": "code",
          "lineText": "2. **Framework Layer**: Web-Buddy automation framework built on TypeScript-EDA"
        },
        {
          "variation": "**Implementation Layer**: Specialized tools like ChatGPT-buddy built on Web-Buddy",
          "line": 18,
          "column": 4,
          "context": "code",
          "lineText": "3. **Implementation Layer**: Specialized tools like ChatGPT-buddy built on Web-Buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 24,
          "column": 7,
          "context": "code",
          "lineText": "│  📱 ChatGPT-Buddy     │  🐙 GitHub-Buddy   │  📧 Gmail-Buddy │"
        },
        {
          "variation": "-Buddy",
          "line": 24,
          "column": 37,
          "context": "code",
          "lineText": "│  📱 ChatGPT-Buddy     │  🐙 GitHub-Buddy   │  📧 Gmail-Buddy │"
        },
        {
          "variation": "-Buddy",
          "line": 24,
          "column": 57,
          "context": "code",
          "lineText": "│  📱 ChatGPT-Buddy     │  🐙 GitHub-Buddy   │  📧 Gmail-Buddy │"
        },
        {
          "variation": "Web-Buddy",
          "line": 29,
          "column": 7,
          "context": "code",
          "lineText": "│  🌐 Web-Buddy Server  │  🧩 Web-Buddy Extension             │"
        },
        {
          "variation": "Web-Buddy",
          "line": 29,
          "column": 31,
          "context": "code",
          "lineText": "│  🌐 Web-Buddy Server  │  🧩 Web-Buddy Extension             │"
        },
        {
          "variation": "*** @web-buddy",
          "line": 65,
          "column": 1,
          "context": "code",
          "lineText": "*** @web-buddy/nodejs-server"
        },
        {
          "variation": "**Repository**: =https://github.com/rydnr/web-buddy",
          "line": 69,
          "column": 3,
          "context": "code",
          "lineText": "- **Repository**: =https://github.com/rydnr/web-buddy-nodejs-server="
        },
        {
          "variation": "*** @web-buddy",
          "line": 71,
          "column": 1,
          "context": "code",
          "lineText": "*** @web-buddy/browser-extension"
        },
        {
          "variation": "**Repository**: =https://github.com/rydnr/web-buddy",
          "line": 75,
          "column": 3,
          "context": "code",
          "lineText": "- **Repository**: =https://github.com/rydnr/web-buddy-browser-extension="
        },
        {
          "variation": "*** @chatgpt-buddy",
          "line": 79,
          "column": 1,
          "context": "code",
          "lineText": "*** @chatgpt-buddy/server"
        },
        {
          "variation": "**Dependencies**: =@web-buddy",
          "line": 82,
          "column": 3,
          "context": "code",
          "lineText": "- **Dependencies**: =@web-buddy/nodejs-server=, All =@typescript-eda/*= packages"
        },
        {
          "variation": "**Repository**: =https://github.com/rydnr/chatgpt-buddy",
          "line": 83,
          "column": 3,
          "context": "code",
          "lineText": "- **Repository**: =https://github.com/rydnr/chatgpt-buddy= (server component)"
        },
        {
          "variation": "*** @chatgpt-buddy",
          "line": 85,
          "column": 1,
          "context": "code",
          "lineText": "*** @chatgpt-buddy/extension"
        },
        {
          "variation": "**Purpose**: AI automation browser extension built on Web-Buddy",
          "line": 86,
          "column": 3,
          "context": "code",
          "lineText": "- **Purpose**: AI automation browser extension built on Web-Buddy framework"
        },
        {
          "variation": "**Dependencies**: =@web-buddy",
          "line": 88,
          "column": 3,
          "context": "code",
          "lineText": "- **Dependencies**: =@web-buddy/browser-extension=, All =@typescript-eda/*= packages"
        },
        {
          "variation": "**Repository**: =https://github.com/rydnr/chatgpt-buddy",
          "line": 89,
          "column": 3,
          "context": "code",
          "lineText": "- **Repository**: =https://github.com/rydnr/chatgpt-buddy= (extension component)"
        },
        {
          "variation": "*** @chatgpt-buddy",
          "line": 91,
          "column": 1,
          "context": "code",
          "lineText": "*** @chatgpt-buddy/client"
        },
        {
          "variation": "**Repository**: =https://github.com/rydnr/chatgpt-buddy",
          "line": 95,
          "column": 3,
          "context": "code",
          "lineText": "- **Repository**: =https://github.com/rydnr/chatgpt-buddy= (client component)"
        },
        {
          "variation": "@web-buddy",
          "line": 111,
          "column": 8,
          "context": "code",
          "lineText": "├─ @web-buddy/nodejs-server"
        },
        {
          "variation": "@web-buddy",
          "line": 112,
          "column": 8,
          "context": "code",
          "lineText": "├─ @web-buddy/browser-extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 114,
          "column": 9,
          "context": "code",
          "lineText": "├─ @chatgpt-buddy/server"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 115,
          "column": 9,
          "context": "code",
          "lineText": "├─ @chatgpt-buddy/extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 116,
          "column": 9,
          "context": "code",
          "lineText": "├─ @chatgpt-buddy/client"
        },
        {
          "variation": "-buddy",
          "line": 117,
          "column": 15,
          "context": "code",
          "lineText": "├─ @github-buddy/* (future)"
        },
        {
          "variation": "-buddy",
          "line": 118,
          "column": 14,
          "context": "code",
          "lineText": "└─ @gmail-buddy/* (future)"
        },
        {
          "variation": "Web-Buddy",
          "line": 123,
          "column": 30,
          "context": "code",
          "lineText": "| Package | TypeScript-EDA | Web-Buddy | ChatGPT-Buddy |"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 123,
          "column": 42,
          "context": "code",
          "lineText": "| Package | TypeScript-EDA | Web-Buddy | ChatGPT-Buddy |"
        },
        {
          "variation": "Web-Buddy",
          "line": 128,
          "column": 3,
          "context": "code",
          "lineText": "| Web-Buddy Server | 1.0.0 | 1.0.0 | - |"
        },
        {
          "variation": "Web-Buddy",
          "line": 129,
          "column": 3,
          "context": "code",
          "lineText": "| Web-Buddy Extension | 1.0.0 | 1.0.0 | - |"
        },
        {
          "variation": "**Framework Second**: Build Web-Buddy",
          "line": 139,
          "column": 4,
          "context": "code",
          "lineText": "2. **Framework Second**: Build Web-Buddy framework on stable foundation"
        },
        {
          "variation": "**Implementation Third**: Create specialized implementations (ChatGPT-buddy",
          "line": 140,
          "column": 4,
          "context": "code",
          "lineText": "3. **Implementation Third**: Create specialized implementations (ChatGPT-buddy, etc.)"
        },
        {
          "variation": "**Update Frameworks**: Adapt Web-Buddy",
          "line": 149,
          "column": 4,
          "context": "code",
          "lineText": "4. **Update Frameworks**: Adapt Web-Buddy packages to foundation changes"
        },
        {
          "variation": "**Update Implementations**: Finally update ChatGPT-buddy",
          "line": 150,
          "column": 4,
          "context": "code",
          "lineText": "5. **Update Implementations**: Finally update ChatGPT-buddy and other tools"
        },
        {
          "variation": "**E2E Tests**: Full ecosystem testing in ChatGPT-buddy",
          "line": 157,
          "column": 3,
          "context": "code",
          "lineText": "- **E2E Tests**: Full ecosystem testing in ChatGPT-buddy and implementations"
        },
        {
          "variation": "-buddy",
          "line": 163,
          "column": 43,
          "context": "code",
          "lineText": "Building new automation frameworks (GitHub-buddy, Gmail-buddy, etc.):"
        },
        {
          "variation": "-buddy",
          "line": 163,
          "column": 56,
          "context": "code",
          "lineText": "Building new automation frameworks (GitHub-buddy, Gmail-buddy, etc.):"
        },
        {
          "variation": "// 1. Use Web-Buddy",
          "line": 166,
          "column": 1,
          "context": "code",
          "lineText": "// 1. Use Web-Buddy as foundation"
        },
        {
          "variation": "@web-buddy",
          "line": 167,
          "column": 40,
          "context": "string",
          "lineText": "import { BackgroundApplication } from '@web-buddy/browser-extension';"
        },
        {
          "variation": "@web-buddy",
          "line": 168,
          "column": 36,
          "context": "string",
          "lineText": "import { ServerApplication } from '@web-buddy/nodejs-server';"
        },
        {
          "variation": "Buddy",
          "line": 172,
          "column": 20,
          "context": "code",
          "lineText": "export class GitHubBuddyApplication extends BackgroundApplication {"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 179,
          "column": 27,
          "context": "code",
          "lineText": "Using existing tools like ChatGPT-buddy:"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 182,
          "column": 16,
          "context": "code",
          "lineText": "import { createChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 182,
          "column": 44,
          "context": "string",
          "lineText": "import { createChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 184,
          "column": 28,
          "context": "code",
          "lineText": "const client = await createChatGPTBuddyClient({"
        },
        {
          "variation": "@web-buddy",
          "line": 241,
          "column": 3,
          "context": "code",
          "lineText": "| @web-buddy/nodejs-server | ~150KB | 3 + extras | <100ms |"
        },
        {
          "variation": "@web-buddy",
          "line": 242,
          "column": 3,
          "context": "code",
          "lineText": "| @web-buddy/browser-extension | ~200KB | 3 + browser APIs | <200ms |"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 243,
          "column": 4,
          "context": "code",
          "lineText": "| @chatgpt-buddy/client | ~80KB | 3 + HTTP client | <50ms |"
        },
        {
          "variation": "**Memory Usage**: ~50MB for full ChatGPT-buddy",
          "line": 248,
          "column": 3,
          "context": "code",
          "lineText": "- **Memory Usage**: ~50MB for full ChatGPT-buddy installation"
        },
        {
          "variation": "**@web-buddy",
          "line": 276,
          "column": 3,
          "context": "code",
          "lineText": "- **@web-buddy**: Web automation framework packages"
        },
        {
          "variation": "**@chatgpt-buddy",
          "line": 277,
          "column": 3,
          "context": "code",
          "lineText": "- **@chatgpt-buddy**: AI automation implementation packages"
        },
        {
          "variation": "**@github-buddy",
          "line": 283,
          "column": 3,
          "context": "code",
          "lineText": "- **@github-buddy**: Git workflow automation"
        },
        {
          "variation": "**@gmail-buddy",
          "line": 284,
          "column": 3,
          "context": "code",
          "lineText": "- **@gmail-buddy**: Email management automation"
        },
        {
          "variation": "**@docs-buddy",
          "line": 285,
          "column": 3,
          "context": "code",
          "lineText": "- **@docs-buddy**: Documentation workflow automation"
        },
        {
          "variation": "**@testing-buddy",
          "line": 286,
          "column": 3,
          "context": "code",
          "lineText": "- **@testing-buddy**: Automated testing workflow tools"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 302,
          "column": 34,
          "context": "code",
          "lineText": "- AI automation: Start with =@chatgpt-buddy/*="
        },
        {
          "variation": "@web-buddy",
          "line": 303,
          "column": 41,
          "context": "code",
          "lineText": "- Custom web automation: Start with =@web-buddy/*="
        },
        {
          "variation": "chatgpt-buddy",
          "line": 308,
          "column": 17,
          "context": "code",
          "lineText": "npm install @chatgpt-buddy/client  # For AI automation"
        },
        {
          "variation": "@web-buddy",
          "line": 309,
          "column": 16,
          "context": "code",
          "lineText": "npm install @web-buddy/browser-extension  # For custom automation"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 314,
          "column": 10,
          "context": "code",
          "lineText": "- [[./chatgpt-buddy/getting-started.org][ChatGPT-Buddy Getting Started]]"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 314,
          "column": 45,
          "context": "code",
          "lineText": "- [[./chatgpt-buddy/getting-started.org][ChatGPT-Buddy Getting Started]]"
        },
        {
          "variation": "/web-buddy",
          "line": 315,
          "column": 9,
          "context": "code",
          "lineText": "- [[./web-buddy/getting-started.org][Web-Buddy Getting Started]]"
        },
        {
          "variation": "Web-Buddy",
          "line": 315,
          "column": 41,
          "context": "code",
          "lineText": "- [[./web-buddy/getting-started.org][Web-Buddy Getting Started]]"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 322,
          "column": 20,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 323,
          "column": 7,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "**Framework**: Enhance Web-Buddy",
          "line": 331,
          "column": 6,
          "context": "code",
          "lineText": "- **Framework**: Enhance Web-Buddy capabilities"
        },
        {
          "variation": "**Implementation**: Extend ChatGPT-buddy",
          "line": 332,
          "column": 6,
          "context": "code",
          "lineText": "- **Implementation**: Extend ChatGPT-buddy features"
        },
        {
          "variation": "**Web-Buddy**: [[./web-buddy",
          "line": 346,
          "column": 3,
          "context": "code",
          "lineText": "- **Web-Buddy**: [[./web-buddy/][Framework Documentation]]"
        },
        {
          "variation": "**ChatGPT-Buddy**: [[./chatgpt-buddy",
          "line": 347,
          "column": 3,
          "context": "code",
          "lineText": "- **ChatGPT-Buddy**: [[./chatgpt-buddy/][Implementation Documentation]]"
        },
        {
          "variation": "**Stack Overflow**: =typescript-eda= and =web-buddy",
          "line": 354,
          "column": 3,
          "context": "code",
          "lineText": "- **Stack Overflow**: =typescript-eda= and =web-buddy= tags"
        },
        {
          "variation": "Web-Buddy",
          "line": 363,
          "column": 275,
          "context": "string",
          "lineText": "This ecosystem represents a new paradigm in web automation, combining the robustness of event-driven architecture with the intelligence of AI-powered pattern learning. Whether you're building simple automation scripts or complex enterprise workflows, the TypeScript-EDA and Web-Buddy ecosystem provides the foundation for reliable, maintainable, and extensible solutions."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/migration-guide/README.org",
      "occurrenceCount": 63,
      "references": [
        {
          "variation": "# Migration Guide: Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "# Migration Guide: Web-Buddy to Semantest"
        },
        {
          "variation": "#+TITLE: Migration Guide: Web-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: Migration Guide: Web-Buddy to Semantest"
        },
        {
          "variation": "Web-Buddy",
          "line": 9,
          "column": 60,
          "context": "code",
          "lineText": "This comprehensive guide helps you migrate from the legacy Web-Buddy framework to the new Semantest ecosystem. The migration maintains 100% backward compatibility while providing access to enhanced semantic automation capabilities."
        },
        {
          "variation": "// OLD: Web-Buddy",
          "line": 102,
          "column": 1,
          "context": "code",
          "lineText": "// OLD: Web-Buddy Core"
        },
        {
          "variation": "WebBuddy",
          "line": 103,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 103,
          "column": 33,
          "context": "string",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "// OLD: Domain Buddy",
          "line": 111,
          "column": 1,
          "context": "code",
          "lineText": "// OLD: Domain Buddy Packages"
        },
        {
          "variation": "GoogleBuddy",
          "line": 112,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from 'google-buddy';"
        },
        {
          "variation": "google-buddy",
          "line": 112,
          "column": 36,
          "context": "string",
          "lineText": "import { GoogleBuddyClient } from 'google-buddy';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 113,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from 'chatgpt-buddy';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 113,
          "column": 37,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from 'chatgpt-buddy';"
        },
        {
          "variation": "Buddy",
          "line": 114,
          "column": 19,
          "context": "code",
          "lineText": "import { WikipediaBuddyClient } from 'wikipedia-buddy';"
        },
        {
          "variation": "-buddy",
          "line": 114,
          "column": 48,
          "context": "string",
          "lineText": "import { WikipediaBuddyClient } from 'wikipedia-buddy';"
        },
        {
          "variation": "// OLD: Web-Buddy",
          "line": 124,
          "column": 1,
          "context": "code",
          "lineText": "// OLD: Web-Buddy Server"
        },
        {
          "variation": "WebBuddy",
          "line": 125,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyServer } from '@web-buddy/server';"
        },
        {
          "variation": "@web-buddy",
          "line": 125,
          "column": 33,
          "context": "string",
          "lineText": "import { WebBuddyServer } from '@web-buddy/server';"
        },
        {
          "variation": "WebBuddy",
          "line": 128,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyServer } from '@semantest/nodejs.server';"
        },
        {
          "variation": "// OLD: GoogleBuddy",
          "line": 136,
          "column": 1,
          "context": "code",
          "lineText": "// OLD: GoogleBuddyClient"
        },
        {
          "variation": "GoogleBuddy",
          "line": 137,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from 'google-buddy';"
        },
        {
          "variation": "google-buddy",
          "line": 137,
          "column": 36,
          "context": "string",
          "lineText": "import { GoogleBuddyClient } from 'google-buddy';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 140,
          "column": 22,
          "context": "code",
          "lineText": "const client = new GoogleBuddyClient();"
        },
        {
          "variation": "GoogleBuddy",
          "line": 174,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from '@semantest/google.com';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 178,
          "column": 22,
          "context": "code",
          "lineText": "const client = new GoogleBuddyClient();"
        },
        {
          "variation": "// OLD: ChatGPTBuddy",
          "line": 188,
          "column": 1,
          "context": "code",
          "lineText": "// OLD: ChatGPTBuddyClient"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 189,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from 'chatgpt-buddy';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 189,
          "column": 37,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from 'chatgpt-buddy';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 192,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient();"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 229,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@semantest/chatgpt.com';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 232,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient();"
        },
        {
          "variation": "// OLD: WikipediaBuddy",
          "line": 246,
          "column": 1,
          "context": "code",
          "lineText": "// OLD: WikipediaBuddyClient"
        },
        {
          "variation": "Buddy",
          "line": 247,
          "column": 19,
          "context": "code",
          "lineText": "import { WikipediaBuddyClient } from 'wikipedia-buddy';"
        },
        {
          "variation": "-buddy",
          "line": 247,
          "column": 48,
          "context": "string",
          "lineText": "import { WikipediaBuddyClient } from 'wikipedia-buddy';"
        },
        {
          "variation": "Buddy",
          "line": 250,
          "column": 31,
          "context": "code",
          "lineText": "const client = new WikipediaBuddyClient();"
        },
        {
          "variation": "Buddy",
          "line": 290,
          "column": 19,
          "context": "code",
          "lineText": "import { WikipediaBuddyClient } from '@semantest/wikipedia.org';"
        },
        {
          "variation": "Buddy",
          "line": 293,
          "column": 31,
          "context": "code",
          "lineText": "const client = new WikipediaBuddyClient();"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 312,
          "column": 6,
          "context": "string",
          "lineText": "\"chatgpt-buddy\": \"^0.9.0\","
        },
        {
          "variation": "google-buddy",
          "line": 313,
          "column": 6,
          "context": "string",
          "lineText": "\"google-buddy\": \"^0.9.0\","
        },
        {
          "variation": "-buddy",
          "line": 314,
          "column": 15,
          "context": "string",
          "lineText": "\"wikipedia-buddy\": \"^0.9.0\","
        },
        {
          "variation": "@web-buddy",
          "line": 315,
          "column": 6,
          "context": "string",
          "lineText": "\"@web-buddy/core\": \"^0.9.0\","
        },
        {
          "variation": "@web-buddy",
          "line": 316,
          "column": 6,
          "context": "string",
          "lineText": "\"@web-buddy/server\": \"^0.9.0\","
        },
        {
          "variation": "chatgpt-buddy",
          "line": 370,
          "column": 7,
          "context": "string",
          "lineText": "'^chatgpt-buddy$': '<rootDir>/node_modules/chatgpt-buddy',"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 370,
          "column": 48,
          "context": "string",
          "lineText": "'^chatgpt-buddy$': '<rootDir>/node_modules/chatgpt-buddy',"
        },
        {
          "variation": "GoogleBuddy",
          "line": 392,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from 'google-buddy';"
        },
        {
          "variation": "google-buddy",
          "line": 392,
          "column": 36,
          "context": "string",
          "lineText": "import { GoogleBuddyClient } from 'google-buddy';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 395,
          "column": 15,
          "context": "code",
          "lineText": "let client: GoogleBuddyClient;"
        },
        {
          "variation": "GoogleBuddy",
          "line": 398,
          "column": 18,
          "context": "code",
          "lineText": "client = new GoogleBuddyClient();"
        },
        {
          "variation": "// OLD: Custom Web-Buddy",
          "line": 470,
          "column": 1,
          "context": "code",
          "lineText": "// OLD: Custom Web-Buddy extension"
        },
        {
          "variation": "WebBuddy",
          "line": 471,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyExtension } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 471,
          "column": 36,
          "context": "string",
          "lineText": "import { WebBuddyExtension } from '@web-buddy/core';"
        },
        {
          "variation": "WebBuddy",
          "line": 473,
          "column": 31,
          "context": "code",
          "lineText": "class CustomExtension extends WebBuddyExtension {"
        },
        {
          "variation": "// OLD: Web-Buddy",
          "line": 499,
          "column": 1,
          "context": "code",
          "lineText": "// OLD: Web-Buddy server setup"
        },
        {
          "variation": "WebBuddy",
          "line": 500,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyServer } from '@web-buddy/server';"
        },
        {
          "variation": "@web-buddy",
          "line": 500,
          "column": 33,
          "context": "string",
          "lineText": "import { WebBuddyServer } from '@web-buddy/server';"
        },
        {
          "variation": "WebBuddy",
          "line": 502,
          "column": 20,
          "context": "code",
          "lineText": "const server = new WebBuddyServer({"
        },
        {
          "variation": "WebBuddy",
          "line": 513,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyServer } from '@semantest/nodejs.server';"
        },
        {
          "variation": "WebBuddy",
          "line": 515,
          "column": 20,
          "context": "code",
          "lineText": "const server = new WebBuddyServer({"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 685,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy/discussions][GitHub Discussions]]"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 686,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy/issues][GitHub Issues]]"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 752,
          "column": 18,
          "context": "code",
          "lineText": "npm uninstall chatgpt-buddy google-buddy wikipedia-buddy"
        },
        {
          "variation": "google-buddy",
          "line": 752,
          "column": 32,
          "context": "code",
          "lineText": "npm uninstall chatgpt-buddy google-buddy wikipedia-buddy"
        },
        {
          "variation": "-buddy",
          "line": 752,
          "column": 54,
          "context": "code",
          "lineText": "npm uninstall chatgpt-buddy google-buddy wikipedia-buddy"
        },
        {
          "variation": "@web-buddy",
          "line": 753,
          "column": 18,
          "context": "code",
          "lineText": "npm uninstall @web-buddy/core @web-buddy/server"
        },
        {
          "variation": "@web-buddy",
          "line": 753,
          "column": 34,
          "context": "code",
          "lineText": "npm uninstall @web-buddy/core @web-buddy/server"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/migration-guides.org",
      "occurrenceCount": 62,
      "references": [
        {
          "variation": "ChatGPT-buddy",
          "line": 8,
          "column": 128,
          "context": "code",
          "lineText": "This document provides comprehensive migration guides for users, developers, and organizations transitioning from the monorepo ChatGPT-buddy architecture to the new multi-repository TypeScript-EDA ecosystem."
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 35,
          "column": 25,
          "context": "code",
          "lineText": "Users currently install ChatGPT-buddy as a single browser extension."
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 57,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from 'chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 57,
          "column": 37,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from 'chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 59,
          "column": 20,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 68,
          "column": 18,
          "context": "code",
          "lineText": "npm uninstall chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 71,
          "column": 17,
          "context": "code",
          "lineText": "npm install @chatgpt-buddy/client"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 77,
          "column": 19,
          "context": "code",
          "lineText": "import { createChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 77,
          "column": 47,
          "context": "string",
          "lineText": "import { createChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 79,
          "column": 31,
          "context": "code",
          "lineText": "const client = await createChatGPTBuddyClient({"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 93,
          "column": 26,
          "context": "code",
          "lineText": "apiKey: process.env.CHATGPT_BUDDY_API_KEY"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 100,
          "column": 6,
          "context": "code",
          "lineText": "npx @chatgpt-buddy/migrate-v1-to-v2 ./src"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 109,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 110,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 118,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 119,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 123,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/web-buddy-browser-extension"
        },
        {
          "variation": "web-buddy",
          "line": 124,
          "column": 4,
          "context": "code",
          "lineText": "cd web-buddy-browser-extension"
        },
        {
          "variation": "@web-buddy",
          "line": 140,
          "column": 34,
          "context": "string",
          "lineText": "import { TrainingSession } from '@web-buddy/browser-extension';"
        },
        {
          "variation": "@web-buddy",
          "line": 141,
          "column": 40,
          "context": "string",
          "lineText": "import { BackgroundApplication } from '@web-buddy/browser-extension';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 142,
          "column": 48,
          "context": "string",
          "lineText": "import { ChatGPTBackgroundApplication } from '@chatgpt-buddy/extension';"
        },
        {
          "variation": "// Example: GitHub-buddy",
          "line": 149,
          "column": 1,
          "context": "code",
          "lineText": "// Example: GitHub-buddy extension"
        },
        {
          "variation": "@web-buddy",
          "line": 150,
          "column": 40,
          "context": "string",
          "lineText": "import { BackgroundApplication } from '@web-buddy/browser-extension';"
        },
        {
          "variation": "Buddy",
          "line": 155,
          "column": 20,
          "context": "code",
          "lineText": "export class GitHubBuddyApplication extends BackgroundApplication {"
        },
        {
          "variation": "-Buddy",
          "line": 157,
          "column": 21,
          "context": "string",
          "lineText": "['name', 'GitHub-Buddy Background Application'],"
        },
        {
          "variation": "@web-buddy",
          "line": 187,
          "column": 6,
          "context": "string",
          "lineText": "\"@web-buddy/nodejs-server\": \"^1.0.0\""
        },
        {
          "variation": "// v2.x: Extended server with Web-Buddy",
          "line": 196,
          "column": 1,
          "context": "code",
          "lineText": "// v2.x: Extended server with Web-Buddy foundation"
        },
        {
          "variation": "@web-buddy",
          "line": 197,
          "column": 63,
          "context": "string",
          "lineText": "import { ServerApplication, ServerStartRequestedEvent } from '@web-buddy/nodejs-server';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 198,
          "column": 48,
          "context": "string",
          "lineText": "import { ChatGPTAutomationApplication } from '@chatgpt-buddy/server';"
        },
        {
          "variation": "// Example: Contract test for Web-Buddy → ChatGPT-buddy",
          "line": 234,
          "column": 1,
          "context": "code",
          "lineText": "// Example: Contract test for Web-Buddy → ChatGPT-buddy"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 235,
          "column": 11,
          "context": "string",
          "lineText": "describe('ChatGPT-buddy ↔ Web-Buddy Contract', () => {"
        },
        {
          "variation": "Web-Buddy",
          "line": 235,
          "column": 27,
          "context": "string",
          "lineText": "describe('ChatGPT-buddy ↔ Web-Buddy Contract', () => {"
        },
        {
          "variation": "Web-Buddy",
          "line": 236,
          "column": 21,
          "context": "string",
          "lineText": "it('should handle Web-Buddy events correctly', async () => {"
        },
        {
          "variation": "webBuddy",
          "line": 237,
          "column": 11,
          "context": "code",
          "lineText": "const webBuddyEvent = new AutomationRequestedEvent({"
        },
        {
          "variation": "webBuddy",
          "line": 243,
          "column": 44,
          "context": "code",
          "lineText": "const result = await chatGPTApp.accept(webBuddyEvent);"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 257,
          "column": 1,
          "context": "code",
          "lineText": "CHATGPT_BUDDY_VERSION=2.0.0"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 258,
          "column": 1,
          "context": "code",
          "lineText": "WEB_BUDDY_SERVER_URL=http://localhost:3003"
        },
        {
          "variation": "chatgptBuddy",
          "line": 277,
          "column": 4,
          "context": "string",
          "lineText": "\"chatgptBuddy\": {"
        },
        {
          "variation": "\"web-buddy",
          "line": 292,
          "column": 3,
          "context": "code",
          "lineText": "\"web-buddy\": {"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 296,
          "column": 4,
          "context": "string",
          "lineText": "\"chatgpt-buddy\": {"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 317,
          "column": 7,
          "context": "code",
          "lineText": "name: ChatGPT-Buddy CI"
        },
        {
          "variation": "Web-Buddy",
          "line": 351,
          "column": 20,
          "context": "code",
          "lineText": "- name: Test Web-Buddy packages"
        },
        {
          "variation": "web-buddy",
          "line": 353,
          "column": 24,
          "context": "code",
          "lineText": "npm run test:web-buddy-server"
        },
        {
          "variation": "web-buddy",
          "line": 354,
          "column": 24,
          "context": "code",
          "lineText": "npm run test:web-buddy-extension"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 360,
          "column": 20,
          "context": "code",
          "lineText": "- name: Test ChatGPT-buddy packages"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 362,
          "column": 24,
          "context": "code",
          "lineText": "npm run test:chatgpt-buddy-server"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 363,
          "column": 24,
          "context": "code",
          "lineText": "npm run test:chatgpt-buddy-extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 364,
          "column": 24,
          "context": "code",
          "lineText": "npm run test:chatgpt-buddy-client"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 393,
          "column": 31,
          "context": "string",
          "lineText": "const client = await import('@chatgpt-buddy/client');"
        },
        {
          "variation": "webBuddy",
          "line": 394,
          "column": 7,
          "context": "code",
          "lineText": "const webBuddy = await import('@web-buddy/browser-extension');"
        },
        {
          "variation": "@web-buddy",
          "line": 394,
          "column": 32,
          "context": "string",
          "lineText": "const webBuddy = await import('@web-buddy/browser-extension');"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 398,
          "column": 35,
          "context": "string",
          "lineText": "const aiModule = await import('@chatgpt-buddy/ai-integration');"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 408,
          "column": 32,
          "context": "string",
          "lineText": "Error: Cannot resolve module '@chatgpt-buddy/client'"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 414,
          "column": 14,
          "context": "code",
          "lineText": "npm install @chatgpt-buddy/client"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 453,
          "column": 35,
          "context": "string",
          "lineText": "import { migrateV1Config } from '@chatgpt-buddy/migrate';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 467,
          "column": 16,
          "context": "code",
          "lineText": "npm uninstall @chatgpt-buddy/client @chatgpt-buddy/server @chatgpt-buddy/extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 467,
          "column": 38,
          "context": "code",
          "lineText": "npm uninstall @chatgpt-buddy/client @chatgpt-buddy/server @chatgpt-buddy/extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 467,
          "column": 60,
          "context": "code",
          "lineText": "npm uninstall @chatgpt-buddy/client @chatgpt-buddy/server @chatgpt-buddy/extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 468,
          "column": 13,
          "context": "code",
          "lineText": "npm install chatgpt-buddy@1.x"
        },
        {
          "variation": "**GitHub Discussions**: =chatgpt-buddy",
          "line": 494,
          "column": 3,
          "context": "code",
          "lineText": "- **GitHub Discussions**: =chatgpt-buddy/discussions/migration="
        },
        {
          "variation": "**Email Support**: =migration@chatgpt-buddy",
          "line": 496,
          "column": 3,
          "context": "code",
          "lineText": "- **Email Support**: =migration@chatgpt-buddy.org="
        },
        {
          "variation": "**Community Wiki**: =wiki.chatgpt-buddy",
          "line": 497,
          "column": 3,
          "context": "code",
          "lineText": "- **Community Wiki**: =wiki.chatgpt-buddy.org/migration="
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/migration-guides.html",
      "occurrenceCount": 61,
      "references": [
        {
          "variation": "ChatGPT-buddy",
          "line": 13,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-buddy architecture to the new multi-repository TypeScript-EDA"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 44,
          "column": 28,
          "context": "code",
          "lineText": "<p>Users currently install ChatGPT-buddy as a single browser"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 77,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;chatgpt-buddy",
          "line": 77,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 79,
          "column": 20,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 88,
          "column": 15,
          "context": "code",
          "lineText": "npm uninstall chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 91,
          "column": 14,
          "context": "code",
          "lineText": "npm install @chatgpt-buddy/client"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 95,
          "column": 16,
          "context": "code",
          "lineText": "import { createChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 95,
          "column": 43,
          "context": "code",
          "lineText": "import { createChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 97,
          "column": 28,
          "context": "code",
          "lineText": "const client = await createChatGPTBuddyClient({"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 109,
          "column": 23,
          "context": "code",
          "lineText": "apiKey: process.env.CHATGPT_BUDDY_API_KEY"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 115,
          "column": 6,
          "context": "code",
          "lineText": "npx @chatgpt-buddy/migrate-v1-to-v2 ./src"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 120,
          "column": 41,
          "context": "code",
          "lineText": "<pre class=\"bash\"><code>git clone https://github.com/rydnr/chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 121,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 127,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 128,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 132,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/web-buddy-browser-extension"
        },
        {
          "variation": "web-buddy",
          "line": 133,
          "column": 4,
          "context": "code",
          "lineText": "cd web-buddy-browser-extension"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 145,
          "column": 34,
          "context": "code",
          "lineText": "import { TrainingSession } from &#39;@web-buddy/browser-extension&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 146,
          "column": 40,
          "context": "code",
          "lineText": "import { BackgroundApplication } from &#39;@web-buddy/browser-extension&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 147,
          "column": 47,
          "context": "code",
          "lineText": "import { ChatGPTBackgroundApplication } from &#39;@chatgpt-buddy/extension&#39;;"
        },
        {
          "variation": "// Example: GitHub-buddy",
          "line": 153,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// Example: GitHub-buddy extension"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 154,
          "column": 40,
          "context": "code",
          "lineText": "import { BackgroundApplication } from &#39;@web-buddy/browser-extension&#39;;"
        },
        {
          "variation": "Buddy",
          "line": 159,
          "column": 20,
          "context": "code",
          "lineText": "export class GitHubBuddyApplication extends BackgroundApplication {"
        },
        {
          "variation": "#39;name&#39;, &#39;GitHub-Buddy",
          "line": 161,
          "column": 7,
          "context": "code",
          "lineText": "[&#39;name&#39;, &#39;GitHub-Buddy Background Application&#39;],"
        },
        {
          "variation": "@web-buddy",
          "line": 188,
          "column": 11,
          "context": "code",
          "lineText": "&quot;@web-buddy/nodejs-server&quot;: &quot;^1.0.0&quot;"
        },
        {
          "variation": "// v2.x: Extended server with Web-Buddy",
          "line": 196,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// v2.x: Extended server with Web-Buddy foundation"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 197,
          "column": 63,
          "context": "code",
          "lineText": "import { ServerApplication, ServerStartRequestedEvent } from &#39;@web-buddy/nodejs-server&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 198,
          "column": 47,
          "context": "code",
          "lineText": "import { ChatGPTAutomationApplication } from &#39;@chatgpt-buddy/server&#39;;"
        },
        {
          "variation": "// Example: Contract test for Web-Buddy → ChatGPT-buddy",
          "line": 226,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// Example: Contract test for Web-Buddy → ChatGPT-buddy"
        },
        {
          "variation": "#39;ChatGPT-buddy ↔ Web-Buddy",
          "line": 227,
          "column": 11,
          "context": "code",
          "lineText": "describe(&#39;ChatGPT-buddy ↔ Web-Buddy Contract&#39;, () =&gt; {"
        },
        {
          "variation": "#39;should handle Web-Buddy",
          "line": 228,
          "column": 7,
          "context": "code",
          "lineText": "it(&#39;should handle Web-Buddy events correctly&#39;, async () =&gt; {"
        },
        {
          "variation": "webBuddy",
          "line": 229,
          "column": 11,
          "context": "code",
          "lineText": "const webBuddyEvent = new AutomationRequestedEvent({"
        },
        {
          "variation": "webBuddy",
          "line": 235,
          "column": 44,
          "context": "code",
          "lineText": "const result = await chatGPTApp.accept(webBuddyEvent);"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 246,
          "column": 1,
          "context": "code",
          "lineText": "CHATGPT_BUDDY_VERSION=2.0.0"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 247,
          "column": 1,
          "context": "code",
          "lineText": "WEB_BUDDY_SERVER_URL=http://localhost:3003"
        },
        {
          "variation": "chatgptBuddy",
          "line": 263,
          "column": 9,
          "context": "code",
          "lineText": "&quot;chatgptBuddy&quot;: {"
        },
        {
          "variation": "web-buddy",
          "line": 276,
          "column": 9,
          "context": "code",
          "lineText": "&quot;web-buddy&quot;: {"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 280,
          "column": 9,
          "context": "code",
          "lineText": "&quot;chatgpt-buddy&quot;: {"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 297,
          "column": 7,
          "context": "code",
          "lineText": "name: ChatGPT-Buddy CI"
        },
        {
          "variation": "Web-Buddy",
          "line": 329,
          "column": 20,
          "context": "code",
          "lineText": "- name: Test Web-Buddy packages"
        },
        {
          "variation": "web-buddy",
          "line": 331,
          "column": 24,
          "context": "code",
          "lineText": "npm run test:web-buddy-server"
        },
        {
          "variation": "web-buddy",
          "line": 332,
          "column": 24,
          "context": "code",
          "lineText": "npm run test:web-buddy-extension"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 338,
          "column": 20,
          "context": "code",
          "lineText": "- name: Test ChatGPT-buddy packages"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 340,
          "column": 24,
          "context": "code",
          "lineText": "npm run test:chatgpt-buddy-server"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 341,
          "column": 24,
          "context": "code",
          "lineText": "npm run test:chatgpt-buddy-extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 342,
          "column": 24,
          "context": "code",
          "lineText": "npm run test:chatgpt-buddy-client"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 368,
          "column": 30,
          "context": "code",
          "lineText": "const client = await import(&#39;@chatgpt-buddy/client&#39;);"
        },
        {
          "variation": "webBuddy",
          "line": 369,
          "column": 7,
          "context": "code",
          "lineText": "const webBuddy = await import(&#39;@web-buddy/browser-extension&#39;);"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 369,
          "column": 32,
          "context": "code",
          "lineText": "const webBuddy = await import(&#39;@web-buddy/browser-extension&#39;);"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 373,
          "column": 34,
          "context": "code",
          "lineText": "const aiModule = await import(&#39;@chatgpt-buddy/ai-integration&#39;);"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 380,
          "column": 42,
          "context": "code",
          "lineText": "<pre><code>Error: Cannot resolve module &#39;@chatgpt-buddy/client&#39;"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 384,
          "column": 14,
          "context": "code",
          "lineText": "npm install @chatgpt-buddy/client"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 416,
          "column": 34,
          "context": "code",
          "lineText": "import { migrateV1Config } from &#39;@chatgpt-buddy/migrate&#39;;"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 425,
          "column": 16,
          "context": "code",
          "lineText": "npm uninstall @chatgpt-buddy/client @chatgpt-buddy/server @chatgpt-buddy/extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 425,
          "column": 38,
          "context": "code",
          "lineText": "npm uninstall @chatgpt-buddy/client @chatgpt-buddy/server @chatgpt-buddy/extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 425,
          "column": 60,
          "context": "code",
          "lineText": "npm uninstall @chatgpt-buddy/client @chatgpt-buddy/server @chatgpt-buddy/extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 426,
          "column": 13,
          "context": "code",
          "lineText": "npm install chatgpt-buddy@1.x"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 455,
          "column": 18,
          "context": "code",
          "lineText": "class=\"verbatim\">chatgpt-buddy/discussions/migration</code></li>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 459,
          "column": 28,
          "context": "code",
          "lineText": "class=\"verbatim\">migration@chatgpt-buddy.org</code></li>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 461,
          "column": 23,
          "context": "code",
          "lineText": "class=\"verbatim\">wiki.chatgpt-buddy.org/migration</code></li>"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/web-buddy/getting-started.html",
      "occurrenceCount": 61,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 30,
          "context": "string",
          "lineText": "title: \"Getting Started with Web-Buddy\""
        },
        {
          "variation": "\"Web-Buddy",
          "line": 4,
          "column": 9,
          "context": "code",
          "lineText": "author: \"Web-Buddy Team\""
        },
        {
          "variation": "web-buddy",
          "line": 7,
          "column": 10,
          "context": "code",
          "lineText": "project: web-buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 11,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy is a generic web automation framework that extends"
        },
        {
          "variation": "# Install Web-Buddy",
          "line": 27,
          "column": 1,
          "context": "code",
          "lineText": "# Install Web-Buddy framework"
        },
        {
          "variation": "@web-buddy",
          "line": 28,
          "column": 13,
          "context": "code",
          "lineText": "npm install @web-buddy/core @web-buddy/client"
        },
        {
          "variation": "@web-buddy",
          "line": 28,
          "column": 29,
          "context": "code",
          "lineText": "npm install @web-buddy/core @web-buddy/client"
        },
        {
          "variation": "Web-Buddy",
          "line": 37,
          "column": 45,
          "context": "code",
          "lineText": "<p>Create a <code>tsconfig.json</code> with Web-Buddy configuration:</p>"
        },
        {
          "variation": "Web-Buddy",
          "line": 59,
          "column": 43,
          "context": "code",
          "lineText": "and Wikipedia, demonstrating the power of Web-Buddy's layered"
        },
        {
          "variation": "Web-Buddy",
          "line": 63,
          "column": 20,
          "context": "code",
          "lineText": "<p>Create the base Web-Buddy client:</p>"
        },
        {
          "variation": "// src/core/web-buddy",
          "line": 64,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// src/core/web-buddy-client.ts"
        },
        {
          "variation": "WebBuddy",
          "line": 65,
          "column": 16,
          "context": "code",
          "lineText": "import { createWebBuddyClient, WebBuddyMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 65,
          "column": 32,
          "context": "code",
          "lineText": "import { createWebBuddyClient, WebBuddyMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 65,
          "column": 56,
          "context": "code",
          "lineText": "import { createWebBuddyClient, WebBuddyMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 67,
          "column": 14,
          "context": "code",
          "lineText": "export class WebBuddyClient {"
        },
        {
          "variation": "WebBuddy",
          "line": 71,
          "column": 25,
          "context": "code",
          "lineText": "this.client = createWebBuddyClient({ serverUrl });"
        },
        {
          "variation": "WebBuddy",
          "line": 74,
          "column": 30,
          "context": "code",
          "lineText": "async sendMessage(message: WebBuddyMessage): Promise&lt;any&gt; {"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 87,
          "column": 30,
          "context": "code",
          "lineText": "import { BaseMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 116,
          "column": 30,
          "context": "code",
          "lineText": "import { BaseMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 147,
          "column": 26,
          "context": "code",
          "lineText": "import { MessageHandler, WebBuddyMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 147,
          "column": 50,
          "context": "code",
          "lineText": "import { MessageHandler, WebBuddyMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 151,
          "column": 25,
          "context": "code",
          "lineText": "async handle(message: WebBuddyMessage): Promise&lt;any&gt; {"
        },
        {
          "variation": "WebBuddy",
          "line": 203,
          "column": 26,
          "context": "code",
          "lineText": "import { MessageHandler, WebBuddyMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 203,
          "column": 50,
          "context": "code",
          "lineText": "import { MessageHandler, WebBuddyMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 207,
          "column": 25,
          "context": "code",
          "lineText": "async handle(message: WebBuddyMessage): Promise&lt;any&gt; {"
        },
        {
          "variation": "WebBuddy",
          "line": 255,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;../../core/web-buddy-client&#39;;"
        },
        {
          "variation": "#39;../../core/web-buddy",
          "line": 255,
          "column": 33,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;../../core/web-buddy-client&#39;;"
        },
        {
          "variation": "GoogleBuddy",
          "line": 264,
          "column": 14,
          "context": "code",
          "lineText": "export class GoogleBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 265,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 265,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 268,
          "column": 31,
          "context": "code",
          "lineText": "const correlationId = this.webBuddyClient.generateCorrelationId();"
        },
        {
          "variation": ".webBuddy",
          "line": 271,
          "column": 15,
          "context": "code",
          "lineText": "await this.webBuddyClient.sendMessage("
        },
        {
          "variation": ".webBuddy",
          "line": 276,
          "column": 32,
          "context": "code",
          "lineText": "const response = await this.webBuddyClient.sendMessage("
        },
        {
          "variation": "WebBuddy",
          "line": 310,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;../../core/web-buddy-client&#39;;"
        },
        {
          "variation": "#39;../../core/web-buddy",
          "line": 310,
          "column": 33,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;../../core/web-buddy-client&#39;;"
        },
        {
          "variation": "Buddy",
          "line": 319,
          "column": 23,
          "context": "code",
          "lineText": "export class WikipediaBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 320,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 320,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 323,
          "column": 31,
          "context": "code",
          "lineText": "const correlationId = this.webBuddyClient.generateCorrelationId();"
        },
        {
          "variation": ".webBuddy",
          "line": 326,
          "column": 15,
          "context": "code",
          "lineText": "await this.webBuddyClient.sendMessage("
        },
        {
          "variation": ".webBuddy",
          "line": 331,
          "column": 32,
          "context": "code",
          "lineText": "const response = await this.webBuddyClient.sendMessage("
        },
        {
          "variation": "WebBuddy",
          "line": 365,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;./core/web-buddy-client&#39;;"
        },
        {
          "variation": "#39;./core/web-buddy",
          "line": 365,
          "column": 33,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;./core/web-buddy-client&#39;;"
        },
        {
          "variation": "GoogleBuddy",
          "line": 366,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from &#39;./domains/google/client&#39;;"
        },
        {
          "variation": "Buddy",
          "line": 367,
          "column": 19,
          "context": "code",
          "lineText": "import { WikipediaBuddyClient } from &#39;./domains/wikipedia/client&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 370,
          "column": 22,
          "context": "code",
          "lineText": "private webClient: WebBuddyClient;"
        },
        {
          "variation": "GoogleBuddy",
          "line": 371,
          "column": 25,
          "context": "code",
          "lineText": "private googleClient: GoogleBuddyClient;"
        },
        {
          "variation": "Buddy",
          "line": 372,
          "column": 37,
          "context": "code",
          "lineText": "private wikipediaClient: WikipediaBuddyClient;"
        },
        {
          "variation": "WebBuddy",
          "line": 375,
          "column": 26,
          "context": "code",
          "lineText": "this.webClient = new WebBuddyClient(serverUrl);"
        },
        {
          "variation": "GoogleBuddy",
          "line": 376,
          "column": 29,
          "context": "code",
          "lineText": "this.googleClient = new GoogleBuddyClient(this.webClient);"
        },
        {
          "variation": "Buddy",
          "line": 377,
          "column": 41,
          "context": "code",
          "lineText": "this.wikipediaClient = new WikipediaBuddyClient(this.webClient);"
        },
        {
          "variation": "#39;🎯 Running Web-Buddy",
          "line": 490,
          "column": 20,
          "context": "code",
          "lineText": "console.log(&#39;🎯 Running Web-Buddy Demo...\\n&#39;);"
        },
        {
          "variation": "WebBuddy",
          "line": 548,
          "column": 40,
          "context": "code",
          "lineText": "<li><strong>Core Layer</strong> (<code>WebBuddyClient</code>): Generic"
        },
        {
          "variation": "GoogleBuddy",
          "line": 552,
          "column": 33,
          "context": "code",
          "lineText": "<li><strong>API Layer</strong> (GoogleBuddyClient/WikipediaBuddyClient):"
        },
        {
          "variation": "Buddy",
          "line": 552,
          "column": 60,
          "context": "code",
          "lineText": "<li><strong>API Layer</strong> (GoogleBuddyClient/WikipediaBuddyClient):"
        },
        {
          "variation": "GoogleBuddy",
          "line": 569,
          "column": 3,
          "context": "code",
          "lineText": "GoogleBuddyClient.search()"
        },
        {
          "variation": "WebBuddy",
          "line": 571,
          "column": 3,
          "context": "code",
          "lineText": "WebBuddyClient.sendMessage()"
        },
        {
          "variation": "Buddy",
          "line": 585,
          "column": 20,
          "context": "code",
          "lineText": "export class GitHubBuddyClient {"
        },
        {
          "variation": "Buddy",
          "line": 591,
          "column": 27,
          "context": "code",
          "lineText": "export class StackOverflowBuddyClient {"
        },
        {
          "variation": "// Connect via WebSocket to your Web-Buddy",
          "line": 599,
          "column": 1,
          "context": "code",
          "lineText": "// Connect via WebSocket to your Web-Buddy server"
        },
        {
          "variation": "Web-Buddy",
          "line": 675,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy! The layered architecture makes it easy to add new sites, the"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/atdd-guide.html",
      "occurrenceCount": 61,
      "references": [
        {
          "variation": "ChatGPT-Buddy",
          "line": 2,
          "column": 32,
          "context": "string",
          "lineText": "title: \"ATDD Testing Guide for ChatGPT-Buddy\""
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 4,
          "column": 10,
          "context": "string",
          "lineText": "author: \"ChatGPT-Buddy Team\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 7,
          "column": 10,
          "context": "code",
          "lineText": "project: chatgpt-buddy"
        },
        {
          "variation": "web-buddy",
          "line": 10,
          "column": 22,
          "context": "string",
          "lineText": "<h1 id=\"introduction-web-buddy-generic-framework\">Introduction:"
        },
        {
          "variation": "Web-Buddy",
          "line": 11,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy Generic Framework</h1>"
        },
        {
          "variation": "Web-Buddy",
          "line": 14,
          "column": 8,
          "context": "code",
          "lineText": "<p>The Web-Buddy framework demonstrates a crucial architectural"
        },
        {
          "variation": "WebBuddy",
          "line": 26,
          "column": 18,
          "context": "code",
          "lineText": "class=\"verbatim\">WebBuddyClient.sendMessage()</code>)</li>"
        },
        {
          "variation": "google-buddy",
          "line": 34,
          "column": 9,
          "context": "string",
          "lineText": "<h1 id=\"google-buddy-a-complete-implementation-example\">Google-Buddy: A"
        },
        {
          "variation": "Google-Buddy",
          "line": 34,
          "column": 57,
          "context": "code",
          "lineText": "<h1 id=\"google-buddy-a-complete-implementation-example\">Google-Buddy: A"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 39,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// implementations/google-buddy/messages.ts"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 52,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// implementations/google-buddy/messages.ts"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 53,
          "column": 30,
          "context": "code",
          "lineText": "import { BaseMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 85,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// implementations/google-buddy/tests/google-search.spec.ts"
        },
        {
          "variation": "WebBuddy",
          "line": 87,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 87,
          "column": 33,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "GoogleBuddy",
          "line": 88,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from &#39;../client&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 89,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyTestEnvironment } from &#39;@web-buddy/testing&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 89,
          "column": 42,
          "context": "code",
          "lineText": "import { WebBuddyTestEnvironment } from &#39;@web-buddy/testing&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 92,
          "column": 16,
          "context": "code",
          "lineText": "let testEnv: WebBuddyTestEnvironment;"
        },
        {
          "variation": "WebBuddy",
          "line": 93,
          "column": 18,
          "context": "code",
          "lineText": "let webClient: WebBuddyClient;"
        },
        {
          "variation": "GoogleBuddy",
          "line": 94,
          "column": 21,
          "context": "code",
          "lineText": "let googleClient: GoogleBuddyClient;"
        },
        {
          "variation": "WebBuddy",
          "line": 97,
          "column": 19,
          "context": "code",
          "lineText": "testEnv = new WebBuddyTestEnvironment(&#39;google-buddy&#39;);"
        },
        {
          "variation": "#39;google-buddy",
          "line": 97,
          "column": 44,
          "context": "code",
          "lineText": "testEnv = new WebBuddyTestEnvironment(&#39;google-buddy&#39;);"
        },
        {
          "variation": "WebBuddy",
          "line": 99,
          "column": 21,
          "context": "code",
          "lineText": "webClient = new WebBuddyClient({ serverUrl });"
        },
        {
          "variation": "GoogleBuddy",
          "line": 100,
          "column": 24,
          "context": "code",
          "lineText": "googleClient = new GoogleBuddyClient(webClient);"
        },
        {
          "variation": "// GIVEN: Google homepage is loaded with web-buddy",
          "line": 112,
          "column": 5,
          "context": "code",
          "lineText": "// GIVEN: Google homepage is loaded with web-buddy extension"
        },
        {
          "variation": "// WHEN: Using generic web-buddy",
          "line": 141,
          "column": 5,
          "context": "code",
          "lineText": "// WHEN: Using generic web-buddy API directly"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 200,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// implementations/google-buddy/handlers.ts"
        },
        {
          "variation": "WebBuddy",
          "line": 201,
          "column": 26,
          "context": "code",
          "lineText": "import { MessageHandler, WebBuddyMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 201,
          "column": 50,
          "context": "code",
          "lineText": "import { MessageHandler, WebBuddyMessage } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 205,
          "column": 25,
          "context": "code",
          "lineText": "async handle(message: WebBuddyMessage): Promise&lt;any&gt; {"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 365,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// implementations/google-buddy/client.ts"
        },
        {
          "variation": "WebBuddy",
          "line": 366,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 366,
          "column": 33,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "* Built on top of the generic WebBuddy",
          "line": 372,
          "column": 2,
          "context": "code",
          "lineText": "* Built on top of the generic WebBuddyClient"
        },
        {
          "variation": "GoogleBuddy",
          "line": 374,
          "column": 14,
          "context": "code",
          "lineText": "export class GoogleBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 375,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 375,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 382,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": ".webBuddy",
          "line": 392,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": ".webBuddy",
          "line": 402,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": ".webBuddy",
          "line": 412,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 447,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// implementations/google-buddy/content-script.ts"
        },
        {
          "variation": "* Receives messages from web-buddy",
          "line": 453,
          "column": 2,
          "context": "code",
          "lineText": "* Receives messages from web-buddy extension and executes DOM manipulation"
        },
        {
          "variation": "// Listen for messages from web-buddy",
          "line": 463,
          "column": 5,
          "context": "code",
          "lineText": "// Listen for messages from web-buddy extension"
        },
        {
          "variation": "WebBuddy",
          "line": 508,
          "column": 40,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { WebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 508,
          "column": 63,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { WebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "GoogleBuddy",
          "line": 509,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from &#39;@google-buddy/client&#39;;"
        },
        {
          "variation": "#39;@google-buddy",
          "line": 509,
          "column": 36,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from &#39;@google-buddy/client&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 512,
          "column": 23,
          "context": "code",
          "lineText": "const webClient = new WebBuddyClient({ serverUrl: &#39;http://localhost:3000&#39; });"
        },
        {
          "variation": "GoogleBuddy",
          "line": 513,
          "column": 26,
          "context": "code",
          "lineText": "const googleClient = new GoogleBuddyClient(webClient);"
        },
        {
          "variation": "WebBuddy",
          "line": 531,
          "column": 40,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { WebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 531,
          "column": 63,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { WebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@google-buddy",
          "line": 532,
          "column": 33,
          "context": "code",
          "lineText": "import { GoogleMessages } from &#39;@google-buddy/messages&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 534,
          "column": 23,
          "context": "code",
          "lineText": "const webClient = new WebBuddyClient({ serverUrl: &#39;http://localhost:3000&#39; });"
        },
        {
          "variation": "// twitter-buddy",
          "line": 613,
          "column": 31,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>// twitter-buddy/messages.ts"
        },
        {
          "variation": "// twitter-buddy",
          "line": 621,
          "column": 1,
          "context": "code",
          "lineText": "// twitter-buddy/client.ts"
        },
        {
          "variation": "Buddy",
          "line": 622,
          "column": 21,
          "context": "code",
          "lineText": "export class TwitterBuddyClient {"
        },
        {
          "variation": ".webBuddy",
          "line": 624,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": "Web-Buddy",
          "line": 662,
          "column": 44,
          "context": "code",
          "lineText": "<p>The Google example demonstrates how the Web-Buddy framework achieves"
        },
        {
          "variation": "Web-Buddy",
          "line": 683,
          "column": 64,
          "context": "code",
          "lineText": "patterns demonstrated with Google apply to any website, making Web-Buddy"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/web-buddy/getting-started.org",
      "occurrenceCount": 60,
      "references": [
        {
          "variation": "#+TITLE: Getting Started with Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: Getting Started with Web-Buddy"
        },
        {
          "variation": "#+AUTHOR: Web-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "#+AUTHOR: Web-Buddy Team"
        },
        {
          "variation": "#+PROJECT: web-buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "#+PROJECT: web-buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 10,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy is a generic web automation framework that extends TypeScript-EDA for browser automation. This guide will walk you through creating your first multi-site automation using the three-layer architecture."
        },
        {
          "variation": "# Install Web-Buddy",
          "line": 26,
          "column": 1,
          "context": "code",
          "lineText": "# Install Web-Buddy framework"
        },
        {
          "variation": "@web-buddy",
          "line": 27,
          "column": 13,
          "context": "code",
          "lineText": "npm install @web-buddy/core @web-buddy/client"
        },
        {
          "variation": "@web-buddy",
          "line": 27,
          "column": 29,
          "context": "code",
          "lineText": "npm install @web-buddy/core @web-buddy/client"
        },
        {
          "variation": "Web-Buddy",
          "line": 38,
          "column": 31,
          "context": "code",
          "lineText": "Create a ~tsconfig.json~ with Web-Buddy configuration:"
        },
        {
          "variation": "Web-Buddy",
          "line": 62,
          "column": 111,
          "context": "string",
          "lineText": "Let's build a simple framework that can automate both Google Search and Wikipedia, demonstrating the power of Web-Buddy's layered architecture."
        },
        {
          "variation": "Web-Buddy",
          "line": 66,
          "column": 17,
          "context": "code",
          "lineText": "Create the base Web-Buddy client:"
        },
        {
          "variation": "// src/core/web-buddy",
          "line": 69,
          "column": 1,
          "context": "code",
          "lineText": "// src/core/web-buddy-client.ts"
        },
        {
          "variation": "WebBuddy",
          "line": 70,
          "column": 16,
          "context": "code",
          "lineText": "import { createWebBuddyClient, WebBuddyMessage } from '@web-buddy/core';"
        },
        {
          "variation": "WebBuddy",
          "line": 70,
          "column": 32,
          "context": "code",
          "lineText": "import { createWebBuddyClient, WebBuddyMessage } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 70,
          "column": 56,
          "context": "string",
          "lineText": "import { createWebBuddyClient, WebBuddyMessage } from '@web-buddy/core';"
        },
        {
          "variation": "WebBuddy",
          "line": 72,
          "column": 14,
          "context": "code",
          "lineText": "export class WebBuddyClient {"
        },
        {
          "variation": "WebBuddy",
          "line": 76,
          "column": 25,
          "context": "code",
          "lineText": "this.client = createWebBuddyClient({ serverUrl });"
        },
        {
          "variation": "WebBuddy",
          "line": 79,
          "column": 30,
          "context": "code",
          "lineText": "async sendMessage(message: WebBuddyMessage): Promise<any> {"
        },
        {
          "variation": "@web-buddy",
          "line": 95,
          "column": 30,
          "context": "string",
          "lineText": "import { BaseMessage } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 127,
          "column": 30,
          "context": "string",
          "lineText": "import { BaseMessage } from '@web-buddy/core';"
        },
        {
          "variation": "WebBuddy",
          "line": 161,
          "column": 26,
          "context": "code",
          "lineText": "import { MessageHandler, WebBuddyMessage } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 161,
          "column": 50,
          "context": "string",
          "lineText": "import { MessageHandler, WebBuddyMessage } from '@web-buddy/core';"
        },
        {
          "variation": "WebBuddy",
          "line": 165,
          "column": 25,
          "context": "code",
          "lineText": "async handle(message: WebBuddyMessage): Promise<any> {"
        },
        {
          "variation": "WebBuddy",
          "line": 220,
          "column": 26,
          "context": "code",
          "lineText": "import { MessageHandler, WebBuddyMessage } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 220,
          "column": 50,
          "context": "string",
          "lineText": "import { MessageHandler, WebBuddyMessage } from '@web-buddy/core';"
        },
        {
          "variation": "WebBuddy",
          "line": 224,
          "column": 25,
          "context": "code",
          "lineText": "async handle(message: WebBuddyMessage): Promise<any> {"
        },
        {
          "variation": "WebBuddy",
          "line": 275,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from '../../core/web-buddy-client';"
        },
        {
          "variation": "/web-buddy",
          "line": 275,
          "column": 43,
          "context": "string",
          "lineText": "import { WebBuddyClient } from '../../core/web-buddy-client';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 284,
          "column": 14,
          "context": "code",
          "lineText": "export class GoogleBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 285,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 285,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 288,
          "column": 31,
          "context": "code",
          "lineText": "const correlationId = this.webBuddyClient.generateCorrelationId();"
        },
        {
          "variation": ".webBuddy",
          "line": 291,
          "column": 15,
          "context": "code",
          "lineText": "await this.webBuddyClient.sendMessage("
        },
        {
          "variation": ".webBuddy",
          "line": 296,
          "column": 32,
          "context": "code",
          "lineText": "const response = await this.webBuddyClient.sendMessage("
        },
        {
          "variation": "WebBuddy",
          "line": 333,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from '../../core/web-buddy-client';"
        },
        {
          "variation": "/web-buddy",
          "line": 333,
          "column": 43,
          "context": "string",
          "lineText": "import { WebBuddyClient } from '../../core/web-buddy-client';"
        },
        {
          "variation": "Buddy",
          "line": 342,
          "column": 23,
          "context": "code",
          "lineText": "export class WikipediaBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 343,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 343,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 346,
          "column": 31,
          "context": "code",
          "lineText": "const correlationId = this.webBuddyClient.generateCorrelationId();"
        },
        {
          "variation": ".webBuddy",
          "line": 349,
          "column": 15,
          "context": "code",
          "lineText": "await this.webBuddyClient.sendMessage("
        },
        {
          "variation": ".webBuddy",
          "line": 354,
          "column": 32,
          "context": "code",
          "lineText": "const response = await this.webBuddyClient.sendMessage("
        },
        {
          "variation": "WebBuddy",
          "line": 391,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from './core/web-buddy-client';"
        },
        {
          "variation": "/web-buddy",
          "line": 391,
          "column": 39,
          "context": "string",
          "lineText": "import { WebBuddyClient } from './core/web-buddy-client';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 392,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from './domains/google/client';"
        },
        {
          "variation": "Buddy",
          "line": 393,
          "column": 19,
          "context": "code",
          "lineText": "import { WikipediaBuddyClient } from './domains/wikipedia/client';"
        },
        {
          "variation": "WebBuddy",
          "line": 396,
          "column": 22,
          "context": "code",
          "lineText": "private webClient: WebBuddyClient;"
        },
        {
          "variation": "GoogleBuddy",
          "line": 397,
          "column": 25,
          "context": "code",
          "lineText": "private googleClient: GoogleBuddyClient;"
        },
        {
          "variation": "Buddy",
          "line": 398,
          "column": 37,
          "context": "code",
          "lineText": "private wikipediaClient: WikipediaBuddyClient;"
        },
        {
          "variation": "WebBuddy",
          "line": 401,
          "column": 26,
          "context": "code",
          "lineText": "this.webClient = new WebBuddyClient(serverUrl);"
        },
        {
          "variation": "GoogleBuddy",
          "line": 402,
          "column": 29,
          "context": "code",
          "lineText": "this.googleClient = new GoogleBuddyClient(this.webClient);"
        },
        {
          "variation": "Buddy",
          "line": 403,
          "column": 41,
          "context": "code",
          "lineText": "this.wikipediaClient = new WikipediaBuddyClient(this.webClient);"
        },
        {
          "variation": "Web-Buddy",
          "line": 519,
          "column": 31,
          "context": "string",
          "lineText": "console.log('🎯 Running Web-Buddy Demo...\\n');"
        },
        {
          "variation": "*Core Layer* (~WebBuddy",
          "line": 584,
          "column": 4,
          "context": "code",
          "lineText": "1. *Core Layer* (~WebBuddyClient~): Generic message passing and correlation"
        },
        {
          "variation": "*API Layer* (GoogleBuddyClient/WikipediaBuddy",
          "line": 586,
          "column": 4,
          "context": "code",
          "lineText": "3. *API Layer* (GoogleBuddyClient/WikipediaBuddyClient): Developer convenience"
        },
        {
          "variation": "GoogleBuddy",
          "line": 600,
          "column": 3,
          "context": "code",
          "lineText": "GoogleBuddyClient.search()"
        },
        {
          "variation": "WebBuddy",
          "line": 602,
          "column": 3,
          "context": "code",
          "lineText": "WebBuddyClient.sendMessage()"
        },
        {
          "variation": "Buddy",
          "line": 621,
          "column": 20,
          "context": "code",
          "lineText": "export class GitHubBuddyClient {"
        },
        {
          "variation": "Buddy",
          "line": 627,
          "column": 27,
          "context": "code",
          "lineText": "export class StackOverflowBuddyClient {"
        },
        {
          "variation": "// Connect via WebSocket to your Web-Buddy",
          "line": 639,
          "column": 1,
          "context": "code",
          "lineText": "// Connect via WebSocket to your Web-Buddy server"
        },
        {
          "variation": "Web-Buddy",
          "line": 719,
          "column": 66,
          "context": "code",
          "lineText": "You now have a complete multi-site automation framework built on Web-Buddy! The layered architecture makes it easy to add new sites, the event-driven design ensures reliability, and the flexible APIs provide both power and convenience."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/atdd-guide.org",
      "occurrenceCount": 59,
      "references": [
        {
          "variation": "#+TITLE: ATDD Testing Guide for ChatGPT-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: ATDD Testing Guide for ChatGPT-Buddy"
        },
        {
          "variation": "#+AUTHOR: ChatGPT-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "#+AUTHOR: ChatGPT-Buddy Team"
        },
        {
          "variation": "#+PROJECT: chatgpt-buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "#+PROJECT: chatgpt-buddy"
        },
        {
          "variation": "* Introduction: Web-Buddy",
          "line": 8,
          "column": 1,
          "context": "code",
          "lineText": "* Introduction: Web-Buddy Generic Framework"
        },
        {
          "variation": "Web-Buddy",
          "line": 11,
          "column": 5,
          "context": "code",
          "lineText": "The Web-Buddy framework demonstrates a crucial architectural principle: *separation between generic infrastructure and domain-specific convenience*. This example shows how to implement Google search automation using this layered approach."
        },
        {
          "variation": "**Core Layer**: Generic message-passing infrastructure (=WebBuddy",
          "line": 18,
          "column": 4,
          "context": "code",
          "lineText": "1. **Core Layer**: Generic message-passing infrastructure (=WebBuddyClient.sendMessage()=)"
        },
        {
          "variation": "* Google-Buddy",
          "line": 22,
          "column": 1,
          "context": "code",
          "lineText": "* Google-Buddy: A Complete Implementation Example"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 28,
          "column": 1,
          "context": "code",
          "lineText": "// implementations/google-buddy/messages.ts"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 42,
          "column": 1,
          "context": "code",
          "lineText": "// implementations/google-buddy/messages.ts"
        },
        {
          "variation": "@web-buddy",
          "line": 43,
          "column": 30,
          "context": "string",
          "lineText": "import { BaseMessage } from '@web-buddy/core';"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 76,
          "column": 1,
          "context": "code",
          "lineText": "// implementations/google-buddy/tests/google-search.spec.ts"
        },
        {
          "variation": "WebBuddy",
          "line": 78,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 78,
          "column": 33,
          "context": "string",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 79,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from '../client';"
        },
        {
          "variation": "WebBuddy",
          "line": 80,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyTestEnvironment } from '@web-buddy/testing';"
        },
        {
          "variation": "@web-buddy",
          "line": 80,
          "column": 42,
          "context": "string",
          "lineText": "import { WebBuddyTestEnvironment } from '@web-buddy/testing';"
        },
        {
          "variation": "WebBuddy",
          "line": 83,
          "column": 16,
          "context": "code",
          "lineText": "let testEnv: WebBuddyTestEnvironment;"
        },
        {
          "variation": "WebBuddy",
          "line": 84,
          "column": 18,
          "context": "code",
          "lineText": "let webClient: WebBuddyClient;"
        },
        {
          "variation": "GoogleBuddy",
          "line": 85,
          "column": 21,
          "context": "code",
          "lineText": "let googleClient: GoogleBuddyClient;"
        },
        {
          "variation": "WebBuddy",
          "line": 88,
          "column": 19,
          "context": "code",
          "lineText": "testEnv = new WebBuddyTestEnvironment('google-buddy');"
        },
        {
          "variation": "google-buddy",
          "line": 88,
          "column": 44,
          "context": "string",
          "lineText": "testEnv = new WebBuddyTestEnvironment('google-buddy');"
        },
        {
          "variation": "WebBuddy",
          "line": 90,
          "column": 21,
          "context": "code",
          "lineText": "webClient = new WebBuddyClient({ serverUrl });"
        },
        {
          "variation": "GoogleBuddy",
          "line": 91,
          "column": 24,
          "context": "code",
          "lineText": "googleClient = new GoogleBuddyClient(webClient);"
        },
        {
          "variation": "// GIVEN: Google homepage is loaded with web-buddy",
          "line": 103,
          "column": 5,
          "context": "code",
          "lineText": "// GIVEN: Google homepage is loaded with web-buddy extension"
        },
        {
          "variation": "// WHEN: Using generic web-buddy",
          "line": 132,
          "column": 5,
          "context": "code",
          "lineText": "// WHEN: Using generic web-buddy API directly"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 192,
          "column": 1,
          "context": "code",
          "lineText": "// implementations/google-buddy/handlers.ts"
        },
        {
          "variation": "WebBuddy",
          "line": 193,
          "column": 26,
          "context": "code",
          "lineText": "import { MessageHandler, WebBuddyMessage } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 193,
          "column": 50,
          "context": "string",
          "lineText": "import { MessageHandler, WebBuddyMessage } from '@web-buddy/core';"
        },
        {
          "variation": "WebBuddy",
          "line": 197,
          "column": 25,
          "context": "code",
          "lineText": "async handle(message: WebBuddyMessage): Promise<any> {"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 358,
          "column": 1,
          "context": "code",
          "lineText": "// implementations/google-buddy/client.ts"
        },
        {
          "variation": "WebBuddy",
          "line": 359,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 359,
          "column": 33,
          "context": "string",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "* Built on top of the generic WebBuddy",
          "line": 365,
          "column": 2,
          "context": "code",
          "lineText": "* Built on top of the generic WebBuddyClient"
        },
        {
          "variation": "GoogleBuddy",
          "line": 367,
          "column": 14,
          "context": "code",
          "lineText": "export class GoogleBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 368,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 368,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 375,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": ".webBuddy",
          "line": 385,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": ".webBuddy",
          "line": 395,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": ".webBuddy",
          "line": 405,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": "// implementations/google-buddy",
          "line": 441,
          "column": 1,
          "context": "code",
          "lineText": "// implementations/google-buddy/content-script.ts"
        },
        {
          "variation": "* Receives messages from web-buddy",
          "line": 447,
          "column": 2,
          "context": "code",
          "lineText": "* Receives messages from web-buddy extension and executes DOM manipulation"
        },
        {
          "variation": "// Listen for messages from web-buddy",
          "line": 457,
          "column": 5,
          "context": "code",
          "lineText": "// Listen for messages from web-buddy extension"
        },
        {
          "variation": "WebBuddy",
          "line": 503,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 503,
          "column": 33,
          "context": "string",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 504,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from '@google-buddy/client';"
        },
        {
          "variation": "google-buddy",
          "line": 504,
          "column": 37,
          "context": "string",
          "lineText": "import { GoogleBuddyClient } from '@google-buddy/client';"
        },
        {
          "variation": "WebBuddy",
          "line": 507,
          "column": 23,
          "context": "code",
          "lineText": "const webClient = new WebBuddyClient({ serverUrl: 'http://localhost:3000' });"
        },
        {
          "variation": "GoogleBuddy",
          "line": 508,
          "column": 26,
          "context": "code",
          "lineText": "const googleClient = new GoogleBuddyClient(webClient);"
        },
        {
          "variation": "WebBuddy",
          "line": 527,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 527,
          "column": 33,
          "context": "string",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "google-buddy",
          "line": 528,
          "column": 34,
          "context": "string",
          "lineText": "import { GoogleMessages } from '@google-buddy/messages';"
        },
        {
          "variation": "WebBuddy",
          "line": 530,
          "column": 23,
          "context": "code",
          "lineText": "const webClient = new WebBuddyClient({ serverUrl: 'http://localhost:3000' });"
        },
        {
          "variation": "// twitter-buddy",
          "line": 596,
          "column": 1,
          "context": "code",
          "lineText": "// twitter-buddy/messages.ts"
        },
        {
          "variation": "// twitter-buddy",
          "line": 604,
          "column": 1,
          "context": "code",
          "lineText": "// twitter-buddy/client.ts"
        },
        {
          "variation": "Buddy",
          "line": 605,
          "column": 21,
          "context": "code",
          "lineText": "export class TwitterBuddyClient {"
        },
        {
          "variation": ".webBuddy",
          "line": 607,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": "Web-Buddy",
          "line": 638,
          "column": 41,
          "context": "code",
          "lineText": "The Google example demonstrates how the Web-Buddy framework achieves the perfect balance:"
        },
        {
          "variation": "Web-Buddy",
          "line": 650,
          "column": 201,
          "context": "code",
          "lineText": "This approach transforms web automation from ad-hoc scripting into systematic, testable, and maintainable software engineering. The same patterns demonstrated with Google apply to any website, making Web-Buddy a truly generic and powerful automation framework."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/getting-started.html",
      "occurrenceCount": 57,
      "references": [
        {
          "variation": "ChatGPT-Buddy",
          "line": 2,
          "column": 30,
          "context": "string",
          "lineText": "title: \"Getting Started with ChatGPT-Buddy\""
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 4,
          "column": 10,
          "context": "string",
          "lineText": "author: \"ChatGPT-Buddy Team\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 7,
          "column": 10,
          "context": "code",
          "lineText": "project: chatgpt-buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 11,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy is a specialized implementation of Web-Buddy for"
        },
        {
          "variation": "Web-Buddy",
          "line": 11,
          "column": 53,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy is a specialized implementation of Web-Buddy for"
        },
        {
          "variation": "# Install ChatGPT-Buddy",
          "line": 25,
          "column": 25,
          "context": "code",
          "lineText": "<pre class=\"bash\"><code># Install ChatGPT-Buddy client"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 26,
          "column": 14,
          "context": "code",
          "lineText": "npm install @chatgpt-buddy/client"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 33,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy.git"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 34,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 51,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy.git"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 52,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 68,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 68,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 72,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 74,
          "column": 25,
          "context": "code",
          "lineText": "apiKey: process.env.CHATGPT_BUDDY_API_KEY // Optional for auth"
        },
        {
          "variation": "#39;✅ Connected to ChatGPT-Buddy",
          "line": 80,
          "column": 18,
          "context": "code",
          "lineText": "console.log(&#39;✅ Connected to ChatGPT-Buddy:&#39;, status);"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 97,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy organizes work into projects for better context"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 100,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 100,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 103,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 147,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 147,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 150,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 207,
          "column": 11,
          "context": "code",
          "lineText": "<p>One of ChatGPT-Buddy's most powerful features is the ability to learn"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 212,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 212,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 215,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 250,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 288,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 288,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 291,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 353,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 353,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 356,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 401,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy supports multiple communication protocols for optimal"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 404,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 404,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 408,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 447,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 447,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 450,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 530,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 530,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 535,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 651,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 651,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 654,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 712,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 712,
          "column": 37,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 715,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 754,
          "column": 18,
          "context": "code",
          "lineText": "export interface ChatGPTBuddyConfig {"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 768,
          "column": 15,
          "context": "code",
          "lineText": "const config: ChatGPTBuddyConfig = {"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 769,
          "column": 26,
          "context": "code",
          "lineText": "serverUrl: process.env.CHATGPT_BUDDY_SERVER_URL || &#39;http://localhost:3000&#39;,"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 770,
          "column": 23,
          "context": "code",
          "lineText": "apiKey: process.env.CHATGPT_BUDDY_API_KEY,"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 771,
          "column": 39,
          "context": "code",
          "lineText": "retryAttempts: parseInt(process.env.CHATGPT_BUDDY_RETRY_ATTEMPTS || &#39;3&#39;),"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 772,
          "column": 33,
          "context": "code",
          "lineText": "timeout: parseInt(process.env.CHATGPT_BUDDY_TIMEOUT || &#39;30000&#39;),"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 784,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy's capabilities. From simple automations to complex"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/getting-started.org",
      "occurrenceCount": 57,
      "references": [
        {
          "variation": "#+TITLE: Getting Started with ChatGPT-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: Getting Started with ChatGPT-Buddy"
        },
        {
          "variation": "#+AUTHOR: ChatGPT-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "#+AUTHOR: ChatGPT-Buddy Team"
        },
        {
          "variation": "#+PROJECT: chatgpt-buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "#+PROJECT: chatgpt-buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 10,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy is a specialized implementation of Web-Buddy for automating ChatGPT interactions. Built on event-driven architecture, it features interactive training, pattern management, and cross-platform communication for powerful AI workflow automation."
        },
        {
          "variation": "Web-Buddy",
          "line": 10,
          "column": 50,
          "context": "code",
          "lineText": "ChatGPT-Buddy is a specialized implementation of Web-Buddy for automating ChatGPT interactions. Built on event-driven architecture, it features interactive training, pattern management, and cross-platform communication for powerful AI workflow automation."
        },
        {
          "variation": "# Install ChatGPT-Buddy",
          "line": 23,
          "column": 1,
          "context": "code",
          "lineText": "# Install ChatGPT-Buddy client"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 24,
          "column": 14,
          "context": "code",
          "lineText": "npm install @chatgpt-buddy/client"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 33,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy.git"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 34,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 52,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy.git"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 53,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 73,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 73,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 77,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 79,
          "column": 25,
          "context": "code",
          "lineText": "apiKey: process.env.CHATGPT_BUDDY_API_KEY // Optional for auth"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 85,
          "column": 33,
          "context": "string",
          "lineText": "console.log('✅ Connected to ChatGPT-Buddy:', status);"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 103,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy organizes work into projects for better context management:"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 107,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 107,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 110,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 157,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 157,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 160,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 219,
          "column": 8,
          "context": "code",
          "lineText": "One of ChatGPT-Buddy's most powerful features is the ability to learn automation patterns through browser interactions."
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 225,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 225,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 228,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 263,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 303,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 303,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 306,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 371,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 371,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 374,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 420,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy supports multiple communication protocols for optimal performance:"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 424,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 424,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 428,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 470,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 470,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 473,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 555,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 555,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 560,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 679,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 679,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 682,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 743,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 743,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 746,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 788,
          "column": 18,
          "context": "code",
          "lineText": "export interface ChatGPTBuddyConfig {"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 802,
          "column": 15,
          "context": "code",
          "lineText": "const config: ChatGPTBuddyConfig = {"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 803,
          "column": 26,
          "context": "code",
          "lineText": "serverUrl: process.env.CHATGPT_BUDDY_SERVER_URL || 'http://localhost:3000',"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 804,
          "column": 23,
          "context": "code",
          "lineText": "apiKey: process.env.CHATGPT_BUDDY_API_KEY,"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 805,
          "column": 39,
          "context": "code",
          "lineText": "retryAttempts: parseInt(process.env.CHATGPT_BUDDY_RETRY_ATTEMPTS || '3'),"
        },
        {
          "variation": "CHATGPT_BUDDY",
          "line": 806,
          "column": 33,
          "context": "code",
          "lineText": "timeout: parseInt(process.env.CHATGPT_BUDDY_TIMEOUT || '30000'),"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 818,
          "column": 64,
          "context": "code",
          "lineText": "Congratulations! You now have a comprehensive understanding of ChatGPT-Buddy's capabilities. From simple automations to complex pattern-based workflows, you can leverage the power of AI automation to streamline your development and content creation processes."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/scripts/security-audit-checklist.md",
      "occurrenceCount": 55,
      "references": [
        {
          "variation": "# Security Audit Checklist: Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "# Security Audit Checklist: Buddy References"
        },
        {
          "variation": "WEBBUDDY",
          "line": 10,
          "column": 8,
          "context": "string",
          "lineText": "- [ ] `WEBBUDDY_API_KEY`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 11,
          "column": 8,
          "context": "string",
          "lineText": "- [ ] `WEB_BUDDY_SECRET`"
        },
        {
          "variation": "webbuddy",
          "line": 12,
          "column": 8,
          "context": "string",
          "lineText": "- [ ] `webbuddy-api-*`"
        },
        {
          "variation": "web_buddy",
          "line": 13,
          "column": 8,
          "context": "string",
          "lineText": "- [ ] `web_buddy_key`"
        },
        {
          "variation": "webBuddy",
          "line": 14,
          "column": 8,
          "context": "string",
          "lineText": "- [ ] `webBuddyToken`"
        },
        {
          "variation": "`buddy",
          "line": 15,
          "column": 7,
          "context": "code",
          "lineText": "- [ ] `buddyApiSecret`"
        },
        {
          "variation": "//*.webbuddy",
          "line": 24,
          "column": 14,
          "context": "string",
          "lineText": "- [ ] `https://*.webbuddy.com/*`"
        },
        {
          "variation": "//localhost:*/buddy",
          "line": 25,
          "column": 13,
          "context": "string",
          "lineText": "- [ ] `http://localhost:*/buddy/*`"
        },
        {
          "variation": ".webbuddy",
          "line": 26,
          "column": 11,
          "context": "string",
          "lineText": "- [ ] `api.webbuddy.*`"
        },
        {
          "variation": "`buddy",
          "line": 27,
          "column": 7,
          "context": "code",
          "lineText": "- [ ] `buddy.internal.*`"
        },
        {
          "variation": "/buddy",
          "line": 28,
          "column": 12,
          "context": "string",
          "lineText": "- [ ] `/api/buddy/*`"
        },
        {
          "variation": "webbuddy",
          "line": 29,
          "column": 8,
          "context": "string",
          "lineText": "- [ ] `webbuddy-service/*`"
        },
        {
          "variation": "webbuddy",
          "line": 38,
          "column": 30,
          "context": "string",
          "lineText": "- [ ] `Authorization: Bearer webbuddy-*`"
        },
        {
          "variation": "`buddy",
          "line": 39,
          "column": 7,
          "context": "code",
          "lineText": "- [ ] `buddy_auth_token`"
        },
        {
          "variation": "webBuddy",
          "line": 40,
          "column": 8,
          "context": "string",
          "lineText": "- [ ] `webBuddySession`"
        },
        {
          "variation": "`buddy",
          "line": 41,
          "column": 7,
          "context": "code",
          "lineText": "- [ ] `buddyCredentials`"
        },
        {
          "variation": "-Buddy",
          "line": 42,
          "column": 9,
          "context": "string",
          "lineText": "- [ ] `X-Buddy-Auth-*`"
        },
        {
          "variation": "buddy",
          "line": 43,
          "column": 23,
          "context": "code",
          "lineText": "- [ ] JWT tokens with buddy claims"
        },
        {
          "variation": ".WEBBUDDY",
          "line": 52,
          "column": 19,
          "context": "string",
          "lineText": "- [ ] `process.env.WEBBUDDY_*`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 53,
          "column": 20,
          "context": "string",
          "lineText": "- [ ] `process.env.WEB_BUDDY_*`"
        },
        {
          "variation": ".BUDDY",
          "line": 54,
          "column": 19,
          "context": "string",
          "lineText": "- [ ] `process.env.BUDDY_*`"
        },
        {
          "variation": "WEBBUDDY",
          "line": 55,
          "column": 10,
          "context": "string",
          "lineText": "- [ ] `${WEBBUDDY_*}`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 56,
          "column": 16,
          "context": "string",
          "lineText": "- [ ] `getenv(\"WEB_BUDDY_*\")`"
        },
        {
          "variation": ".webBuddy",
          "line": 67,
          "column": 14,
          "context": "string",
          "lineText": "- [ ] `config.webBuddy*`"
        },
        {
          "variation": ".buddy",
          "line": 68,
          "column": 16,
          "context": "string",
          "lineText": "- [ ] `settings.buddy*`"
        },
        {
          "variation": "webbuddy",
          "line": 69,
          "column": 8,
          "context": "string",
          "lineText": "- [ ] `webbuddy.config.*`"
        },
        {
          "variation": "`buddy",
          "line": 70,
          "column": 7,
          "context": "code",
          "lineText": "- [ ] `buddy-settings.json`"
        },
        {
          "variation": "buddy",
          "line": 71,
          "column": 40,
          "context": "code",
          "lineText": "- [ ] Database connection strings with buddy references"
        },
        {
          "variation": "* FROM buddy",
          "line": 84,
          "column": 8,
          "context": "code",
          "lineText": "SELECT * FROM buddy_users WHERE api_key = ?"
        },
        {
          "variation": "webbuddy",
          "line": 85,
          "column": 13,
          "context": "code",
          "lineText": "INSERT INTO webbuddy_tokens"
        },
        {
          "variation": "buddy",
          "line": 86,
          "column": 8,
          "context": "code",
          "lineText": "UPDATE buddy_credentials SET"
        },
        {
          "variation": "WebBuddy",
          "line": 91,
          "column": 10,
          "context": "code",
          "lineText": "- Error: WebBuddy API authentication failed"
        },
        {
          "variation": "buddy",
          "line": 92,
          "column": 10,
          "context": "code",
          "lineText": "- Debug: buddy-service response: {sensitive_data}"
        },
        {
          "variation": "webbuddy",
          "line": 93,
          "column": 22,
          "context": "code",
          "lineText": "- Info: Connected to webbuddy database at {connection_string}"
        },
        {
          "variation": "// TODO: Remove hardcoded buddy",
          "line": 98,
          "column": 1,
          "context": "code",
          "lineText": "// TODO: Remove hardcoded buddy API key before production"
        },
        {
          "variation": "// WEBBUDDY",
          "line": 99,
          "column": 1,
          "context": "code",
          "lineText": "// WEBBUDDY_SECRET = 'temporary-key-remove-this'"
        },
        {
          "variation": "* Old buddy endpoint: https://api.webbuddy",
          "line": 100,
          "column": 2,
          "context": "code",
          "lineText": "/* Old buddy endpoint: https://api.webbuddy.internal */"
        },
        {
          "variation": "buddy",
          "line": 122,
          "column": 16,
          "context": "code",
          "lineText": "- [ ] Flag any buddy references that should NOT be replaced"
        },
        {
          "variation": "webbuddy",
          "line": 129,
          "column": 17,
          "context": "string",
          "lineText": "const apiKey = 'webbuddy-' + generateKey();"
        },
        {
          "variation": "-Buddy",
          "line": 130,
          "column": 26,
          "context": "string",
          "lineText": "axios.defaults.headers['X-Buddy-Auth'] = token;"
        },
        {
          "variation": ".WEBBUDDY",
          "line": 131,
          "column": 21,
          "context": "string",
          "lineText": "fetch(`${process.env.WEBBUDDY_API_URL}/endpoint`);"
        },
        {
          "variation": "webBuddy",
          "line": 137,
          "column": 4,
          "context": "string",
          "lineText": "\"webBuddy\": {"
        },
        {
          "variation": "WEBBUDDY",
          "line": 147,
          "column": 5,
          "context": "code",
          "lineText": "- WEBBUDDY_API_KEY=${WEBBUDDY_API_KEY}"
        },
        {
          "variation": "WEBBUDDY",
          "line": 147,
          "column": 24,
          "context": "code",
          "lineText": "- WEBBUDDY_API_KEY=${WEBBUDDY_API_KEY}"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 148,
          "column": 5,
          "context": "code",
          "lineText": "- WEB_BUDDY_DATABASE_URL=postgresql://buddy:pass@host/db"
        },
        {
          "variation": "//buddy",
          "line": 148,
          "column": 39,
          "context": "code",
          "lineText": "- WEB_BUDDY_DATABASE_URL=postgresql://buddy:pass@host/db"
        },
        {
          "variation": "buddy",
          "line": 155,
          "column": 32,
          "context": "code",
          "lineText": "- Database credentials with buddy references"
        },
        {
          "variation": "buddy",
          "line": 160,
          "column": 32,
          "context": "code",
          "lineText": "- User data associated with buddy identifiers"
        },
        {
          "variation": "buddy",
          "line": 161,
          "column": 13,
          "context": "code",
          "lineText": "- PII in buddy-named tables or collections"
        },
        {
          "variation": "buddy",
          "line": 162,
          "column": 32,
          "context": "code",
          "lineText": "- Logs containing sensitive buddy-related data"
        },
        {
          "variation": "buddy",
          "line": 165,
          "column": 25,
          "context": "code",
          "lineText": "- GDPR violations in buddy data handling"
        },
        {
          "variation": "buddy",
          "line": 166,
          "column": 18,
          "context": "code",
          "lineText": "- Unencrypted buddy credentials"
        },
        {
          "variation": "buddy",
          "line": 167,
          "column": 31,
          "context": "code",
          "lineText": "- Missing audit trails for buddy operations"
        },
        {
          "variation": "**Note**: This checklist must be completed BEFORE any mass buddy",
          "line": 196,
          "column": 1,
          "context": "code",
          "lineText": "**Note**: This checklist must be completed BEFORE any mass buddy-to-semantest replacement to prevent security incidents."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/web-buddy/story.html",
      "occurrenceCount": 47,
      "references": [
        {
          "variation": "ChatGPT-Buddy",
          "line": 3,
          "column": 16,
          "context": "string",
          "lineText": "subtitle: \"How ChatGPT-Buddy Became Web-Buddy Framework\""
        },
        {
          "variation": "Web-Buddy",
          "line": 3,
          "column": 37,
          "context": "string",
          "lineText": "subtitle: \"How ChatGPT-Buddy Became Web-Buddy Framework\""
        },
        {
          "variation": "\"Web-Buddy",
          "line": 4,
          "column": 9,
          "context": "code",
          "lineText": "author: \"Web-Buddy Team\""
        },
        {
          "variation": "web-buddy",
          "line": 7,
          "column": 10,
          "context": "code",
          "lineText": "project: web-buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 12,
          "column": 32,
          "context": "code",
          "lineText": "<p>In the beginning, there was ChatGPT-Buddy—a focused, single-purpose"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 25,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy started with a clear mission:</p>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 35,
          "column": 7,
          "context": "code",
          "lineText": "<p>As ChatGPT-Buddy gained popularity, feature requests started pouring"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 48,
          "column": 35,
          "context": "code",
          "lineText": "<pre class=\"ascii\"><code>Original ChatGPT-Buddy Architecture:"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 76,
          "column": 12,
          "context": "code",
          "lineText": "<p>What if ChatGPT-Buddy could evolve into a generic framework that:</p>"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 101,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyClient {"
        },
        {
          "variation": "WebBuddy",
          "line": 108,
          "column": 14,
          "context": "code",
          "lineText": "export class WebBuddyClient {"
        },
        {
          "variation": "WebBuddy",
          "line": 109,
          "column": 30,
          "context": "code",
          "lineText": "async sendMessage(message: WebBuddyMessage): Promise&lt;any&gt; {"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 114,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 115,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 115,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 118,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": "WebBuddy",
          "line": 137,
          "column": 6,
          "context": "code",
          "lineText": "│    WebBuddyClient, WebBuddyServer              │"
        },
        {
          "variation": "WebBuddy",
          "line": 137,
          "column": 22,
          "context": "code",
          "lineText": "│    WebBuddyClient, WebBuddyServer              │"
        },
        {
          "variation": "google-buddy",
          "line": 152,
          "column": 9,
          "context": "string",
          "lineText": "<h2 id=\"google-buddy-the-proof-of-concept\">Google-Buddy: The Proof of"
        },
        {
          "variation": "Google-Buddy",
          "line": 152,
          "column": 44,
          "context": "code",
          "lineText": "<h2 id=\"google-buddy-the-proof-of-concept\">Google-Buddy: The Proof of"
        },
        {
          "variation": "WebBuddy",
          "line": 165,
          "column": 25,
          "context": "code",
          "lineText": "async handle(message: WebBuddyMessage): Promise&lt;any&gt; {"
        },
        {
          "variation": "GoogleBuddy",
          "line": 183,
          "column": 14,
          "context": "code",
          "lineText": "export class GoogleBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 184,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 184,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 187,
          "column": 32,
          "context": "code",
          "lineText": "const response = await this.webBuddyClient.sendMessage({"
        },
        {
          "variation": "Google-Buddy",
          "line": 198,
          "column": 9,
          "context": "code",
          "lineText": "<p>When Google-Buddy worked without any changes to the core framework,"
        },
        {
          "variation": "Web-Buddy",
          "line": 206,
          "column": 11,
          "context": "code",
          "lineText": "<p>Before Web-Buddy, developers faced:</p>"
        },
        {
          "variation": "Web-Buddy",
          "line": 217,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy offered developers choice at every layer:</p>"
        },
        {
          "variation": "Web-Buddy",
          "line": 236,
          "column": 38,
          "context": "code",
          "lineText": "<li><strong>Discovery</strong>: Find Web-Buddy through domain"
        },
        {
          "variation": "Google-Buddy",
          "line": 237,
          "column": 17,
          "context": "code",
          "lineText": "implementation (Google-Buddy, ChatGPT-Buddy)</li>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 237,
          "column": 31,
          "context": "code",
          "lineText": "implementation (Google-Buddy, ChatGPT-Buddy)</li>"
        },
        {
          "variation": "Web-Buddy",
          "line": 248,
          "column": 7,
          "context": "code",
          "lineText": "<p>As Web-Buddy matured, something unexpected happened. Developers"
        },
        {
          "variation": "Web-Buddy",
          "line": 421,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy's success came from enabling developers rather than"
        },
        {
          "variation": "Web-Buddy",
          "line": 433,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy became more than a framework—it became a platform:</p>"
        },
        {
          "variation": "Web-Buddy",
          "line": 441,
          "column": 11,
          "context": "code",
          "lineText": "<p>Making Web-Buddy open source was strategic:</p>"
        },
        {
          "variation": "Web-Buddy",
          "line": 450,
          "column": 8,
          "context": "code",
          "lineText": "<p>The Web-Buddy pattern has implications beyond browser automation:</p>"
        },
        {
          "variation": "Web-Buddy",
          "line": 458,
          "column": 7,
          "context": "code",
          "lineText": "<p>As Web-Buddy matures, the ecosystem expands:</p>"
        },
        {
          "variation": "Web-Buddy",
          "line": 470,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy continues evolving:</p>"
        },
        {
          "variation": "Web-Buddy",
          "line": 480,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy taught us that the best frameworks:</p>"
        },
        {
          "variation": "Web-Buddy",
          "line": 488,
          "column": 8,
          "context": "code",
          "lineText": "<p>The Web-Buddy evolution demonstrates:</p>"
        },
        {
          "variation": "Web-Buddy",
          "line": 496,
          "column": 24,
          "context": "code",
          "lineText": "<p>Organizations using Web-Buddy benefit from:</p>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 505,
          "column": 22,
          "context": "string",
          "lineText": "<p>\"The journey from ChatGPT-Buddy to Web-Buddy shows that the best"
        },
        {
          "variation": "Web-Buddy",
          "line": 505,
          "column": 39,
          "context": "string",
          "lineText": "<p>\"The journey from ChatGPT-Buddy to Web-Buddy shows that the best"
        },
        {
          "variation": "Web-Buddy",
          "line": 511,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy proves that thoughtful architecture can transform a"
        },
        {
          "variation": "Web-Buddy",
          "line": 515,
          "column": 48,
          "context": "code",
          "lineText": "<p>The story continues as new domains join the Web-Buddy ecosystem, each"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 521,
          "column": 44,
          "context": "code",
          "lineText": "<p><strong><strong>The transformation from ChatGPT-Buddy to Web-Buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 521,
          "column": 61,
          "context": "code",
          "lineText": "<p><strong><strong>The transformation from ChatGPT-Buddy to Web-Buddy"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/journal.org",
      "occurrenceCount": 46,
      "references": [
        {
          "variation": "#+TITLE: Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: Web-Buddy Framework Development Journal"
        },
        {
          "variation": "Web-Buddy",
          "line": 6,
          "column": 45,
          "context": "code",
          "lineText": "This journal documents the evolution of the Web-Buddy framework from initial ChatGPT-specific automation to a comprehensive, contract-based web automation platform. The project has successfully transformed into a generic framework that enables robust, semantic web automation through event-driven architecture and contract-based testing."
        },
        {
          "variation": "Web-Buddy",
          "line": 9,
          "column": 49,
          "context": "code",
          "lineText": "After implementing the first four phases of the Web-Buddy framework roadmap, my understanding of the project's vision has crystallized:"
        },
        {
          "variation": "Web-Buddy",
          "line": 12,
          "column": 5,
          "context": "code",
          "lineText": "The Web-Buddy project represents a paradigm shift from brittle CSS selector-based automation to semantic, contract-driven web automation. The goal is to enable:"
        },
        {
          "variation": "**Core Layer** (@web-buddy",
          "line": 22,
          "column": 4,
          "context": "code",
          "lineText": "1. **Core Layer** (@web-buddy/core): Generic messaging infrastructure, event handling, and client/server communication"
        },
        {
          "variation": "Web-Buddy",
          "line": 64,
          "column": 106,
          "context": "code",
          "lineText": "The documentation provides a complete foundation for developers to understand, implement, and extend the Web-Buddy framework. The examples demonstrate real-world usage patterns and showcase the framework's capabilities across different automation scenarios."
        },
        {
          "variation": "Web-Buddy",
          "line": 67,
          "column": 99,
          "context": "code",
          "lineText": "Phase 6A strategic planning has been completed, laying the groundwork for the transformation from Web-Buddy to Semantest ecosystem:"
        },
        {
          "variation": "-buddy",
          "line": 76,
          "column": 29,
          "context": "string",
          "lineText": "- Transition from informal \"-buddy\" suffix to enterprise-ready DNS-style hierarchy"
        },
        {
          "variation": "@web-buddy",
          "line": 112,
          "column": 30,
          "context": "code",
          "lineText": "- 📋 Core package migration: @web-buddy/core → @semantest/browser"
        },
        {
          "variation": "@web-buddy",
          "line": 126,
          "column": 11,
          "context": "code",
          "lineText": "- Migrate @web-buddy/core to @semantest/browser with enhanced capabilities"
        },
        {
          "variation": "Web-Buddy",
          "line": 132,
          "column": 36,
          "context": "code",
          "lineText": "- Configure dual package building (Web-Buddy legacy + Semantest new)"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 335,
          "column": 12,
          "context": "code",
          "lineText": "- Created =ChatGPTBuddyClient= class with axios"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 342,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyClient {"
        },
        {
          "variation": "** Challenge: Evolving from -buddy",
          "line": 462,
          "column": 1,
          "context": "code",
          "lineText": "** Challenge: Evolving from -buddy Suffix to Professional DNS-Style Naming"
        },
        {
          "variation": "-buddy",
          "line": 464,
          "column": 12,
          "context": "code",
          "lineText": "- Current =-buddy= suffix creates informal branding that limits enterprise adoption"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 465,
          "column": 28,
          "context": "code",
          "lineText": "- Flat naming convention (=chatgpt-buddy=, =web-buddy=) doesn't scale with ecosystem growth"
        },
        {
          "variation": "web-buddy",
          "line": 465,
          "column": 45,
          "context": "code",
          "lineText": "- Flat naming convention (=chatgpt-buddy=, =web-buddy=) doesn't scale with ecosystem growth"
        },
        {
          "variation": "-buddy",
          "line": 470,
          "column": 35,
          "context": "code",
          "lineText": "The decision to rebrand from the =-buddy= suffix naming to =semantest= DNS-style prefixes stems from several strategic considerations:"
        },
        {
          "variation": "**Professional Positioning**: The =-buddy",
          "line": 472,
          "column": 4,
          "context": "code",
          "lineText": "1. **Professional Positioning**: The =-buddy= suffix, while friendly, creates an informal impression that may limit adoption in enterprise environments where professional tooling standards are expected."
        },
        {
          "variation": "GoogleBuddy",
          "line": 674,
          "column": 31,
          "context": "code",
          "lineText": "- Backward compatibility with GoogleBuddyClient wrapper"
        },
        {
          "variation": "**Client**: ChatGPTClient with modern API, ChatGPTBuddy",
          "line": 683,
          "column": 3,
          "context": "code",
          "lineText": "- **Client**: ChatGPTClient with modern API, ChatGPTBuddyClient for backward compatibility"
        },
        {
          "variation": "**Client**: WikipediaClient with modern API, WikipediaBuddy",
          "line": 693,
          "column": 3,
          "context": "code",
          "lineText": "- **Client**: WikipediaClient with modern API, WikipediaBuddyClient for compatibility"
        },
        {
          "variation": "Web-Buddy",
          "line": 723,
          "column": 58,
          "context": "code",
          "lineText": "Phase 6C represents the successful transformation of the Web-Buddy ecosystem into the professional Semantest platform. This migration achieved:"
        },
        {
          "variation": "-buddy",
          "line": 726,
          "column": 28,
          "context": "string",
          "lineText": "- Evolution from informal \"-buddy\" tools to professional semantic test automation platform"
        },
        {
          "variation": "**Migration Guide** (docs/migration-guide/README.org): Comprehensive Web-Buddy",
          "line": 755,
          "column": 3,
          "context": "code",
          "lineText": "- **Migration Guide** (docs/migration-guide/README.org): Comprehensive Web-Buddy to Semantest transition"
        },
        {
          "variation": "Web-Buddy",
          "line": 807,
          "column": 37,
          "context": "code",
          "lineText": "Zero-disruption migration path from Web-Buddy to Semantest:"
        },
        {
          "variation": "**Migration Confidence**: Zero-disruption transition from Web-Buddy",
          "line": 847,
          "column": 5,
          "context": "code",
          "lineText": "- ✅ **Migration Confidence**: Zero-disruption transition from Web-Buddy"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 887,
          "column": 19,
          "context": "string",
          "lineText": "The journey from \"ChatGPT-buddy\" to \"Semantest\" represents a successful transformation:"
        },
        {
          "variation": "**Intermediate**: Multi-domain Web-Buddy",
          "line": 891,
          "column": 3,
          "context": "code",
          "lineText": "- **Intermediate**: Multi-domain Web-Buddy framework"
        },
        {
          "variation": "**Initial**: Informal \"-buddy",
          "line": 895,
          "column": 3,
          "context": "code",
          "lineText": "- **Initial**: Informal \"-buddy\" naming and basic functionality"
        },
        {
          "variation": "**Framework Development**: Multi-domain Web-Buddy",
          "line": 1114,
          "column": 3,
          "context": "code",
          "lineText": "- **Framework Development**: Multi-domain Web-Buddy framework"
        },
        {
          "variation": "web-buddy",
          "line": 1314,
          "column": 5,
          "context": "code",
          "lineText": "1. =web-buddy-nodejs-server/src/security/audit-service.ts= - Core audit logging service"
        },
        {
          "variation": "web-buddy",
          "line": 1315,
          "column": 5,
          "context": "code",
          "lineText": "2. =web-buddy-nodejs-server/src/security/domain/audit-entry.ts= - Audit entry entity model"
        },
        {
          "variation": "web-buddy",
          "line": 1316,
          "column": 5,
          "context": "code",
          "lineText": "3. =web-buddy-nodejs-server/src/security/domain/audit-repository.ts= - Repository interface"
        },
        {
          "variation": "web-buddy",
          "line": 1317,
          "column": 5,
          "context": "code",
          "lineText": "4. =web-buddy-nodejs-server/src/security/compliance-validator.ts= - Multi-regulation validator"
        },
        {
          "variation": "web-buddy",
          "line": 1318,
          "column": 5,
          "context": "code",
          "lineText": "5. =web-buddy-nodejs-server/src/security/security-event-analyzer.ts= - Threat detection system"
        },
        {
          "variation": "** Journey Overview: From ChatGPT-Buddy",
          "line": 1329,
          "column": 1,
          "context": "code",
          "lineText": "** Journey Overview: From ChatGPT-Buddy to Semantest Cloud Platform"
        },
        {
          "variation": "Web-Buddy",
          "line": 1331,
          "column": 5,
          "context": "code",
          "lineText": "The Web-Buddy/Semantest framework roadmap has been successfully completed through seven comprehensive phases, transforming a simple browser automation tool into an enterprise-grade, AI-integrated semantic automation platform."
        },
        {
          "variation": "Web-Buddy",
          "line": 1347,
          "column": 33,
          "context": "code",
          "lineText": "- Strategic transformation from Web-Buddy to Semantest"
        },
        {
          "variation": "**Migration Tools**: Automated tooling for Web-Buddy",
          "line": 1377,
          "column": 3,
          "context": "code",
          "lineText": "- **Migration Tools**: Automated tooling for Web-Buddy to Semantest transition"
        },
        {
          "variation": "**Generic Framework**: Web-Buddy",
          "line": 1384,
          "column": 4,
          "context": "code",
          "lineText": "2. **Generic Framework**: Web-Buddy with multi-domain support"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 1691,
          "column": 13,
          "context": "code",
          "lineText": "- Original =chatgpt-buddy= folder will become git-less"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 1705,
          "column": 19,
          "context": "code",
          "lineText": "cd ~/github/rydnr/chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 1997,
          "column": 13,
          "context": "code",
          "lineText": "- Original =chatgpt-buddy= folder is now git-less and can be archived"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 2032,
          "column": 37,
          "context": "code",
          "lineText": "- Original location: ~/github/rydnr/chatgpt-buddy (now git-less)"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 2052,
          "column": 52,
          "context": "code",
          "lineText": "This journal documents the complete evolution from ChatGPT-buddy monorepo to the professional Semantest ecosystem, now ready for global developer adoption."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/web-buddy/story.org",
      "occurrenceCount": 42,
      "references": [
        {
          "variation": "#+SUBTITLE: How ChatGPT-Buddy Became Web-Buddy",
          "line": 2,
          "column": 1,
          "context": "code",
          "lineText": "#+SUBTITLE: How ChatGPT-Buddy Became Web-Buddy Framework"
        },
        {
          "variation": "#+AUTHOR: Web-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "#+AUTHOR: Web-Buddy Team"
        },
        {
          "variation": "#+PROJECT: web-buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "#+PROJECT: web-buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 10,
          "column": 29,
          "context": "code",
          "lineText": "In the beginning, there was ChatGPT-Buddy—a focused, single-purpose tool designed to automate interactions with ChatGPT. It worked well, users loved it, and it solved a real problem. But as with many successful tools, users began to ask: \"Could this work with other websites too?\""
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 20,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy started with a clear mission:"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 30,
          "column": 4,
          "context": "code",
          "lineText": "As ChatGPT-Buddy gained popularity, feature requests started pouring in:"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 41,
          "column": 10,
          "context": "code",
          "lineText": "Original ChatGPT-Buddy Architecture:"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 69,
          "column": 9,
          "context": "code",
          "lineText": "What if ChatGPT-Buddy could evolve into a generic framework that:"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 92,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyClient {"
        },
        {
          "variation": "WebBuddy",
          "line": 99,
          "column": 14,
          "context": "code",
          "lineText": "export class WebBuddyClient {"
        },
        {
          "variation": "WebBuddy",
          "line": 100,
          "column": 30,
          "context": "code",
          "lineText": "async sendMessage(message: WebBuddyMessage): Promise<any> {"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 105,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 106,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 106,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 109,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": "WebBuddy",
          "line": 132,
          "column": 6,
          "context": "code",
          "lineText": "│    WebBuddyClient, WebBuddyServer              │"
        },
        {
          "variation": "WebBuddy",
          "line": 132,
          "column": 22,
          "context": "code",
          "lineText": "│    WebBuddyClient, WebBuddyServer              │"
        },
        {
          "variation": "** Google-Buddy",
          "line": 145,
          "column": 1,
          "context": "code",
          "lineText": "** Google-Buddy: The Proof of Concept"
        },
        {
          "variation": "WebBuddy",
          "line": 159,
          "column": 25,
          "context": "code",
          "lineText": "async handle(message: WebBuddyMessage): Promise<any> {"
        },
        {
          "variation": "GoogleBuddy",
          "line": 177,
          "column": 14,
          "context": "code",
          "lineText": "export class GoogleBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 178,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 178,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 181,
          "column": 32,
          "context": "code",
          "lineText": "const response = await this.webBuddyClient.sendMessage({"
        },
        {
          "variation": "Google-Buddy",
          "line": 194,
          "column": 6,
          "context": "code",
          "lineText": "When Google-Buddy worked without any changes to the core framework, the team knew they had succeeded. The same infrastructure, extension framework, and client patterns worked seamlessly with a completely different website."
        },
        {
          "variation": "Web-Buddy",
          "line": 200,
          "column": 8,
          "context": "code",
          "lineText": "Before Web-Buddy, developers faced:"
        },
        {
          "variation": "Web-Buddy",
          "line": 208,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy offered developers choice at every layer:"
        },
        {
          "variation": "*Discovery*: Find Web-Buddy through domain implementation (Google-Buddy, ChatGPT-Buddy",
          "line": 230,
          "column": 4,
          "context": "code",
          "lineText": "1. *Discovery*: Find Web-Buddy through domain implementation (Google-Buddy, ChatGPT-Buddy)"
        },
        {
          "variation": "Web-Buddy",
          "line": 239,
          "column": 4,
          "context": "code",
          "lineText": "As Web-Buddy matured, something unexpected happened. Developers didn't just use it—they extended it:"
        },
        {
          "variation": "Web-Buddy",
          "line": 402,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy's success came from enabling developers rather than constraining them:"
        },
        {
          "variation": "Web-Buddy",
          "line": 411,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy became more than a framework—it became a platform:"
        },
        {
          "variation": "Web-Buddy",
          "line": 419,
          "column": 8,
          "context": "code",
          "lineText": "Making Web-Buddy open source was strategic:"
        },
        {
          "variation": "Web-Buddy",
          "line": 429,
          "column": 5,
          "context": "code",
          "lineText": "The Web-Buddy pattern has implications beyond browser automation:"
        },
        {
          "variation": "Web-Buddy",
          "line": 437,
          "column": 4,
          "context": "code",
          "lineText": "As Web-Buddy matures, the ecosystem expands:"
        },
        {
          "variation": "Web-Buddy",
          "line": 445,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy continues evolving:"
        },
        {
          "variation": "Web-Buddy",
          "line": 455,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy taught us that the best frameworks:"
        },
        {
          "variation": "Web-Buddy",
          "line": 463,
          "column": 5,
          "context": "code",
          "lineText": "The Web-Buddy evolution demonstrates:"
        },
        {
          "variation": "Web-Buddy",
          "line": 471,
          "column": 21,
          "context": "code",
          "lineText": "Organizations using Web-Buddy benefit from:"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 480,
          "column": 19,
          "context": "string",
          "lineText": "\"The journey from ChatGPT-Buddy to Web-Buddy shows that the best software evolves not by abandoning its core principles, but by discovering which of those principles are universal and which are domain-specific. By separating the universal from the specific, we created something larger than the sum of its parts.\""
        },
        {
          "variation": "Web-Buddy",
          "line": 480,
          "column": 36,
          "context": "string",
          "lineText": "\"The journey from ChatGPT-Buddy to Web-Buddy shows that the best software evolves not by abandoning its core principles, but by discovering which of those principles are universal and which are domain-specific. By separating the universal from the specific, we created something larger than the sum of its parts.\""
        },
        {
          "variation": "Web-Buddy",
          "line": 483,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy proves that thoughtful architecture can transform a successful tool into a thriving platform. The key is recognizing what should be shared and what should be specialized, then building clear boundaries between them."
        },
        {
          "variation": "Web-Buddy",
          "line": 485,
          "column": 45,
          "context": "code",
          "lineText": "The story continues as new domains join the Web-Buddy ecosystem, each one validating the architectural decisions and adding to the collective value of the framework. From one tool to many, from single-purpose to multi-purpose, from application to platform—this is the evolution of software that serves not just its original vision, but the broader vision of what's possible."
        },
        {
          "variation": "**The transformation from ChatGPT-Buddy to Web-Buddy",
          "line": 487,
          "column": 1,
          "context": "code",
          "lineText": "**The transformation from ChatGPT-Buddy to Web-Buddy shows that the best software doesn't just solve problems—it creates platforms for solving entire classes of problems.**"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/web-buddy/index.html",
      "occurrenceCount": 38,
      "references": [
        {
          "variation": "\"Web-Buddy",
          "line": 2,
          "column": 8,
          "context": "code",
          "lineText": "title: \"Web-Buddy - Generic Web Automation Framework\""
        },
        {
          "variation": "\"Web-Buddy",
          "line": 4,
          "column": 9,
          "context": "code",
          "lineText": "author: \"Web-Buddy Team\""
        },
        {
          "variation": "web-buddy",
          "line": 7,
          "column": 10,
          "context": "code",
          "lineText": "project: web-buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 11,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy is a generic web automation framework built on"
        },
        {
          "variation": "web-buddy",
          "line": 16,
          "column": 13,
          "context": "string",
          "lineText": "<h2 id=\"the-web-buddy-philosophy\">The Web-Buddy Philosophy</h2>"
        },
        {
          "variation": "Web-Buddy",
          "line": 16,
          "column": 39,
          "context": "code",
          "lineText": "<h2 id=\"the-web-buddy-philosophy\">The Web-Buddy Philosophy</h2>"
        },
        {
          "variation": "Web-Buddy",
          "line": 17,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy believes that web automation should be:</p>"
        },
        {
          "variation": "GoogleBuddy",
          "line": 31,
          "column": 11,
          "context": "code",
          "lineText": "│         GoogleBuddyClient.search()             │   chatGPTClient.selectProject()"
        },
        {
          "variation": "WebBuddy",
          "line": 37,
          "column": 11,
          "context": "code",
          "lineText": "│         WebBuddyClient.sendMessage()           │   WebBuddyServer, WebBuddyExtension"
        },
        {
          "variation": "WebBuddy",
          "line": 37,
          "column": 54,
          "context": "code",
          "lineText": "│         WebBuddyClient.sendMessage()           │   WebBuddyServer, WebBuddyExtension"
        },
        {
          "variation": "WebBuddy",
          "line": 37,
          "column": 70,
          "context": "code",
          "lineText": "│         WebBuddyClient.sendMessage()           │   WebBuddyServer, WebBuddyExtension"
        },
        {
          "variation": "Web-Buddy",
          "line": 42,
          "column": 13,
          "context": "code",
          "lineText": "<li><strong>Web-Buddy Core</strong>: Generic messaging infrastructure,"
        },
        {
          "variation": "@web-buddy",
          "line": 81,
          "column": 27,
          "context": "code",
          "lineText": "<li>Core framework: <code>@web-buddy/core</code></li>"
        },
        {
          "variation": "@web-buddy",
          "line": 82,
          "column": 23,
          "context": "code",
          "lineText": "<li>Client SDK: <code>@web-buddy/client</code></li>"
        },
        {
          "variation": "@web-buddy",
          "line": 84,
          "column": 7,
          "context": "code",
          "lineText": "<code>@web-buddy/extension-framework</code></li>"
        },
        {
          "variation": "@web-buddy",
          "line": 85,
          "column": 30,
          "context": "code",
          "lineText": "<li>Testing utilities: <code>@web-buddy/testing</code></li>"
        },
        {
          "variation": "WebBuddy",
          "line": 89,
          "column": 46,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { createWebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 89,
          "column": 69,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { createWebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "WebBuddy",
          "line": 91,
          "column": 25,
          "context": "code",
          "lineText": "const webClient = createWebBuddyClient({"
        },
        {
          "variation": "GoogleBuddy",
          "line": 104,
          "column": 40,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { GoogleBuddyClient } from &#39;@google-buddy/client&#39;;"
        },
        {
          "variation": "#39;@google-buddy",
          "line": 104,
          "column": 66,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { GoogleBuddyClient } from &#39;@google-buddy/client&#39;;"
        },
        {
          "variation": "GoogleBuddy",
          "line": 107,
          "column": 26,
          "context": "code",
          "lineText": "const googleClient = new GoogleBuddyClient(webClient);"
        },
        {
          "variation": "GoogleBuddy",
          "line": 113,
          "column": 26,
          "context": "code",
          "lineText": "const googleClient = new GoogleBuddyClient(webClient);"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 114,
          "column": 27,
          "context": "code",
          "lineText": "const chatGPTClient = new ChatGPTBuddyClient(webClient);"
        },
        {
          "variation": "WebBuddy",
          "line": 166,
          "column": 1,
          "context": "code",
          "lineText": "WebBuddyClient.sendMessage()"
        },
        {
          "variation": "WebBuddy",
          "line": 226,
          "column": 25,
          "context": "code",
          "lineText": "async handle(message: WebBuddyMessage): Promise&lt;any&gt; {"
        },
        {
          "variation": "Buddy",
          "line": 232,
          "column": 18,
          "context": "code",
          "lineText": "export class SiteBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 233,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 233,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 236,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": "Web-Buddy",
          "line": 275,
          "column": 39,
          "context": "code",
          "lineText": "<p>Ready to build web automation with Web-Buddy? Check out our <a"
        },
        {
          "variation": "Web-Buddy",
          "line": 277,
          "column": 62,
          "context": "code",
          "lineText": "first multi-site automation, or read the <a href=\"story.org\">Web-Buddy"
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 288,
          "column": 20,
          "context": "string",
          "lineText": "<li><a href=\"https://github.com/rydnr/web-buddy\">📁 GitHub"
        },
        {
          "variation": "//www.npmjs.com/package/@web-buddy",
          "line": 290,
          "column": 20,
          "context": "string",
          "lineText": "<li><a href=\"https://www.npmjs.com/package/@web-buddy/core\">📦 NPM"
        },
        {
          "variation": "Web-Buddy",
          "line": 294,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy is actively developed and used in production. The framework"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 295,
          "column": 33,
          "context": "code",
          "lineText": "has evolved from the successful ChatGPT-Buddy project and incorporates"
        },
        {
          "variation": "Google-Buddy",
          "line": 300,
          "column": 46,
          "context": "code",
          "lineText": "<li><strong>Domain Implementations</strong>: Google-Buddy,"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 301,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy</li>"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/development.html",
      "occurrenceCount": 38,
      "references": [
        {
          "variation": "ChatGPT-Buddy",
          "line": 2,
          "column": 9,
          "context": "string",
          "lineText": "title: \"ChatGPT-Buddy Development Guide\""
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 4,
          "column": 10,
          "context": "string",
          "lineText": "author: \"ChatGPT-Buddy Team\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 7,
          "column": 10,
          "context": "code",
          "lineText": "project: chatgpt-buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 28,
          "column": 4,
          "context": "code",
          "lineText": "<p>Web-Buddy is a generic web automation framework that transforms"
        },
        {
          "variation": "/web-buddy",
          "line": 35,
          "column": 16,
          "context": "code",
          "lineText": "(<code>packages/web-buddy-core</code>)</li>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 37,
          "column": 25,
          "context": "code",
          "lineText": "support (<code>packages/chatgpt-buddy-server</code>)</li>"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 78,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy.git"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 79,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 104,
          "column": 28,
          "context": "code",
          "lineText": "<pre class=\"example\"><code>chatgpt-buddy/"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 106,
          "column": 9,
          "context": "code",
          "lineText": "│   ├── chatgpt-buddy-server/          # HTTP server with WebSocket"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 107,
          "column": 9,
          "context": "code",
          "lineText": "│   ├── chatgpt-buddy-core/            # Legacy core (being migrated)"
        },
        {
          "variation": "web-buddy",
          "line": 108,
          "column": 9,
          "context": "code",
          "lineText": "│   └── web-buddy-core/                # New generic framework core"
        },
        {
          "variation": "google-buddy",
          "line": 117,
          "column": 9,
          "context": "code",
          "lineText": "│   └── google-buddy/                  # Google search automation"
        },
        {
          "variation": "# Terminal 1: Start the Web-Buddy",
          "line": 138,
          "column": 25,
          "context": "code",
          "lineText": "<pre class=\"bash\"><code># Terminal 1: Start the Web-Buddy server with WebSocket support"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 139,
          "column": 13,
          "context": "code",
          "lineText": "cd /path/to/chatgpt-buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 157,
          "column": 15,
          "context": "code",
          "lineText": "<li>Click the Web-Buddy extension icon</li>"
        },
        {
          "variation": "# Chrome → Extensions → Web-Buddy",
          "line": 176,
          "column": 1,
          "context": "code",
          "lineText": "# Chrome → Extensions → Web-Buddy → Reload icon"
        },
        {
          "variation": "Web-Buddy",
          "line": 195,
          "column": 14,
          "context": "code",
          "lineText": "│            Web-Buddy Server                 │  ← Event Processing"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 196,
          "column": 18,
          "context": "code",
          "lineText": "│      (packages/chatgpt-buddy-server)       │"
        },
        {
          "variation": "# 1. Chrome → Extensions → Web-Buddy",
          "line": 241,
          "column": 1,
          "context": "code",
          "lineText": "# 1. Chrome → Extensions → Web-Buddy → Details"
        },
        {
          "variation": "WebBuddy",
          "line": 313,
          "column": 1,
          "context": "code",
          "lineText": "WebBuddyClient.sendEvent()"
        },
        {
          "variation": "web-buddy",
          "line": 343,
          "column": 8,
          "context": "code",
          "lineText": "(<code>web-buddy-core</code>)</li>"
        },
        {
          "variation": "google-buddy",
          "line": 345,
          "column": 8,
          "context": "code",
          "lineText": "(<code>google-buddy</code>)</li>"
        },
        {
          "variation": "GoogleBuddy",
          "line": 347,
          "column": 8,
          "context": "code",
          "lineText": "(<code>GoogleBuddyClient</code>)</li>"
        },
        {
          "variation": "-buddy",
          "line": 361,
          "column": 32,
          "context": "code",
          "lineText": "mkdir implementations/your-site-buddy"
        },
        {
          "variation": "-buddy",
          "line": 362,
          "column": 29,
          "context": "code",
          "lineText": "cd implementations/your-site-buddy"
        },
        {
          "variation": "-buddy",
          "line": 367,
          "column": 37,
          "context": "code",
          "lineText": "&quot;name&quot;: &quot;@your-site-buddy/client&quot;,"
        },
        {
          "variation": "@web-buddy",
          "line": 370,
          "column": 11,
          "context": "code",
          "lineText": "&quot;@web-buddy/core&quot;: &quot;workspace:*&quot;"
        },
        {
          "variation": "WebBuddy",
          "line": 378,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "#39;@web-buddy",
          "line": 378,
          "column": 33,
          "context": "code",
          "lineText": "import { WebBuddyClient } from &#39;@web-buddy/core&#39;;"
        },
        {
          "variation": "Buddy",
          "line": 380,
          "column": 22,
          "context": "code",
          "lineText": "export class YourSiteBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 381,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 381,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 384,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendEvent({"
        },
        {
          "variation": "-buddy",
          "line": 393,
          "column": 37,
          "context": "code",
          "lineText": "echo &quot;implementations/your-site-buddy&quot; &gt;&gt; ../../pnpm-workspace.yaml"
        },
        {
          "variation": "# Chrome → Extensions → Web-Buddy",
          "line": 422,
          "column": 1,
          "context": "code",
          "lineText": "# Chrome → Extensions → Web-Buddy → Inspect views: background page"
        },
        {
          "variation": "/web-buddy",
          "line": 489,
          "column": 12,
          "context": "code",
          "lineText": "<code>specs/web-buddy-framework-roadmap.md</code></li>"
        },
        {
          "variation": "GoogleBuddy",
          "line": 549,
          "column": 7,
          "context": "code",
          "lineText": "- Add GoogleBuddyClient with search() method"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/development.org",
      "occurrenceCount": 38,
      "references": [
        {
          "variation": "#+TITLE: ChatGPT-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: ChatGPT-Buddy Development Guide"
        },
        {
          "variation": "#+AUTHOR: ChatGPT-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "#+AUTHOR: ChatGPT-Buddy Team"
        },
        {
          "variation": "#+PROJECT: chatgpt-buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "#+PROJECT: chatgpt-buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 23,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy is a generic web automation framework that transforms single-purpose tools into extensible, maintainable automation platforms. This guide will help you set up your development environment and understand the project structure."
        },
        {
          "variation": "*Core Framework*: Generic messaging infrastructure (~packages/web-buddy",
          "line": 26,
          "column": 3,
          "context": "code",
          "lineText": "- *Core Framework*: Generic messaging infrastructure (~packages/web-buddy-core~)"
        },
        {
          "variation": "*Server*: Event-driven HTTP server with WebSocket support (~packages/chatgpt-buddy",
          "line": 27,
          "column": 3,
          "context": "code",
          "lineText": "- *Server*: Event-driven HTTP server with WebSocket support (~packages/chatgpt-buddy-server~)"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 66,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy.git"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 67,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 99,
          "column": 1,
          "context": "code",
          "lineText": "chatgpt-buddy/"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 101,
          "column": 9,
          "context": "code",
          "lineText": "│   ├── chatgpt-buddy-server/          # HTTP server with WebSocket"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 102,
          "column": 9,
          "context": "code",
          "lineText": "│   ├── chatgpt-buddy-core/            # Legacy core (being migrated)"
        },
        {
          "variation": "web-buddy",
          "line": 103,
          "column": 9,
          "context": "code",
          "lineText": "│   └── web-buddy-core/                # New generic framework core"
        },
        {
          "variation": "google-buddy",
          "line": 112,
          "column": 9,
          "context": "code",
          "lineText": "│   └── google-buddy/                  # Google search automation"
        },
        {
          "variation": "# Terminal 1: Start the Web-Buddy",
          "line": 131,
          "column": 1,
          "context": "code",
          "lineText": "# Terminal 1: Start the Web-Buddy server with WebSocket support"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 132,
          "column": 13,
          "context": "code",
          "lineText": "cd /path/to/chatgpt-buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 149,
          "column": 14,
          "context": "code",
          "lineText": "1. Click the Web-Buddy extension icon"
        },
        {
          "variation": "# Chrome → Extensions → Web-Buddy",
          "line": 168,
          "column": 1,
          "context": "code",
          "lineText": "# Chrome → Extensions → Web-Buddy → Reload icon"
        },
        {
          "variation": "Web-Buddy",
          "line": 189,
          "column": 14,
          "context": "code",
          "lineText": "│            Web-Buddy Server                 │  ← Event Processing"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 190,
          "column": 18,
          "context": "code",
          "lineText": "│      (packages/chatgpt-buddy-server)       │"
        },
        {
          "variation": "# 1. Chrome → Extensions → Web-Buddy",
          "line": 238,
          "column": 1,
          "context": "code",
          "lineText": "# 1. Chrome → Extensions → Web-Buddy → Details"
        },
        {
          "variation": "WebBuddy",
          "line": 317,
          "column": 1,
          "context": "code",
          "lineText": "WebBuddyClient.sendEvent()"
        },
        {
          "variation": "*Core Layer*: Generic messaging (~web-buddy",
          "line": 344,
          "column": 3,
          "context": "code",
          "lineText": "- *Core Layer*: Generic messaging (~web-buddy-core~)"
        },
        {
          "variation": "*Domain Layer*: Site-specific logic (~google-buddy",
          "line": 345,
          "column": 3,
          "context": "code",
          "lineText": "- *Domain Layer*: Site-specific logic (~google-buddy~)"
        },
        {
          "variation": "*API Layer*: Developer-friendly wrappers (~GoogleBuddy",
          "line": 346,
          "column": 3,
          "context": "code",
          "lineText": "- *API Layer*: Developer-friendly wrappers (~GoogleBuddyClient~)"
        },
        {
          "variation": "-buddy",
          "line": 360,
          "column": 32,
          "context": "code",
          "lineText": "mkdir implementations/your-site-buddy"
        },
        {
          "variation": "-buddy",
          "line": 361,
          "column": 29,
          "context": "code",
          "lineText": "cd implementations/your-site-buddy"
        },
        {
          "variation": "-buddy",
          "line": 366,
          "column": 22,
          "context": "string",
          "lineText": "\"name\": \"@your-site-buddy/client\","
        },
        {
          "variation": "@web-buddy",
          "line": 369,
          "column": 6,
          "context": "string",
          "lineText": "\"@web-buddy/core\": \"workspace:*\""
        },
        {
          "variation": "WebBuddy",
          "line": 377,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 377,
          "column": 33,
          "context": "string",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "Buddy",
          "line": 379,
          "column": 22,
          "context": "code",
          "lineText": "export class YourSiteBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 380,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 380,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 383,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendEvent({"
        },
        {
          "variation": "-buddy",
          "line": 392,
          "column": 32,
          "context": "string",
          "lineText": "echo \"implementations/your-site-buddy\" >> ../../pnpm-workspace.yaml"
        },
        {
          "variation": "# Chrome → Extensions → Web-Buddy",
          "line": 425,
          "column": 1,
          "context": "code",
          "lineText": "# Chrome → Extensions → Web-Buddy → Inspect views: background page"
        },
        {
          "variation": "*Architecture*: ~specs/web-buddy",
          "line": 489,
          "column": 3,
          "context": "code",
          "lineText": "- *Architecture*: ~specs/web-buddy-framework-roadmap.md~"
        },
        {
          "variation": "GoogleBuddy",
          "line": 541,
          "column": 7,
          "context": "code",
          "lineText": "- Add GoogleBuddyClient with search() method"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/contracts/contract-discovery-adapter.ts",
      "occurrenceCount": 37,
      "references": [
        {
          "variation": "webBuddy",
          "line": 6,
          "column": 10,
          "context": "code",
          "lineText": "import { webBuddyStorage, AutomationPattern } from '../storage';"
        },
        {
          "variation": "WebBuddy",
          "line": 9,
          "column": 11,
          "context": "code",
          "lineText": "interface WebBuddyContract {"
        },
        {
          "variation": "WebBuddy",
          "line": 142,
          "column": 59,
          "context": "code",
          "lineText": "export class ContractsDiscoveredEvent extends CustomEvent<WebBuddyContract[]> {"
        },
        {
          "variation": "WebBuddy",
          "line": 143,
          "column": 26,
          "context": "code",
          "lineText": "constructor(contracts: WebBuddyContract[]) {"
        },
        {
          "variation": "web-buddy",
          "line": 144,
          "column": 12,
          "context": "string",
          "lineText": "super('web-buddy:contracts-discovered', {"
        },
        {
          "variation": "* Contract discovery and management adapter for Web-Buddy",
          "line": 153,
          "column": 2,
          "context": "code",
          "lineText": "* Contract discovery and management adapter for Web-Buddy extension"
        },
        {
          "variation": "WebBuddy",
          "line": 156,
          "column": 44,
          "context": "code",
          "lineText": "private discoveredContracts: Map<string, WebBuddyContract> = new Map();"
        },
        {
          "variation": "WebBuddy",
          "line": 190,
          "column": 45,
          "context": "code",
          "lineText": "public async discoverContracts(): Promise<WebBuddyContract[]> {"
        },
        {
          "variation": "WebBuddy",
          "line": 191,
          "column": 22,
          "context": "code",
          "lineText": "const contracts: WebBuddyContract[] = [];"
        },
        {
          "variation": "WebBuddy",
          "line": 239,
          "column": 43,
          "context": "code",
          "lineText": "public async registerContract(contract: WebBuddyContract): Promise<void> {"
        },
        {
          "variation": "webBuddy",
          "line": 257,
          "column": 15,
          "context": "code",
          "lineText": "await webBuddyStorage.saveAutomationPattern(pattern);"
        },
        {
          "variation": "WebBuddy",
          "line": 269,
          "column": 36,
          "context": "code",
          "lineText": "public getDiscoveredContracts(): WebBuddyContract[] {"
        },
        {
          "variation": "WebBuddy",
          "line": 276,
          "column": 48,
          "context": "code",
          "lineText": "public getContractsByDomain(domain: string): WebBuddyContract[] {"
        },
        {
          "variation": "WebBuddy",
          "line": 307,
          "column": 38,
          "context": "code",
          "lineText": "private validateContract(contract: WebBuddyContract): { valid: boolean; errors: string[] } {"
        },
        {
          "variation": "WebBuddy",
          "line": 339,
          "column": 47,
          "context": "code",
          "lineText": "private convertContractToPatterns(contract: WebBuddyContract): Omit<AutomationPattern, 'id' | 'timestamp'>[] {"
        },
        {
          "variation": "WebBuddy",
          "line": 491,
          "column": 35,
          "context": "code",
          "lineText": "private discoverFromMetaTags(): WebBuddyContract[] {"
        },
        {
          "variation": "WebBuddy",
          "line": 492,
          "column": 22,
          "context": "code",
          "lineText": "const contracts: WebBuddyContract[] = [];"
        },
        {
          "variation": "\"web-buddy",
          "line": 494,
          "column": 60,
          "context": "string",
          "lineText": "const metaTags = document.querySelectorAll('meta[name^=\"web-buddy-contract\"]');"
        },
        {
          "variation": "WebBuddy",
          "line": 499,
          "column": 51,
          "context": "code",
          "lineText": "const contract = JSON.parse(content) as WebBuddyContract;"
        },
        {
          "variation": "WebBuddy",
          "line": 513,
          "column": 33,
          "context": "code",
          "lineText": "private discoverFromJsonLD(): WebBuddyContract[] {"
        },
        {
          "variation": "WebBuddy",
          "line": 514,
          "column": 22,
          "context": "code",
          "lineText": "const contracts: WebBuddyContract[] = [];"
        },
        {
          "variation": "WebBuddy",
          "line": 520,
          "column": 32,
          "context": "string",
          "lineText": "if (data['@type'] === 'WebBuddyContract') {"
        },
        {
          "variation": "WebBuddy",
          "line": 521,
          "column": 34,
          "context": "code",
          "lineText": "contracts.push(data as WebBuddyContract);"
        },
        {
          "variation": "WebBuddy",
          "line": 534,
          "column": 41,
          "context": "code",
          "lineText": "private discoverFromCustomElements(): WebBuddyContract[] {"
        },
        {
          "variation": "WebBuddy",
          "line": 535,
          "column": 22,
          "context": "code",
          "lineText": "const contracts: WebBuddyContract[] = [];"
        },
        {
          "variation": "web-buddy",
          "line": 537,
          "column": 57,
          "context": "string",
          "lineText": "const contractElements = document.querySelectorAll('web-buddy-contract');"
        },
        {
          "variation": "WebBuddy",
          "line": 542,
          "column": 56,
          "context": "code",
          "lineText": "const contract = JSON.parse(contractData) as WebBuddyContract;"
        },
        {
          "variation": "WebBuddy",
          "line": 556,
          "column": 41,
          "context": "code",
          "lineText": "private discoverFromDataAttributes(): WebBuddyContract[] {"
        },
        {
          "variation": "WebBuddy",
          "line": 557,
          "column": 22,
          "context": "code",
          "lineText": "const contracts: WebBuddyContract[] = [];"
        },
        {
          "variation": "WebBuddy",
          "line": 564,
          "column": 56,
          "context": "code",
          "lineText": "const contract = JSON.parse(contractData) as WebBuddyContract;"
        },
        {
          "variation": "WebBuddy",
          "line": 578,
          "column": 39,
          "context": "code",
          "lineText": "private discoverFromWindowEvents(): WebBuddyContract[] {"
        },
        {
          "variation": "WEB-BUDDY",
          "line": 597,
          "column": 40,
          "context": "string",
          "lineText": "if (element.tagName === 'WEB-BUDDY-CONTRACT' ||"
        },
        {
          "variation": "web-buddy",
          "line": 599,
          "column": 42,
          "context": "string",
          "lineText": "element.querySelector('web-buddy-contract, [data-automation-contract]')) {"
        },
        {
          "variation": "web-buddy",
          "line": 624,
          "column": 30,
          "context": "string",
          "lineText": "window.addEventListener('web-buddy:contract-registered', (event: CustomEvent) => {"
        },
        {
          "variation": "web-buddy",
          "line": 631,
          "column": 32,
          "context": "string",
          "lineText": "if (event.data.type === 'web-buddy:request-contracts') {"
        },
        {
          "variation": "web-buddy",
          "line": 634,
          "column": 18,
          "context": "string",
          "lineText": "type: 'web-buddy:contracts-response',"
        },
        {
          "variation": "WebBuddy",
          "line": 669,
          "column": 40,
          "context": "code",
          "lineText": "private generateContractId(contract: WebBuddyContract): string {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/GETTING_STARTED.md",
      "occurrenceCount": 37,
      "references": [
        {
          "variation": "# 🚀 Getting Started with Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "# 🚀 Getting Started with Web-Buddy Framework"
        },
        {
          "variation": "Web-Buddy",
          "line": 5,
          "column": 12,
          "context": "code",
          "lineText": "Welcome to Web-Buddy Framework! This guide will get you up and running with intelligent browser automation in just a few minutes."
        },
        {
          "variation": "@web-buddy",
          "line": 30,
          "column": 13,
          "context": "code",
          "lineText": "npm install @web-buddy/client-ts"
        },
        {
          "variation": "web-buddy",
          "line": 35,
          "column": 13,
          "context": "code",
          "lineText": "pip install web-buddy-sdk"
        },
        {
          "variation": "**Start the Web-Buddy",
          "line": 40,
          "column": 4,
          "context": "code",
          "lineText": "1. **Start the Web-Buddy Server:**"
        },
        {
          "variation": "@web-buddy",
          "line": 42,
          "column": 5,
          "context": "code",
          "lineText": "npx @web-buddy/server"
        },
        {
          "variation": "WebBuddy",
          "line": 56,
          "column": 21,
          "context": "code",
          "lineText": "import { EventDrivenWebBuddyClient } from '@web-buddy/client-ts';"
        },
        {
          "variation": "@web-buddy",
          "line": 56,
          "column": 44,
          "context": "string",
          "lineText": "import { EventDrivenWebBuddyClient } from '@web-buddy/client-ts';"
        },
        {
          "variation": "WebBuddy",
          "line": 58,
          "column": 31,
          "context": "code",
          "lineText": "const client = new EventDrivenWebBuddyClient({"
        },
        {
          "variation": "web_buddy",
          "line": 79,
          "column": 6,
          "context": "code",
          "lineText": "from web_buddy_sdk import EventDrivenWebBuddyClient"
        },
        {
          "variation": "WebBuddy",
          "line": 79,
          "column": 38,
          "context": "code",
          "lineText": "from web_buddy_sdk import EventDrivenWebBuddyClient"
        },
        {
          "variation": "WebBuddy",
          "line": 81,
          "column": 21,
          "context": "code",
          "lineText": "client = EventDrivenWebBuddyClient("
        },
        {
          "variation": "**Congratulations!** You just completed your first Web-Buddy",
          "line": 96,
          "column": 4,
          "context": "code",
          "lineText": "🎉 **Congratulations!** You just completed your first Web-Buddy automation!"
        },
        {
          "variation": "Web-Buddy",
          "line": 104,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy is built on **pure event-driven communication**. Instead of calling methods like `clickButton()`, you send **domain events** like `ProjectSelectionRequested`."
        },
        {
          "variation": "// ✅ Web-Buddy",
          "line": 110,
          "column": 1,
          "context": "code",
          "lineText": "// ✅ Web-Buddy approach (event-driven)"
        },
        {
          "variation": "Web-Buddy",
          "line": 117,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy learns automation patterns by watching you demonstrate actions:"
        },
        {
          "variation": "Web-Buddy",
          "line": 136,
          "column": 6,
          "context": "code",
          "lineText": "│ 🌐 Web-Buddy Server                                             │"
        },
        {
          "variation": "WebBuddy",
          "line": 168,
          "column": 21,
          "context": "code",
          "lineText": "import { EventDrivenWebBuddyClient } from '@web-buddy/client-ts';"
        },
        {
          "variation": "@web-buddy",
          "line": 168,
          "column": 44,
          "context": "string",
          "lineText": "import { EventDrivenWebBuddyClient } from '@web-buddy/client-ts';"
        },
        {
          "variation": "WebBuddy",
          "line": 170,
          "column": 31,
          "context": "code",
          "lineText": "const client = new EventDrivenWebBuddyClient({"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 172,
          "column": 25,
          "context": "code",
          "lineText": "apiKey: process.env.WEB_BUDDY_API_KEY || 'your-super-secret-client-key'"
        },
        {
          "variation": "Web-Buddy",
          "line": 177,
          "column": 29,
          "context": "string",
          "lineText": "console.log(`✅ Connected to Web-Buddy (${ping.latency}ms)`);"
        },
        {
          "variation": "Web-Buddy",
          "line": 257,
          "column": 24,
          "context": "code",
          "lineText": "The training system is Web-Buddy's **killer feature**. It learns by watching you, eliminating the need to write complex selectors."
        },
        {
          "variation": "**Web-Buddy",
          "line": 271,
          "column": 4,
          "context": "code",
          "lineText": "3. **Web-Buddy learns** the pattern automatically"
        },
        {
          "variation": "Web-Buddy",
          "line": 327,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy's event-driven design makes it powerful and extensible:"
        },
        {
          "variation": "@web-buddy",
          "line": 361,
          "column": 9,
          "context": "string",
          "lineText": "} from '@web-buddy/client-ts';"
        },
        {
          "variation": "**GitHub**: [github.com/web-buddy/framework](https://github.com/web-buddy",
          "line": 439,
          "column": 3,
          "context": "code",
          "lineText": "- **GitHub**: [github.com/web-buddy/framework](https://github.com/web-buddy/framework)"
        },
        {
          "variation": "**Discord**: [discord.gg/web-buddy](https://discord.gg/web-buddy",
          "line": 440,
          "column": 3,
          "context": "code",
          "lineText": "- **Discord**: [discord.gg/web-buddy](https://discord.gg/web-buddy)"
        },
        {
          "variation": "**Documentation**: [docs.web-buddy.dev](https://docs.web-buddy",
          "line": 441,
          "column": 3,
          "context": "code",
          "lineText": "- **Documentation**: [docs.web-buddy.dev](https://docs.web-buddy.dev)"
        },
        {
          "variation": "**Examples**: [github.com/web-buddy/examples](https://github.com/web-buddy",
          "line": 442,
          "column": 3,
          "context": "code",
          "lineText": "- **Examples**: [github.com/web-buddy/examples](https://github.com/web-buddy/examples)"
        },
        {
          "variation": "**Documentation Issues**: [docs.web-buddy.dev/issues](https://docs.web-buddy",
          "line": 455,
          "column": 3,
          "context": "code",
          "lineText": "- **Documentation Issues**: [docs.web-buddy.dev/issues](https://docs.web-buddy.dev/issues)"
        },
        {
          "variation": "**SDK Problems**: [github.com/web-buddy/client-ts/issues](https://github.com/web-buddy",
          "line": 456,
          "column": 3,
          "context": "code",
          "lineText": "- **SDK Problems**: [github.com/web-buddy/client-ts/issues](https://github.com/web-buddy/client-ts/issues)"
        },
        {
          "variation": "**General Questions**: [Discord Community](https://discord.gg/web-buddy",
          "line": 457,
          "column": 3,
          "context": "code",
          "lineText": "- **General Questions**: [Discord Community](https://discord.gg/web-buddy)"
        },
        {
          "variation": "**Feature Requests**: [github.com/web-buddy/framework/discussions](https://github.com/web-buddy",
          "line": 458,
          "column": 3,
          "context": "code",
          "lineText": "- **Feature Requests**: [github.com/web-buddy/framework/discussions](https://github.com/web-buddy/framework/discussions)"
        },
        {
          "variation": "*\"Web-Buddy",
          "line": 464,
          "column": 3,
          "context": "code",
          "lineText": "> *\"Web-Buddy reduced our testing automation maintenance from 40 hours/week to 2 hours/week. The training system adapts to UI changes automatically!\"*"
        },
        {
          "variation": "*\"The event-driven architecture made it incredibly easy to integrate Web-Buddy",
          "line": 470,
          "column": 3,
          "context": "code",
          "lineText": "> *\"The event-driven architecture made it incredibly easy to integrate Web-Buddy into our existing CI/CD pipeline.\"*"
        },
        {
          "variation": "**Ready to build amazing automation?** Start with the [Google Images tutorial](./GOOGLE_IMAGES_GETTING_STARTED.md) to see how Web-Buddy",
          "line": 475,
          "column": 1,
          "context": "code",
          "lineText": "**Ready to build amazing automation?** Start with the [Google Images tutorial](./GOOGLE_IMAGES_GETTING_STARTED.md) to see how Web-Buddy adapts to any website! 🚀"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/web-buddy/index.org",
      "occurrenceCount": 36,
      "references": [
        {
          "variation": "#+TITLE: Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: Web-Buddy - Generic Web Automation Framework"
        },
        {
          "variation": "#+AUTHOR: Web-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "#+AUTHOR: Web-Buddy Team"
        },
        {
          "variation": "#+PROJECT: web-buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "#+PROJECT: web-buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 10,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy is a generic web automation framework built on TypeScript-EDA that transforms single-purpose browser automation tools into extensible, maintainable platforms. It provides a three-layer architecture that separates generic infrastructure from domain-specific logic."
        },
        {
          "variation": "** The Web-Buddy",
          "line": 12,
          "column": 1,
          "context": "code",
          "lineText": "** The Web-Buddy Philosophy"
        },
        {
          "variation": "Web-Buddy",
          "line": 14,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy believes that web automation should be:"
        },
        {
          "variation": "GoogleBuddy",
          "line": 25,
          "column": 11,
          "context": "code",
          "lineText": "│         GoogleBuddyClient.search()             │   chatGPTClient.selectProject()"
        },
        {
          "variation": "WebBuddy",
          "line": 31,
          "column": 11,
          "context": "code",
          "lineText": "│         WebBuddyClient.sendMessage()           │   WebBuddyServer, WebBuddyExtension"
        },
        {
          "variation": "WebBuddy",
          "line": 31,
          "column": 54,
          "context": "code",
          "lineText": "│         WebBuddyClient.sendMessage()           │   WebBuddyServer, WebBuddyExtension"
        },
        {
          "variation": "WebBuddy",
          "line": 31,
          "column": 70,
          "context": "code",
          "lineText": "│         WebBuddyClient.sendMessage()           │   WebBuddyServer, WebBuddyExtension"
        },
        {
          "variation": "*Web-Buddy",
          "line": 37,
          "column": 4,
          "context": "code",
          "lineText": "1. *Web-Buddy Core*: Generic messaging infrastructure, correlation IDs, event routing"
        },
        {
          "variation": "@web-buddy",
          "line": 66,
          "column": 20,
          "context": "code",
          "lineText": "- Core framework: ~@web-buddy/core~"
        },
        {
          "variation": "@web-buddy",
          "line": 67,
          "column": 16,
          "context": "code",
          "lineText": "- Client SDK: ~@web-buddy/client~"
        },
        {
          "variation": "@web-buddy",
          "line": 68,
          "column": 25,
          "context": "code",
          "lineText": "- Extension framework: ~@web-buddy/extension-framework~"
        },
        {
          "variation": "@web-buddy",
          "line": 69,
          "column": 23,
          "context": "code",
          "lineText": "- Testing utilities: ~@web-buddy/testing~"
        },
        {
          "variation": "WebBuddy",
          "line": 76,
          "column": 16,
          "context": "code",
          "lineText": "import { createWebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 76,
          "column": 39,
          "context": "string",
          "lineText": "import { createWebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "WebBuddy",
          "line": 78,
          "column": 25,
          "context": "code",
          "lineText": "const webClient = createWebBuddyClient({"
        },
        {
          "variation": "GoogleBuddy",
          "line": 94,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from '@google-buddy/client';"
        },
        {
          "variation": "google-buddy",
          "line": 94,
          "column": 37,
          "context": "string",
          "lineText": "import { GoogleBuddyClient } from '@google-buddy/client';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 97,
          "column": 26,
          "context": "code",
          "lineText": "const googleClient = new GoogleBuddyClient(webClient);"
        },
        {
          "variation": "GoogleBuddy",
          "line": 106,
          "column": 26,
          "context": "code",
          "lineText": "const googleClient = new GoogleBuddyClient(webClient);"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 107,
          "column": 27,
          "context": "code",
          "lineText": "const chatGPTClient = new ChatGPTBuddyClient(webClient);"
        },
        {
          "variation": "WebBuddy",
          "line": 149,
          "column": 1,
          "context": "code",
          "lineText": "WebBuddyClient.sendMessage()"
        },
        {
          "variation": "WebBuddy",
          "line": 207,
          "column": 25,
          "context": "code",
          "lineText": "async handle(message: WebBuddyMessage): Promise<any> {"
        },
        {
          "variation": "Buddy",
          "line": 213,
          "column": 18,
          "context": "code",
          "lineText": "export class SiteBuddyClient {"
        },
        {
          "variation": "webBuddy",
          "line": 214,
          "column": 23,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 214,
          "column": 39,
          "context": "code",
          "lineText": "constructor(private webBuddyClient: WebBuddyClient) {}"
        },
        {
          "variation": ".webBuddy",
          "line": 217,
          "column": 16,
          "context": "code",
          "lineText": "return this.webBuddyClient.sendMessage({"
        },
        {
          "variation": "Web-Buddy",
          "line": 265,
          "column": 36,
          "context": "code",
          "lineText": "Ready to build web automation with Web-Buddy? Check out our [[file:getting-started.org][Getting Started Guide]] to create your first multi-site automation, or read the [[file:story.org][Web-Buddy Story]] to understand the evolution from single-purpose tools to generic frameworks."
        },
        {
          "variation": "Web-Buddy",
          "line": 265,
          "column": 187,
          "context": "code",
          "lineText": "Ready to build web automation with Web-Buddy? Check out our [[file:getting-started.org][Getting Started Guide]] to create your first multi-site automation, or read the [[file:story.org][Web-Buddy Story]] to understand the evolution from single-purpose tools to generic frameworks."
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 272,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/web-buddy][📁 GitHub Repository]]: Source code and issues"
        },
        {
          "variation": "//www.npmjs.com/package/@web-buddy",
          "line": 273,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://www.npmjs.com/package/@web-buddy/core][📦 NPM Package]]: Installation and versions"
        },
        {
          "variation": "Web-Buddy",
          "line": 277,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy is actively developed and used in production. The framework has evolved from the successful ChatGPT-Buddy project and incorporates lessons learned from real-world usage."
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 277,
          "column": 103,
          "context": "code",
          "lineText": "Web-Buddy is actively developed and used in production. The framework has evolved from the successful ChatGPT-Buddy project and incorporates lessons learned from real-world usage."
        },
        {
          "variation": "*Domain Implementations*: Google-Buddy, ChatGPT-Buddy",
          "line": 281,
          "column": 3,
          "context": "code",
          "lineText": "- *Domain Implementations*: Google-Buddy, ChatGPT-Buddy"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/plugin-architecture-design.org",
      "occurrenceCount": 35,
      "references": [
        {
          "variation": "#+TITLE: Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: Web-Buddy Plugin Architecture Design"
        },
        {
          "variation": "#+AUTHOR: Web-Buddy",
          "line": 2,
          "column": 1,
          "context": "code",
          "lineText": "#+AUTHOR: Web-Buddy Team"
        },
        {
          "variation": "Web-Buddy",
          "line": 8,
          "column": 5,
          "context": "code",
          "lineText": "The Web-Buddy Plugin Architecture enables domain-specific automation extensions that leverage the contract discovery system for zero-fragility automation. This architecture allows specialized plugins like ChatGPT-buddy, GitHub-buddy, and others to provide tailored automation experiences while maintaining compatibility with the core Web-Buddy framework."
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 8,
          "column": 206,
          "context": "code",
          "lineText": "The Web-Buddy Plugin Architecture enables domain-specific automation extensions that leverage the contract discovery system for zero-fragility automation. This architecture allows specialized plugins like ChatGPT-buddy, GitHub-buddy, and others to provide tailored automation experiences while maintaining compatibility with the core Web-Buddy framework."
        },
        {
          "variation": "-buddy",
          "line": 8,
          "column": 227,
          "context": "code",
          "lineText": "The Web-Buddy Plugin Architecture enables domain-specific automation extensions that leverage the contract discovery system for zero-fragility automation. This architecture allows specialized plugins like ChatGPT-buddy, GitHub-buddy, and others to provide tailored automation experiences while maintaining compatibility with the core Web-Buddy framework."
        },
        {
          "variation": "Web-Buddy",
          "line": 8,
          "column": 335,
          "context": "code",
          "lineText": "The Web-Buddy Plugin Architecture enables domain-specific automation extensions that leverage the contract discovery system for zero-fragility automation. This architecture allows specialized plugins like ChatGPT-buddy, GitHub-buddy, and others to provide tailored automation experiences while maintaining compatibility with the core Web-Buddy framework."
        },
        {
          "variation": "Web-Buddy",
          "line": 18,
          "column": 16,
          "context": "code",
          "lineText": "- Leverage the Web-Buddy contract discovery system"
        },
        {
          "variation": "Web-Buddy",
          "line": 28,
          "column": 40,
          "context": "code",
          "lineText": "- Backward compatibility with existing Web-Buddy automation patterns"
        },
        {
          "variation": "WebBuddy",
          "line": 39,
          "column": 20,
          "context": "code",
          "lineText": "register(plugin: WebBuddyPlugin): Promise<void>;"
        },
        {
          "variation": "WebBuddy",
          "line": 41,
          "column": 32,
          "context": "code",
          "lineText": "getPlugin(pluginId: string): WebBuddyPlugin | null;"
        },
        {
          "variation": "WebBuddy",
          "line": 44,
          "column": 30,
          "context": "code",
          "lineText": "discoverPlugins(): Promise<WebBuddyPlugin[]>;"
        },
        {
          "variation": "WebBuddy",
          "line": 45,
          "column": 39,
          "context": "code",
          "lineText": "getPluginsByDomain(domain: string): WebBuddyPlugin[];"
        },
        {
          "variation": "WebBuddy",
          "line": 56,
          "column": 11,
          "context": "code",
          "lineText": "interface WebBuddyPlugin {"
        },
        {
          "variation": "WebBuddy",
          "line": 66,
          "column": 24,
          "context": "code",
          "lineText": "contractDefinitions: WebBuddyContract[];"
        },
        {
          "variation": "WebBuddy",
          "line": 75,
          "column": 19,
          "context": "code",
          "lineText": "getContracts(): WebBuddyContract[];"
        },
        {
          "variation": "** 1. ChatGPT-Buddy",
          "line": 112,
          "column": 1,
          "context": "code",
          "lineText": "** 1. ChatGPT-Buddy Plugin"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 115,
          "column": 7,
          "context": "code",
          "lineText": "class ChatGPTBuddyPlugin implements WebBuddyPlugin {"
        },
        {
          "variation": "WebBuddy",
          "line": 115,
          "column": 37,
          "context": "code",
          "lineText": "class ChatGPTBuddyPlugin implements WebBuddyPlugin {"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 116,
          "column": 9,
          "context": "string",
          "lineText": "id = 'chatgpt-buddy';"
        },
        {
          "variation": "Buddy",
          "line": 117,
          "column": 30,
          "context": "string",
          "lineText": "name = 'ChatGPT Automation Buddy';"
        },
        {
          "variation": "** 2. GitHub-Buddy",
          "line": 180,
          "column": 1,
          "context": "code",
          "lineText": "** 2. GitHub-Buddy Plugin"
        },
        {
          "variation": "Buddy",
          "line": 183,
          "column": 13,
          "context": "code",
          "lineText": "class GitHubBuddyPlugin implements WebBuddyPlugin {"
        },
        {
          "variation": "WebBuddy",
          "line": 183,
          "column": 36,
          "context": "code",
          "lineText": "class GitHubBuddyPlugin implements WebBuddyPlugin {"
        },
        {
          "variation": "-buddy",
          "line": 184,
          "column": 15,
          "context": "string",
          "lineText": "id = 'github-buddy';"
        },
        {
          "variation": "Buddy",
          "line": 185,
          "column": 29,
          "context": "string",
          "lineText": "name = 'GitHub Automation Buddy';"
        },
        {
          "variation": "WebBuddy",
          "line": 234,
          "column": 41,
          "context": "code",
          "lineText": "discoverFromURL(url: string): Promise<WebBuddyPlugin[]>;"
        },
        {
          "variation": "WebBuddy",
          "line": 259,
          "column": 55,
          "context": "code",
          "lineText": "async loadPlugin(manifest: PluginManifest): Promise<WebBuddyPlugin> {"
        },
        {
          "variation": "// Check Web-Buddy",
          "line": 279,
          "column": 5,
          "context": "code",
          "lineText": "// Check Web-Buddy version compatibility"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 471,
          "column": 13,
          "context": "code",
          "lineText": "1. Refactor ChatGPT-buddy as a plugin"
        },
        {
          "variation": "-buddy",
          "line": 472,
          "column": 17,
          "context": "code",
          "lineText": "2. Create GitHub-buddy plugin"
        },
        {
          "variation": "Web-Buddy",
          "line": 483,
          "column": 28,
          "context": "code",
          "lineText": "1. Integrate with existing Web-Buddy features"
        },
        {
          "variation": "Web-Buddy",
          "line": 503,
          "column": 30,
          "context": "code",
          "lineText": "- Reduced complexity in core Web-Buddy framework"
        },
        {
          "variation": "Web-Buddy",
          "line": 512,
          "column": 5,
          "context": "code",
          "lineText": "The Web-Buddy Plugin Architecture enables a powerful ecosystem of domain-specific automation extensions while maintaining compatibility with the core contract discovery system. This architecture supports specialized plugins like ChatGPT-buddy and GitHub-buddy, providing tailored automation experiences while preserving the zero-fragility benefits of contract-based automation."
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 512,
          "column": 230,
          "context": "code",
          "lineText": "The Web-Buddy Plugin Architecture enables a powerful ecosystem of domain-specific automation extensions while maintaining compatibility with the core contract discovery system. This architecture supports specialized plugins like ChatGPT-buddy and GitHub-buddy, providing tailored automation experiences while preserving the zero-fragility benefits of contract-based automation."
        },
        {
          "variation": "-buddy",
          "line": 512,
          "column": 254,
          "context": "code",
          "lineText": "The Web-Buddy Plugin Architecture enables a powerful ecosystem of domain-specific automation extensions while maintaining compatibility with the core contract discovery system. This architecture supports specialized plugins like ChatGPT-buddy and GitHub-buddy, providing tailored automation experiences while preserving the zero-fragility benefits of contract-based automation."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/ecosystem-landing.html",
      "occurrenceCount": 30,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 6,
          "column": 29,
          "context": "code",
          "lineText": "<title>TypeScript-EDA & Web-Buddy Ecosystem</title>"
        },
        {
          "variation": "Web-Buddy",
          "line": 238,
          "column": 34,
          "context": "code",
          "lineText": "<h1>TypeScript-EDA & Web-Buddy Ecosystem</h1>"
        },
        {
          "variation": "Web-Buddy",
          "line": 248,
          "column": 62,
          "context": "code",
          "lineText": "<p>Specialized automation tools built on Web-Buddy framework</p>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 251,
          "column": 62,
          "context": "code",
          "lineText": "<h4><span class=\"emoji\">🤖</span>ChatGPT-Buddy</h4>"
        },
        {
          "variation": "-Buddy",
          "line": 255,
          "column": 68,
          "context": "code",
          "lineText": "<h4><span class=\"emoji\">🐙</span>GitHub-Buddy</h4>"
        },
        {
          "variation": "-Buddy",
          "line": 259,
          "column": 67,
          "context": "code",
          "lineText": "<h4><span class=\"emoji\">📧</span>Gmail-Buddy</h4>"
        },
        {
          "variation": "Web-Buddy",
          "line": 270,
          "column": 63,
          "context": "code",
          "lineText": "<h4><span class=\"emoji\">🖥️</span>Web-Buddy Server</h4>"
        },
        {
          "variation": "Web-Buddy",
          "line": 274,
          "column": 62,
          "context": "code",
          "lineText": "<h4><span class=\"emoji\">🧩</span>Web-Buddy Extension</h4>"
        },
        {
          "variation": "@web-buddy",
          "line": 308,
          "column": 8,
          "context": "code",
          "lineText": "├─ @web-buddy/nodejs-server"
        },
        {
          "variation": "@web-buddy",
          "line": 309,
          "column": 8,
          "context": "code",
          "lineText": "├─ @web-buddy/browser-extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 311,
          "column": 9,
          "context": "code",
          "lineText": "├─ @chatgpt-buddy/server"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 312,
          "column": 9,
          "context": "code",
          "lineText": "├─ @chatgpt-buddy/extension"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 313,
          "column": 9,
          "context": "code",
          "lineText": "├─ @chatgpt-buddy/client"
        },
        {
          "variation": "-buddy",
          "line": 314,
          "column": 15,
          "context": "code",
          "lineText": "├─ @github-buddy/* (future)"
        },
        {
          "variation": "-buddy",
          "line": 315,
          "column": 14,
          "context": "code",
          "lineText": "└─ @gmail-buddy/* (future)"
        },
        {
          "variation": "Web-Buddy",
          "line": 353,
          "column": 35,
          "context": "code",
          "lineText": "<h3>🌐 Framework (Web-Buddy)</h3>"
        },
        {
          "variation": "/web-buddy",
          "line": 355,
          "column": 35,
          "context": "string",
          "lineText": "<li><a href=\"./web-buddy/index.html\">Overview</a></li>"
        },
        {
          "variation": "/web-buddy",
          "line": 356,
          "column": 35,
          "context": "string",
          "lineText": "<li><a href=\"./web-buddy/getting-started.html\">Getting Started</a></li>"
        },
        {
          "variation": "/web-buddy",
          "line": 357,
          "column": 35,
          "context": "string",
          "lineText": "<li><a href=\"./web-buddy/story.html\">Project Story</a></li>"
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 358,
          "column": 40,
          "context": "string",
          "lineText": "<li><a href=\"https://github.com/rydnr/web-buddy-nodejs-server\">Server Repository</a></li>"
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 359,
          "column": 40,
          "context": "string",
          "lineText": "<li><a href=\"https://github.com/rydnr/web-buddy-browser-extension\">Extension Repository</a></li>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 364,
          "column": 40,
          "context": "code",
          "lineText": "<h3>🤖 Implementation (ChatGPT-Buddy)</h3>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 366,
          "column": 36,
          "context": "string",
          "lineText": "<li><a href=\"./chatgpt-buddy/index.html\">Overview</a></li>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 367,
          "column": 36,
          "context": "string",
          "lineText": "<li><a href=\"./chatgpt-buddy/getting-started.html\">Getting Started</a></li>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 368,
          "column": 36,
          "context": "string",
          "lineText": "<li><a href=\"./chatgpt-buddy/story.html\">Project Story</a></li>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 369,
          "column": 36,
          "context": "string",
          "lineText": "<li><a href=\"./chatgpt-buddy/atdd-guide.html\">ATDD Guide</a></li>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 370,
          "column": 36,
          "context": "string",
          "lineText": "<li><a href=\"./chatgpt-buddy/research.html\">Research</a></li>"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 371,
          "column": 40,
          "context": "string",
          "lineText": "<li><a href=\"https://github.com/rydnr/chatgpt-buddy\">Repository</a></li>"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 382,
          "column": 40,
          "context": "string",
          "lineText": "<li><a href=\"https://github.com/rydnr/chatgpt-buddy/tree/main/specs\">Technical Specs</a></li>"
        },
        {
          "variation": "Web-Buddy",
          "line": 419,
          "column": 40,
          "context": "code",
          "lineText": "<p>© 2025 TypeScript-EDA & Web-Buddy Ecosystem | <a href=\"https://github.com/rydnr\" style=\"color: white;\">GitHub</a></p>"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/src/extension.ts",
      "occurrenceCount": 26,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": "WebBuddy",
          "line": 22,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyEvent, EventHandler, EventResponse, createSuccessResponse, createErrorResponse } from './events/base';"
        },
        {
          "variation": "WebBuddy",
          "line": 24,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyMessage } from './messages/base'; // Legacy support"
        },
        {
          "variation": "* Configuration for the Web-Buddy",
          "line": 77,
          "column": 2,
          "context": "code",
          "lineText": "* Configuration for the Web-Buddy extension"
        },
        {
          "variation": "WebBuddy",
          "line": 79,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyExtensionConfig {"
        },
        {
          "variation": "* Generic Web-Buddy",
          "line": 88,
          "column": 2,
          "context": "code",
          "lineText": "* Generic Web-Buddy extension that handles browser-side automation"
        },
        {
          "variation": "WebBuddy",
          "line": 92,
          "column": 14,
          "context": "code",
          "lineText": "export class WebBuddyExtension {"
        },
        {
          "variation": "WebBuddy",
          "line": 102,
          "column": 31,
          "context": "code",
          "lineText": "constructor(private config: WebBuddyExtensionConfig) {"
        },
        {
          "variation": "* Connects to the Web-Buddy",
          "line": 148,
          "column": 4,
          "context": "code",
          "lineText": "* Connects to the Web-Buddy server"
        },
        {
          "variation": "Web-Buddy",
          "line": 157,
          "column": 24,
          "context": "string",
          "lineText": "console.log('Web-Buddy extension connected to server');"
        },
        {
          "variation": "WebBuddy",
          "line": 170,
          "column": 46,
          "context": "code",
          "lineText": "await this.handleEvent(data as WebBuddyEvent);"
        },
        {
          "variation": "WebBuddy",
          "line": 173,
          "column": 48,
          "context": "code",
          "lineText": "await this.handleMessage(data as WebBuddyMessage);"
        },
        {
          "variation": "Web-Buddy",
          "line": 181,
          "column": 24,
          "context": "string",
          "lineText": "console.log('Web-Buddy extension disconnected from server');"
        },
        {
          "variation": "* Disconnects from the Web-Buddy",
          "line": 198,
          "column": 4,
          "context": "code",
          "lineText": "* Disconnects from the Web-Buddy server"
        },
        {
          "variation": "WebBuddy",
          "line": 213,
          "column": 36,
          "context": "code",
          "lineText": "private async handleEvent(event: WebBuddyEvent): Promise<void> {"
        },
        {
          "variation": "WebBuddy",
          "line": 248,
          "column": 18,
          "context": "code",
          "lineText": "const event: WebBuddyEvent = {"
        },
        {
          "variation": "WebBuddy",
          "line": 275,
          "column": 48,
          "context": "code",
          "lineText": "private async handleAutomationRequest(event: WebBuddyEvent): Promise<any> {"
        },
        {
          "variation": "WebBuddy",
          "line": 306,
          "column": 50,
          "context": "code",
          "lineText": "private async handleUserGuidanceRequest(event: WebBuddyEvent): Promise<any> {"
        },
        {
          "variation": "WebBuddy",
          "line": 515,
          "column": 36,
          "context": "code",
          "lineText": "private sendEventToServer(event: WebBuddyEvent): void {"
        },
        {
          "variation": "web-buddy",
          "line": 647,
          "column": 21,
          "context": "string",
          "lineText": "indicator.id = 'web-buddy-recording-indicator';"
        },
        {
          "variation": "WebBuddy",
          "line": 1171,
          "column": 22,
          "context": "code",
          "lineText": "private extension: WebBuddyExtension;"
        },
        {
          "variation": "WebBuddy",
          "line": 1173,
          "column": 26,
          "context": "code",
          "lineText": "constructor(extension: WebBuddyExtension) {"
        },
        {
          "variation": "// Convert content script message to WebBuddy",
          "line": 1209,
          "column": 5,
          "context": "code",
          "lineText": "// Convert content script message to WebBuddyEvent format"
        },
        {
          "variation": "webBuddy",
          "line": 1210,
          "column": 11,
          "context": "code",
          "lineText": "const webBuddyEvent: WebBuddyEvent = {"
        },
        {
          "variation": "WebBuddy",
          "line": 1210,
          "column": 26,
          "context": "code",
          "lineText": "const webBuddyEvent: WebBuddyEvent = {"
        },
        {
          "variation": "webBuddy",
          "line": 1226,
          "column": 33,
          "context": "code",
          "lineText": "return await handler.handle(webBuddyEvent);"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/index.html",
      "occurrenceCount": 26,
      "references": [
        {
          "variation": "ChatGPT-Buddy",
          "line": 2,
          "column": 9,
          "context": "string",
          "lineText": "title: \"ChatGPT-Buddy - Specialized AI Automation\""
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 4,
          "column": 10,
          "context": "string",
          "lineText": "author: \"ChatGPT-Buddy Team\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 7,
          "column": 10,
          "context": "code",
          "lineText": "project: chatgpt-buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 11,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy is a specialized implementation of the Web-Buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 11,
          "column": 57,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy is a specialized implementation of the Web-Buddy"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 16,
          "column": 13,
          "context": "string",
          "lineText": "<h2 id=\"the-chatgpt-buddy-mission\">The ChatGPT-Buddy Mission</h2>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 16,
          "column": 40,
          "context": "code",
          "lineText": "<h2 id=\"the-chatgpt-buddy-mission\">The ChatGPT-Buddy Mission</h2>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 17,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy transforms how developers and users interact with"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 59,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy represents the culmination of architectural"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 65,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy v1    ChatGPT-Buddy v2     Web-Buddy Framework    ChatGPT-Buddy v3"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 65,
          "column": 21,
          "context": "code",
          "lineText": "ChatGPT-Buddy v1    ChatGPT-Buddy v2     Web-Buddy Framework    ChatGPT-Buddy v3"
        },
        {
          "variation": "Web-Buddy",
          "line": 65,
          "column": 42,
          "context": "code",
          "lineText": "ChatGPT-Buddy v1    ChatGPT-Buddy v2     Web-Buddy Framework    ChatGPT-Buddy v3"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 65,
          "column": 65,
          "context": "code",
          "lineText": "ChatGPT-Buddy v1    ChatGPT-Buddy v2     Web-Buddy Framework    ChatGPT-Buddy v3"
        },
        {
          "variation": "Web-Buddy",
          "line": 76,
          "column": 13,
          "context": "code",
          "lineText": "<li><strong>Web-Buddy Framework</strong>: Generic web automation"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 85,
          "column": 40,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "#39;@chatgpt-buddy",
          "line": 85,
          "column": 67,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>import { ChatGPTBuddyClient } from &#39;@chatgpt-buddy/client&#39;;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 87,
          "column": 20,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 139,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy supports multiple communication channels:</p>"
        },
        {
          "variation": ".buddy",
          "line": 152,
          "column": 21,
          "context": "code",
          "lineText": "--dest=org.chatgpt.buddy.automation \\"
        },
        {
          "variation": "/buddy",
          "line": 153,
          "column": 15,
          "context": "code",
          "lineText": "/org/chatgpt/buddy/automation \\"
        },
        {
          "variation": ".buddy",
          "line": 154,
          "column": 14,
          "context": "code",
          "lineText": "org.chatgpt.buddy.automation.AutomationEvent \\"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 273,
          "column": 32,
          "context": "code",
          "lineText": "<li><a href=\"story.org\">📚 The ChatGPT-Buddy Story</a>: Understand the"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 286,
          "column": 20,
          "context": "string",
          "lineText": "<li><a href=\"https://github.com/rydnr/chatgpt-buddy\">📁 GitHub"
        },
        {
          "variation": "//www.npmjs.com/package/@chatgpt-buddy",
          "line": 288,
          "column": 20,
          "context": "string",
          "lineText": "<li><a href=\"https://www.npmjs.com/package/@chatgpt-buddy/client\">📦 NPM"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 294,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy is production-ready and actively maintained:</p>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 320,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy represents the state-of-the-art in AI automation tools,"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/src/index.ts",
      "occurrenceCount": 25,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": "* Web-Buddy",
          "line": 21,
          "column": 2,
          "context": "code",
          "lineText": "* Web-Buddy Core - Generic Web Automation Framework"
        },
        {
          "variation": "WebBuddy",
          "line": 28,
          "column": 10,
          "context": "code",
          "lineText": "export { WebBuddyClient, type WebBuddyClientConfig } from './client';"
        },
        {
          "variation": "WebBuddy",
          "line": 28,
          "column": 31,
          "context": "code",
          "lineText": "export { WebBuddyClient, type WebBuddyClientConfig } from './client';"
        },
        {
          "variation": "// Note: Server infrastructure moved to @web-buddy",
          "line": 30,
          "column": 1,
          "context": "code",
          "lineText": "// Note: Server infrastructure moved to @web-buddy/server package"
        },
        {
          "variation": "WebBuddy",
          "line": 33,
          "column": 10,
          "context": "code",
          "lineText": "export { WebBuddyExtension, type WebBuddyExtensionConfig, ContentScriptIntegration } from './extension';"
        },
        {
          "variation": "WebBuddy",
          "line": 33,
          "column": 34,
          "context": "code",
          "lineText": "export { WebBuddyExtension, type WebBuddyExtensionConfig, ContentScriptIntegration } from './extension';"
        },
        {
          "variation": "WebBuddy",
          "line": 36,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from './client';"
        },
        {
          "variation": "WebBuddy",
          "line": 37,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyExtension } from './extension';"
        },
        {
          "variation": "WebBuddy",
          "line": 41,
          "column": 8,
          "context": "code",
          "lineText": "type WebBuddyEvent,"
        },
        {
          "variation": "WebBuddy",
          "line": 66,
          "column": 8,
          "context": "code",
          "lineText": "type WebBuddyMessage,"
        },
        {
          "variation": "* Factory function to create a configured WebBuddy",
          "line": 91,
          "column": 2,
          "context": "code",
          "lineText": "* Factory function to create a configured WebBuddyClient"
        },
        {
          "variation": "* @returns Configured WebBuddy",
          "line": 95,
          "column": 2,
          "context": "code",
          "lineText": "* @returns Configured WebBuddyClient instance with learning capabilities"
        },
        {
          "variation": "WebBuddy",
          "line": 97,
          "column": 23,
          "context": "code",
          "lineText": "export function createWebBuddyClient(config: {"
        },
        {
          "variation": "WebBuddy",
          "line": 102,
          "column": 5,
          "context": "code",
          "lineText": "}): WebBuddyClient {"
        },
        {
          "variation": "WebBuddy",
          "line": 103,
          "column": 14,
          "context": "code",
          "lineText": "return new WebBuddyClient({"
        },
        {
          "variation": "WebBuddy",
          "line": 119,
          "column": 5,
          "context": "code",
          "lineText": "}): WebBuddyClient {"
        },
        {
          "variation": "WebBuddy",
          "line": 120,
          "column": 16,
          "context": "code",
          "lineText": "return createWebBuddyClient({"
        },
        {
          "variation": "* Note: Server creation moved to @web-buddy",
          "line": 127,
          "column": 2,
          "context": "code",
          "lineText": "* Note: Server creation moved to @web-buddy/server package"
        },
        {
          "variation": "* Use createWebBuddyServer from '@web-buddy",
          "line": 128,
          "column": 2,
          "context": "code",
          "lineText": "* Use createWebBuddyServer from '@web-buddy/server' instead"
        },
        {
          "variation": "* Factory function to create a configured WebBuddy",
          "line": 132,
          "column": 2,
          "context": "code",
          "lineText": "* Factory function to create a configured WebBuddyExtension"
        },
        {
          "variation": "* @returns Configured WebBuddy",
          "line": 136,
          "column": 2,
          "context": "code",
          "lineText": "* @returns Configured WebBuddyExtension instance"
        },
        {
          "variation": "WebBuddy",
          "line": 138,
          "column": 23,
          "context": "code",
          "lineText": "export function createWebBuddyExtension(config: {"
        },
        {
          "variation": "WebBuddy",
          "line": 141,
          "column": 5,
          "context": "code",
          "lineText": "}): WebBuddyExtension {"
        },
        {
          "variation": "WebBuddy",
          "line": 142,
          "column": 14,
          "context": "code",
          "lineText": "return new WebBuddyExtension({"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/index.org",
      "occurrenceCount": 25,
      "references": [
        {
          "variation": "#+TITLE: ChatGPT-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: ChatGPT-Buddy - Specialized AI Automation"
        },
        {
          "variation": "#+AUTHOR: ChatGPT-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "#+AUTHOR: ChatGPT-Buddy Team"
        },
        {
          "variation": "#+PROJECT: chatgpt-buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "#+PROJECT: chatgpt-buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 10,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy is a specialized implementation of the Web-Buddy framework, designed specifically for automating ChatGPT interactions. Built on event-driven architecture principles, it showcases advanced patterns like interactive training, pattern management, and cross-platform communication."
        },
        {
          "variation": "Web-Buddy",
          "line": 10,
          "column": 54,
          "context": "code",
          "lineText": "ChatGPT-Buddy is a specialized implementation of the Web-Buddy framework, designed specifically for automating ChatGPT interactions. Built on event-driven architecture principles, it showcases advanced patterns like interactive training, pattern management, and cross-platform communication."
        },
        {
          "variation": "** The ChatGPT-Buddy",
          "line": 12,
          "column": 1,
          "context": "code",
          "lineText": "** The ChatGPT-Buddy Mission"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 14,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy transforms how developers and users interact with ChatGPT by providing:"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 48,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy represents the culmination of architectural evolution:"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 55,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy v1    ChatGPT-Buddy v2     Web-Buddy Framework    ChatGPT-Buddy v3"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 55,
          "column": 21,
          "context": "code",
          "lineText": "ChatGPT-Buddy v1    ChatGPT-Buddy v2     Web-Buddy Framework    ChatGPT-Buddy v3"
        },
        {
          "variation": "Web-Buddy",
          "line": 55,
          "column": 42,
          "context": "code",
          "lineText": "ChatGPT-Buddy v1    ChatGPT-Buddy v2     Web-Buddy Framework    ChatGPT-Buddy v3"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 55,
          "column": 65,
          "context": "code",
          "lineText": "ChatGPT-Buddy v1    ChatGPT-Buddy v2     Web-Buddy Framework    ChatGPT-Buddy v3"
        },
        {
          "variation": "*Web-Buddy",
          "line": 66,
          "column": 4,
          "context": "code",
          "lineText": "2. *Web-Buddy Framework*: Generic web automation infrastructure"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 75,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 75,
          "column": 38,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from '@chatgpt-buddy/client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 77,
          "column": 20,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient({"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 138,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy supports multiple communication channels:"
        },
        {
          "variation": ".buddy",
          "line": 150,
          "column": 21,
          "context": "code",
          "lineText": "--dest=org.chatgpt.buddy.automation \\"
        },
        {
          "variation": "/buddy",
          "line": 151,
          "column": 15,
          "context": "code",
          "lineText": "/org/chatgpt/buddy/automation \\"
        },
        {
          "variation": ".buddy",
          "line": 152,
          "column": 14,
          "context": "code",
          "lineText": "org.chatgpt.buddy.automation.AutomationEvent \\"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 277,
          "column": 28,
          "context": "code",
          "lineText": "- [[file:story.org][📚 The ChatGPT-Buddy Story]]: Understand the architectural journey"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 285,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy][📁 GitHub Repository]]: Source code, issues, and discussions"
        },
        {
          "variation": "//www.npmjs.com/package/@chatgpt-buddy",
          "line": 286,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://www.npmjs.com/package/@chatgpt-buddy/client][📦 NPM Packages]]: Installation and API documentation"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 291,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy is production-ready and actively maintained:"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 312,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy represents the state-of-the-art in AI automation tools, combining proven architectural patterns with innovative features for the modern AI-powered workflow."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/index.js",
      "occurrenceCount": 24,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 3,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": ".WebBuddy",
          "line": 21,
          "column": 533,
          "context": "code",
          "lineText": "exports.VERSION = exports.AutomationManager = exports.createAutomationStorage = exports.IndexedDBAutomationStorage = exports.BaseMessage = exports.AutomationEventFactory = exports.UserGuidanceProvidedEvent = exports.UserGuidanceRequestedEvent = exports.AutomationFailedEvent = exports.AutomationSucceededEvent = exports.AutomationImplementedEvent = exports.AutomationRequestedEvent = exports.EventPriority = exports.createErrorResponse = exports.createSuccessResponse = exports.BaseEvent = exports.ContentScriptIntegration = exports.WebBuddyExtension = exports.WebBuddyClient = void 0;"
        },
        {
          "variation": ".WebBuddy",
          "line": 21,
          "column": 561,
          "context": "code",
          "lineText": "exports.VERSION = exports.AutomationManager = exports.createAutomationStorage = exports.IndexedDBAutomationStorage = exports.BaseMessage = exports.AutomationEventFactory = exports.UserGuidanceProvidedEvent = exports.UserGuidanceRequestedEvent = exports.AutomationFailedEvent = exports.AutomationSucceededEvent = exports.AutomationImplementedEvent = exports.AutomationRequestedEvent = exports.EventPriority = exports.createErrorResponse = exports.createSuccessResponse = exports.BaseEvent = exports.ContentScriptIntegration = exports.WebBuddyExtension = exports.WebBuddyClient = void 0;"
        },
        {
          "variation": "WebBuddy",
          "line": 22,
          "column": 15,
          "context": "code",
          "lineText": "exports.createWebBuddyClient = createWebBuddyClient;"
        },
        {
          "variation": "WebBuddy",
          "line": 22,
          "column": 38,
          "context": "code",
          "lineText": "exports.createWebBuddyClient = createWebBuddyClient;"
        },
        {
          "variation": "WebBuddy",
          "line": 24,
          "column": 15,
          "context": "code",
          "lineText": "exports.createWebBuddyExtension = createWebBuddyExtension;"
        },
        {
          "variation": "WebBuddy",
          "line": 24,
          "column": 41,
          "context": "code",
          "lineText": "exports.createWebBuddyExtension = createWebBuddyExtension;"
        },
        {
          "variation": "* Web-Buddy",
          "line": 26,
          "column": 2,
          "context": "code",
          "lineText": "* Web-Buddy Core - Generic Web Automation Framework"
        },
        {
          "variation": "WebBuddy",
          "line": 33,
          "column": 33,
          "context": "string",
          "lineText": "Object.defineProperty(exports, \"WebBuddyClient\", { enumerable: true, get: function () { return client_1.WebBuddyClient; } });"
        },
        {
          "variation": ".WebBuddy",
          "line": 33,
          "column": 104,
          "context": "code",
          "lineText": "Object.defineProperty(exports, \"WebBuddyClient\", { enumerable: true, get: function () { return client_1.WebBuddyClient; } });"
        },
        {
          "variation": "// Note: Server infrastructure moved to @web-buddy",
          "line": 34,
          "column": 1,
          "context": "code",
          "lineText": "// Note: Server infrastructure moved to @web-buddy/server package"
        },
        {
          "variation": "WebBuddy",
          "line": 37,
          "column": 33,
          "context": "string",
          "lineText": "Object.defineProperty(exports, \"WebBuddyExtension\", { enumerable: true, get: function () { return extension_1.WebBuddyExtension; } });"
        },
        {
          "variation": ".WebBuddy",
          "line": 37,
          "column": 110,
          "context": "code",
          "lineText": "Object.defineProperty(exports, \"WebBuddyExtension\", { enumerable: true, get: function () { return extension_1.WebBuddyExtension; } });"
        },
        {
          "variation": "* Factory function to create a configured WebBuddy",
          "line": 69,
          "column": 2,
          "context": "code",
          "lineText": "* Factory function to create a configured WebBuddyClient"
        },
        {
          "variation": "* @returns Configured WebBuddy",
          "line": 73,
          "column": 2,
          "context": "code",
          "lineText": "* @returns Configured WebBuddyClient instance with learning capabilities"
        },
        {
          "variation": "WebBuddy",
          "line": 75,
          "column": 16,
          "context": "code",
          "lineText": "function createWebBuddyClient(config) {"
        },
        {
          "variation": ".WebBuddy",
          "line": 76,
          "column": 24,
          "context": "code",
          "lineText": "return new client_2.WebBuddyClient({"
        },
        {
          "variation": "WebBuddy",
          "line": 88,
          "column": 18,
          "context": "code",
          "lineText": "return createWebBuddyClient({"
        },
        {
          "variation": "* Note: Server creation moved to @web-buddy",
          "line": 94,
          "column": 2,
          "context": "code",
          "lineText": "* Note: Server creation moved to @web-buddy/server package"
        },
        {
          "variation": "* Use createWebBuddyServer from '@web-buddy",
          "line": 95,
          "column": 2,
          "context": "code",
          "lineText": "* Use createWebBuddyServer from '@web-buddy/server' instead"
        },
        {
          "variation": "* Factory function to create a configured WebBuddy",
          "line": 98,
          "column": 2,
          "context": "code",
          "lineText": "* Factory function to create a configured WebBuddyExtension"
        },
        {
          "variation": "* @returns Configured WebBuddy",
          "line": 102,
          "column": 2,
          "context": "code",
          "lineText": "* @returns Configured WebBuddyExtension instance"
        },
        {
          "variation": "WebBuddy",
          "line": 104,
          "column": 16,
          "context": "code",
          "lineText": "function createWebBuddyExtension(config) {"
        },
        {
          "variation": ".WebBuddy",
          "line": 105,
          "column": 27,
          "context": "code",
          "lineText": "return new extension_2.WebBuddyExtension({"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/contract-protocol-research.html",
      "occurrenceCount": 23,
      "references": [
        {
          "variation": "web-buddy",
          "line": 72,
          "column": 29,
          "context": "code",
          "lineText": "<pre class=\"html\"><code>&lt;web-buddy-container&gt;"
        },
        {
          "variation": "/web-buddy",
          "line": 82,
          "column": 5,
          "context": "code",
          "lineText": "&lt;/web-buddy-container&gt;"
        },
        {
          "variation": "WebBuddy",
          "line": 128,
          "column": 41,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>interface WebBuddyIntrospectionQuery {"
        },
        {
          "variation": "webBuddy",
          "line": 144,
          "column": 28,
          "context": "code",
          "lineText": "const pageContract = await webBuddy.introspect();"
        },
        {
          "variation": "Web-Buddy",
          "line": 200,
          "column": 28,
          "context": "code",
          "lineText": "&quot;title&quot;: &quot;Web-Buddy Automation Contract&quot;,"
        },
        {
          "variation": "web-buddy",
          "line": 247,
          "column": 16,
          "context": "code",
          "lineText": "using: &quot;web-buddy-contract&quot;;"
        },
        {
          "variation": "WebBuddy",
          "line": 268,
          "column": 41,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>interface WebBuddyMessage {"
        },
        {
          "variation": "#39;WEB_BUDDY",
          "line": 269,
          "column": 10,
          "context": "code",
          "lineText": "type: &#39;WEB_BUDDY_CONTRACT_REQUEST&#39;;"
        },
        {
          "variation": "#39;WEB_BUDDY",
          "line": 282,
          "column": 28,
          "context": "code",
          "lineText": "if (event.data.type === &#39;WEB_BUDDY_CONTRACT_REQUEST&#39;) {"
        },
        {
          "variation": "#39;WEB_BUDDY",
          "line": 287,
          "column": 14,
          "context": "code",
          "lineText": "type: &#39;WEB_BUDDY_CONTRACT_RESPONSE&#39;,"
        },
        {
          "variation": "\"web-buddy",
          "line": 383,
          "column": 8,
          "context": "code",
          "lineText": "<h2 id=\"web-buddy-contract-protocol-specification\">Web-Buddy Contract"
        },
        {
          "variation": "Web-Buddy",
          "line": 383,
          "column": 52,
          "context": "code",
          "lineText": "<h2 id=\"web-buddy-contract-protocol-specification\">Web-Buddy Contract"
        },
        {
          "variation": "WebBuddy",
          "line": 386,
          "column": 41,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>interface WebBuddyContract {"
        },
        {
          "variation": "WebBuddy",
          "line": 427,
          "column": 37,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>class WebBuddyContractRegistry {"
        },
        {
          "variation": "WebBuddy",
          "line": 428,
          "column": 22,
          "context": "code",
          "lineText": "register(contract: WebBuddyContract): void {"
        },
        {
          "variation": "WebBuddy",
          "line": 434,
          "column": 46,
          "context": "code",
          "lineText": "async discover(domain: string): Promise&lt;WebBuddyContract[]&gt; {"
        },
        {
          "variation": "WebBuddy",
          "line": 439,
          "column": 35,
          "context": "code",
          "lineText": "private scoreContract(contract: WebBuddyContract): number {"
        },
        {
          "variation": "WebBuddy",
          "line": 452,
          "column": 28,
          "context": "code",
          "lineText": "validateSyntax(contract: WebBuddyContract): ValidationResult;"
        },
        {
          "variation": "WebBuddy",
          "line": 453,
          "column": 31,
          "context": "code",
          "lineText": "validateSelectors(contract: WebBuddyContract, page: Page): ValidationResult;"
        },
        {
          "variation": "WebBuddy",
          "line": 454,
          "column": 34,
          "context": "code",
          "lineText": "validateCapabilities(contract: WebBuddyContract, page: Page): ValidationResult;"
        },
        {
          "variation": "WebBuddy",
          "line": 455,
          "column": 35,
          "context": "code",
          "lineText": "validateCompatibility(contract: WebBuddyContract, browser: Browser): ValidationResult;"
        },
        {
          "variation": "WebBuddy",
          "line": 459,
          "column": 32,
          "context": "code",
          "lineText": "async testContract(contract: WebBuddyContract): Promise&lt;TestResult&gt; {"
        },
        {
          "variation": "Web-Buddy",
          "line": 547,
          "column": 17,
          "context": "code",
          "lineText": "<p>The proposed Web-Buddy contract protocol leverages these standards to"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/contract-protocol-research.org",
      "occurrenceCount": 22,
      "references": [
        {
          "variation": "web-buddy",
          "line": 63,
          "column": 2,
          "context": "code",
          "lineText": "<web-buddy-container>"
        },
        {
          "variation": "/web-buddy",
          "line": 73,
          "column": 2,
          "context": "code",
          "lineText": "</web-buddy-container>"
        },
        {
          "variation": "WebBuddy",
          "line": 119,
          "column": 11,
          "context": "code",
          "lineText": "interface WebBuddyIntrospectionQuery {"
        },
        {
          "variation": "webBuddy",
          "line": 135,
          "column": 28,
          "context": "code",
          "lineText": "const pageContract = await webBuddy.introspect();"
        },
        {
          "variation": "\"Web-Buddy",
          "line": 194,
          "column": 12,
          "context": "code",
          "lineText": "\"title\": \"Web-Buddy Automation Contract\","
        },
        {
          "variation": "\"web-buddy",
          "line": 246,
          "column": 10,
          "context": "code",
          "lineText": "using: \"web-buddy-contract\";"
        },
        {
          "variation": "WebBuddy",
          "line": 266,
          "column": 11,
          "context": "code",
          "lineText": "interface WebBuddyMessage {"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 267,
          "column": 10,
          "context": "string",
          "lineText": "type: 'WEB_BUDDY_CONTRACT_REQUEST';"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 280,
          "column": 28,
          "context": "string",
          "lineText": "if (event.data.type === 'WEB_BUDDY_CONTRACT_REQUEST') {"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 285,
          "column": 14,
          "context": "string",
          "lineText": "type: 'WEB_BUDDY_CONTRACT_RESPONSE',"
        },
        {
          "variation": "** Web-Buddy",
          "line": 393,
          "column": 1,
          "context": "code",
          "lineText": "** Web-Buddy Contract Protocol Specification"
        },
        {
          "variation": "WebBuddy",
          "line": 398,
          "column": 11,
          "context": "code",
          "lineText": "interface WebBuddyContract {"
        },
        {
          "variation": "WebBuddy",
          "line": 442,
          "column": 7,
          "context": "code",
          "lineText": "class WebBuddyContractRegistry {"
        },
        {
          "variation": "WebBuddy",
          "line": 443,
          "column": 22,
          "context": "code",
          "lineText": "register(contract: WebBuddyContract): void {"
        },
        {
          "variation": "WebBuddy",
          "line": 449,
          "column": 43,
          "context": "code",
          "lineText": "async discover(domain: string): Promise<WebBuddyContract[]> {"
        },
        {
          "variation": "WebBuddy",
          "line": 454,
          "column": 35,
          "context": "code",
          "lineText": "private scoreContract(contract: WebBuddyContract): number {"
        },
        {
          "variation": "WebBuddy",
          "line": 470,
          "column": 28,
          "context": "code",
          "lineText": "validateSyntax(contract: WebBuddyContract): ValidationResult;"
        },
        {
          "variation": "WebBuddy",
          "line": 471,
          "column": 31,
          "context": "code",
          "lineText": "validateSelectors(contract: WebBuddyContract, page: Page): ValidationResult;"
        },
        {
          "variation": "WebBuddy",
          "line": 472,
          "column": 34,
          "context": "code",
          "lineText": "validateCapabilities(contract: WebBuddyContract, page: Page): ValidationResult;"
        },
        {
          "variation": "WebBuddy",
          "line": 473,
          "column": 35,
          "context": "code",
          "lineText": "validateCompatibility(contract: WebBuddyContract, browser: Browser): ValidationResult;"
        },
        {
          "variation": "WebBuddy",
          "line": 477,
          "column": 32,
          "context": "code",
          "lineText": "async testContract(contract: WebBuddyContract): Promise<TestResult> {"
        },
        {
          "variation": "Web-Buddy",
          "line": 544,
          "column": 14,
          "context": "code",
          "lineText": "The proposed Web-Buddy contract protocol leverages these standards to create a system where web applications can declaratively announce their automation capabilities, enabling:"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/plugins/plugin-ui.ts",
      "occurrenceCount": 21,
      "references": [
        {
          "variation": "* @fileoverview Plugin UI Component System for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin UI Component System for Web-Buddy plugin architecture"
        },
        {
          "variation": "WebBuddy",
          "line": 13,
          "column": 3,
          "context": "code",
          "lineText": "WebBuddyTab"
        },
        {
          "variation": "WebBuddy",
          "line": 71,
          "column": 16,
          "context": "code",
          "lineText": "currentTab?: WebBuddyTab;"
        },
        {
          "variation": "web-buddy",
          "line": 481,
          "column": 14,
          "context": "string",
          "lineText": "{ id: 'web-buddy-panel-mount', type: 'panel' },"
        },
        {
          "variation": "web-buddy",
          "line": 482,
          "column": 14,
          "context": "string",
          "lineText": "{ id: 'web-buddy-toolbar-mount', type: 'toolbar' },"
        },
        {
          "variation": "web-buddy",
          "line": 483,
          "column": 14,
          "context": "string",
          "lineText": "{ id: 'web-buddy-sidebar-mount', type: 'sidebar' },"
        },
        {
          "variation": "web-buddy",
          "line": 484,
          "column": 14,
          "context": "string",
          "lineText": "{ id: 'web-buddy-overlay-mount', type: 'overlay' }"
        },
        {
          "variation": "web-buddy",
          "line": 492,
          "column": 30,
          "context": "string",
          "lineText": "element.className = `web-buddy-mount web-buddy-mount-${type}`;"
        },
        {
          "variation": "web-buddy",
          "line": 492,
          "column": 46,
          "context": "string",
          "lineText": "element.className = `web-buddy-mount web-buddy-mount-${type}`;"
        },
        {
          "variation": "web-buddy",
          "line": 517,
          "column": 26,
          "context": "string",
          "lineText": "element.className = `web-buddy-component web-buddy-component-${component.type}`;"
        },
        {
          "variation": "web-buddy",
          "line": 517,
          "column": 46,
          "context": "string",
          "lineText": "element.className = `web-buddy-component web-buddy-component-${component.type}`;"
        },
        {
          "variation": "web-buddy",
          "line": 554,
          "column": 26,
          "context": "string",
          "lineText": "element.className = 'web-buddy-menu-item';"
        },
        {
          "variation": "web-buddy",
          "line": 562,
          "column": 25,
          "context": "string",
          "lineText": "icon.className = 'web-buddy-menu-icon';"
        },
        {
          "variation": "web-buddy",
          "line": 569,
          "column": 24,
          "context": "string",
          "lineText": "label.className = 'web-buddy-menu-label';"
        },
        {
          "variation": "web-buddy",
          "line": 576,
          "column": 29,
          "context": "string",
          "lineText": "shortcut.className = 'web-buddy-menu-shortcut';"
        },
        {
          "variation": "web-buddy",
          "line": 639,
          "column": 41,
          "context": "string",
          "lineText": "let menu = document.getElementById(`web-buddy-plugin-menu-${pluginId}`);"
        },
        {
          "variation": "web-buddy",
          "line": 642,
          "column": 18,
          "context": "string",
          "lineText": "menu.id = `web-buddy-plugin-menu-${pluginId}`;"
        },
        {
          "variation": "web-buddy",
          "line": 643,
          "column": 25,
          "context": "string",
          "lineText": "menu.className = 'web-buddy-plugin-menu';"
        },
        {
          "variation": "web-buddy",
          "line": 653,
          "column": 46,
          "context": "string",
          "lineText": "let container = document.getElementById('web-buddy-menu-container');"
        },
        {
          "variation": "web-buddy",
          "line": 656,
          "column": 23,
          "context": "string",
          "lineText": "container.id = 'web-buddy-menu-container';"
        },
        {
          "variation": "web-buddy",
          "line": 657,
          "column": 30,
          "context": "string",
          "lineText": "container.className = 'web-buddy-menu-container';"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/plugins/plugin-interface.ts",
      "occurrenceCount": 21,
      "references": [
        {
          "variation": "* @fileoverview Core plugin interfaces and types for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Core plugin interfaces and types for Web-Buddy plugin system"
        },
        {
          "variation": "WebBuddy",
          "line": 27,
          "column": 24,
          "context": "code",
          "lineText": "contractDefinitions: WebBuddyContract[];"
        },
        {
          "variation": "* Web-Buddy",
          "line": 49,
          "column": 2,
          "context": "code",
          "lineText": "* Web-Buddy contract definition"
        },
        {
          "variation": "WebBuddy",
          "line": 51,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyContract {"
        },
        {
          "variation": "WebBuddy",
          "line": 282,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyTab {"
        },
        {
          "variation": "WebBuddy",
          "line": 294,
          "column": 28,
          "context": "code",
          "lineText": "getCurrentTab(): Promise<WebBuddyTab | null>;"
        },
        {
          "variation": "WebBuddy",
          "line": 295,
          "column": 25,
          "context": "code",
          "lineText": "getAllTabs(): Promise<WebBuddyTab[]>;"
        },
        {
          "variation": "WebBuddy",
          "line": 297,
          "column": 42,
          "context": "code",
          "lineText": "findTabByTitle(title: string): Promise<WebBuddyTab | null>;"
        },
        {
          "variation": "WebBuddy",
          "line": 298,
          "column": 38,
          "context": "code",
          "lineText": "findTabByUrl(url: string): Promise<WebBuddyTab | null>;"
        },
        {
          "variation": "WebBuddy",
          "line": 301,
          "column": 32,
          "context": "code",
          "lineText": "onTabCreated(callback: (tab: WebBuddyTab) => void): void;"
        },
        {
          "variation": "WebBuddy",
          "line": 302,
          "column": 64,
          "context": "code",
          "lineText": "onTabUpdated(callback: (tabId: number, changeInfo: any, tab: WebBuddyTab) => void): void;"
        },
        {
          "variation": "WebBuddy",
          "line": 328,
          "column": 22,
          "context": "code",
          "lineText": "register(contract: WebBuddyContract): Promise<void>;"
        },
        {
          "variation": "WebBuddy",
          "line": 330,
          "column": 36,
          "context": "code",
          "lineText": "get(contractId: string): Promise<WebBuddyContract | null>;"
        },
        {
          "variation": "WebBuddy",
          "line": 331,
          "column": 40,
          "context": "code",
          "lineText": "getByDomain(domain: string): Promise<WebBuddyContract[]>;"
        },
        {
          "variation": "WebBuddy",
          "line": 332,
          "column": 21,
          "context": "code",
          "lineText": "getAll(): Promise<WebBuddyContract[]>;"
        },
        {
          "variation": "WebBuddy",
          "line": 335,
          "column": 23,
          "context": "code",
          "lineText": "discover(): Promise<WebBuddyContract[]>;"
        },
        {
          "variation": "WebBuddy",
          "line": 336,
          "column": 22,
          "context": "code",
          "lineText": "validate(contract: WebBuddyContract): Promise<{ valid: boolean; errors: string[] }>;"
        },
        {
          "variation": "WebBuddy",
          "line": 401,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyPlugin {"
        },
        {
          "variation": "WebBuddy",
          "line": 423,
          "column": 19,
          "context": "code",
          "lineText": "getContracts(): WebBuddyContract[];"
        },
        {
          "variation": "WebBuddy",
          "line": 456,
          "column": 10,
          "context": "code",
          "lineText": "minimumWebBuddyVersion?: string;"
        },
        {
          "variation": "WebBuddy",
          "line": 457,
          "column": 10,
          "context": "code",
          "lineText": "maximumWebBuddyVersion?: string;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/plugins/chatgpt-buddy-plugin.ts",
      "occurrenceCount": 21,
      "references": [
        {
          "variation": "* @fileoverview ChatGPT Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview ChatGPT Buddy Plugin Implementation"
        },
        {
          "variation": "WebBuddy",
          "line": 7,
          "column": 3,
          "context": "code",
          "lineText": "WebBuddyPlugin,"
        },
        {
          "variation": "WebBuddy",
          "line": 15,
          "column": 3,
          "context": "code",
          "lineText": "WebBuddyContract,"
        },
        {
          "variation": "WebBuddy",
          "line": 84,
          "column": 25,
          "context": "code",
          "lineText": "const chatGPTContracts: WebBuddyContract[] = ["
        },
        {
          "variation": "* ChatGPT Buddy",
          "line": 218,
          "column": 2,
          "context": "code",
          "lineText": "* ChatGPT Buddy Plugin - Main plugin implementation"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 220,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyPlugin implements WebBuddyPlugin {"
        },
        {
          "variation": "WebBuddy",
          "line": 220,
          "column": 44,
          "context": "code",
          "lineText": "export class ChatGPTBuddyPlugin implements WebBuddyPlugin {"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 221,
          "column": 18,
          "context": "string",
          "lineText": "readonly id = 'chatgpt-buddy';"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 222,
          "column": 20,
          "context": "string",
          "lineText": "readonly name = 'ChatGPT Buddy';"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 234,
          "column": 24,
          "context": "string",
          "lineText": "repository: 'https://github.com/rydnr/chatgpt-buddy'"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 288,
          "column": 28,
          "context": "string",
          "lineText": "context.logger.info('ChatGPT Buddy Plugin initialized successfully');"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 326,
          "column": 33,
          "context": "string",
          "lineText": "this.context.logger.info('ChatGPT Buddy Plugin activated successfully');"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 356,
          "column": 33,
          "context": "string",
          "lineText": "this.context.logger.info('ChatGPT Buddy Plugin deactivated');"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 359,
          "column": 53,
          "context": "string",
          "lineText": "this.context.logger.error('Error deactivating ChatGPT Buddy Plugin', error);"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 389,
          "column": 39,
          "context": "string",
          "lineText": "console.error('Error destroying ChatGPT Buddy Plugin:', error);"
        },
        {
          "variation": "WebBuddy",
          "line": 397,
          "column": 19,
          "context": "code",
          "lineText": "getContracts(): WebBuddyContract[] {"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 537,
          "column": 33,
          "context": "string",
          "lineText": "description: 'Configure ChatGPT Buddy settings',"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 630,
          "column": 33,
          "context": "string",
          "lineText": "this.context.logger.info('ChatGPT Buddy Plugin configuration updated');"
        },
        {
          "variation": "WebBuddy",
          "line": 2020,
          "column": 38,
          "context": "code",
          "lineText": "private contractCache: Map<string, WebBuddyContract> = new Map();"
        },
        {
          "variation": "WebBuddy",
          "line": 2406,
          "column": 45,
          "context": "code",
          "lineText": "private async executeCapability(contract: WebBuddyContract, capability: ContractCapability, parameters: any): Promise<any> {"
        },
        {
          "variation": "WebBuddy",
          "line": 2527,
          "column": 63,
          "context": "code",
          "lineText": "private async findBestContract(capability: string): Promise<WebBuddyContract | null> {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/src/chatgpt-buddy-client.ts",
      "occurrenceCount": 20,
      "references": [
        {
          "variation": "* @fileoverview ChatGPT-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview ChatGPT-Buddy Client SDK"
        },
        {
          "variation": "* @description TypeScript client for ChatGPT-Buddy",
          "line": 3,
          "column": 2,
          "context": "code",
          "lineText": "* @description TypeScript client for ChatGPT-Buddy server with AI automation capabilities"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 55,
          "column": 18,
          "context": "code",
          "lineText": "export interface ChatGPTBuddyClientConfig {"
        },
        {
          "variation": "* Main ChatGPT-Buddy",
          "line": 126,
          "column": 2,
          "context": "code",
          "lineText": "* Main ChatGPT-Buddy client class"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 129,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyClient extends Application {"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 136,
          "column": 15,
          "context": "string",
          "lineText": "['name', 'ChatGPT-Buddy Client SDK'],"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 147,
          "column": 31,
          "context": "code",
          "lineText": "constructor(private config: ChatGPTBuddyClientConfig) {"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 168,
          "column": 34,
          "context": "string",
          "lineText": "console.log('🚀 Initializing ChatGPT-Buddy client...');"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 179,
          "column": 22,
          "context": "string",
          "lineText": "console.log('✅ ChatGPT-Buddy client initialized successfully');"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 182,
          "column": 45,
          "context": "string",
          "lineText": "console.error('❌ Failed to initialize ChatGPT-Buddy client:', error);"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 321,
          "column": 42,
          "context": "string",
          "lineText": "throw new Error(`Cannot connect to ChatGPT-Buddy server at ${this.config.serverUrl}`);"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 440,
          "column": 56,
          "context": "string",
          "lineText": "return new Error('Network Error: Unable to reach ChatGPT-Buddy server');"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 450,
          "column": 35,
          "context": "string",
          "lineText": "console.log('🔌 Disconnecting ChatGPT-Buddy client...');"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 458,
          "column": 20,
          "context": "string",
          "lineText": "console.log('✅ ChatGPT-Buddy client disconnected');"
        },
        {
          "variation": "* Factory function to create and initialize a ChatGPT-Buddy",
          "line": 470,
          "column": 2,
          "context": "code",
          "lineText": "* Factory function to create and initialize a ChatGPT-Buddy client"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 472,
          "column": 29,
          "context": "code",
          "lineText": "export async function createChatGPTBuddyClient(config: ChatGPTBuddyClientConfig): Promise<ChatGPTBuddyClient> {"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 472,
          "column": 56,
          "context": "code",
          "lineText": "export async function createChatGPTBuddyClient(config: ChatGPTBuddyClientConfig): Promise<ChatGPTBuddyClient> {"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 472,
          "column": 91,
          "context": "code",
          "lineText": "export async function createChatGPTBuddyClient(config: ChatGPTBuddyClientConfig): Promise<ChatGPTBuddyClient> {"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 473,
          "column": 22,
          "context": "code",
          "lineText": "const client = new ChatGPTBuddyClient(config);"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 480,
          "column": 3,
          "context": "code",
          "lineText": "ChatGPTBuddyClientConfig,"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/index.d.ts",
      "occurrenceCount": 20,
      "references": [
        {
          "variation": "* Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* Web-Buddy Core - Generic Web Automation Framework"
        },
        {
          "variation": "WebBuddy",
          "line": 7,
          "column": 10,
          "context": "code",
          "lineText": "export { WebBuddyClient, type WebBuddyClientConfig } from './client';"
        },
        {
          "variation": "WebBuddy",
          "line": 7,
          "column": 31,
          "context": "code",
          "lineText": "export { WebBuddyClient, type WebBuddyClientConfig } from './client';"
        },
        {
          "variation": "WebBuddy",
          "line": 8,
          "column": 10,
          "context": "code",
          "lineText": "export { WebBuddyExtension, type WebBuddyExtensionConfig, ContentScriptIntegration } from './extension';"
        },
        {
          "variation": "WebBuddy",
          "line": 8,
          "column": 34,
          "context": "code",
          "lineText": "export { WebBuddyExtension, type WebBuddyExtensionConfig, ContentScriptIntegration } from './extension';"
        },
        {
          "variation": "WebBuddy",
          "line": 9,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from './client';"
        },
        {
          "variation": "WebBuddy",
          "line": 10,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyExtension } from './extension';"
        },
        {
          "variation": "WebBuddy",
          "line": 11,
          "column": 15,
          "context": "code",
          "lineText": "export { type WebBuddyEvent, type AutomationEvent, BaseEvent, type EventHandler, type EventResponse, createSuccessResponse, createErrorResponse, EventPriority, type EventMetadata, type MetadataEvent } from './events/base';"
        },
        {
          "variation": "WebBuddy",
          "line": 13,
          "column": 15,
          "context": "code",
          "lineText": "export { type WebBuddyMessage, BaseMessage, type MessageHandler, type MessageResponse } from './messages/base';"
        },
        {
          "variation": "* Factory function to create a configured WebBuddy",
          "line": 18,
          "column": 2,
          "context": "code",
          "lineText": "* Factory function to create a configured WebBuddyClient"
        },
        {
          "variation": "* @returns Configured WebBuddy",
          "line": 22,
          "column": 2,
          "context": "code",
          "lineText": "* @returns Configured WebBuddyClient instance with learning capabilities"
        },
        {
          "variation": "WebBuddy",
          "line": 24,
          "column": 31,
          "context": "code",
          "lineText": "export declare function createWebBuddyClient(config: {"
        },
        {
          "variation": "WebBuddy",
          "line": 29,
          "column": 5,
          "context": "code",
          "lineText": "}): WebBuddyClient;"
        },
        {
          "variation": "WebBuddy",
          "line": 38,
          "column": 5,
          "context": "code",
          "lineText": "}): WebBuddyClient;"
        },
        {
          "variation": "* Note: Server creation moved to @web-buddy",
          "line": 40,
          "column": 2,
          "context": "code",
          "lineText": "* Note: Server creation moved to @web-buddy/server package"
        },
        {
          "variation": "* Use createWebBuddyServer from '@web-buddy",
          "line": 41,
          "column": 2,
          "context": "code",
          "lineText": "* Use createWebBuddyServer from '@web-buddy/server' instead"
        },
        {
          "variation": "* Factory function to create a configured WebBuddy",
          "line": 44,
          "column": 2,
          "context": "code",
          "lineText": "* Factory function to create a configured WebBuddyExtension"
        },
        {
          "variation": "* @returns Configured WebBuddy",
          "line": 48,
          "column": 2,
          "context": "code",
          "lineText": "* @returns Configured WebBuddyExtension instance"
        },
        {
          "variation": "WebBuddy",
          "line": 50,
          "column": 31,
          "context": "code",
          "lineText": "export declare function createWebBuddyExtension(config: {"
        },
        {
          "variation": "WebBuddy",
          "line": 53,
          "column": 5,
          "context": "code",
          "lineText": "}): WebBuddyExtension;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/plugins/plugin-ui.js",
      "occurrenceCount": 19,
      "references": [
        {
          "variation": "* @fileoverview Plugin UI Component System for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin UI Component System for Web-Buddy plugin architecture"
        },
        {
          "variation": "web-buddy",
          "line": 344,
          "column": 20,
          "context": "string",
          "lineText": "{ id: 'web-buddy-panel-mount', type: 'panel' },"
        },
        {
          "variation": "web-buddy",
          "line": 345,
          "column": 20,
          "context": "string",
          "lineText": "{ id: 'web-buddy-toolbar-mount', type: 'toolbar' },"
        },
        {
          "variation": "web-buddy",
          "line": 346,
          "column": 20,
          "context": "string",
          "lineText": "{ id: 'web-buddy-sidebar-mount', type: 'sidebar' },"
        },
        {
          "variation": "web-buddy",
          "line": 347,
          "column": 20,
          "context": "string",
          "lineText": "{ id: 'web-buddy-overlay-mount', type: 'overlay' }"
        },
        {
          "variation": "web-buddy",
          "line": 354,
          "column": 38,
          "context": "string",
          "lineText": "element.className = `web-buddy-mount web-buddy-mount-${type}`;"
        },
        {
          "variation": "web-buddy",
          "line": 354,
          "column": 54,
          "context": "string",
          "lineText": "element.className = `web-buddy-mount web-buddy-mount-${type}`;"
        },
        {
          "variation": "web-buddy",
          "line": 375,
          "column": 30,
          "context": "string",
          "lineText": "element.className = `web-buddy-component web-buddy-component-${component.type}`;"
        },
        {
          "variation": "web-buddy",
          "line": 375,
          "column": 50,
          "context": "string",
          "lineText": "element.className = `web-buddy-component web-buddy-component-${component.type}`;"
        },
        {
          "variation": "web-buddy",
          "line": 405,
          "column": 30,
          "context": "string",
          "lineText": "element.className = 'web-buddy-menu-item';"
        },
        {
          "variation": "web-buddy",
          "line": 412,
          "column": 31,
          "context": "string",
          "lineText": "icon.className = 'web-buddy-menu-icon';"
        },
        {
          "variation": "web-buddy",
          "line": 418,
          "column": 28,
          "context": "string",
          "lineText": "label.className = 'web-buddy-menu-label';"
        },
        {
          "variation": "web-buddy",
          "line": 424,
          "column": 35,
          "context": "string",
          "lineText": "shortcut.className = 'web-buddy-menu-shortcut';"
        },
        {
          "variation": "web-buddy",
          "line": 477,
          "column": 45,
          "context": "string",
          "lineText": "let menu = document.getElementById(`web-buddy-plugin-menu-${pluginId}`);"
        },
        {
          "variation": "web-buddy",
          "line": 480,
          "column": 24,
          "context": "string",
          "lineText": "menu.id = `web-buddy-plugin-menu-${pluginId}`;"
        },
        {
          "variation": "web-buddy",
          "line": 481,
          "column": 31,
          "context": "string",
          "lineText": "menu.className = 'web-buddy-plugin-menu';"
        },
        {
          "variation": "web-buddy",
          "line": 489,
          "column": 50,
          "context": "string",
          "lineText": "let container = document.getElementById('web-buddy-menu-container');"
        },
        {
          "variation": "web-buddy",
          "line": 492,
          "column": 29,
          "context": "string",
          "lineText": "container.id = 'web-buddy-menu-container';"
        },
        {
          "variation": "web-buddy",
          "line": 493,
          "column": 36,
          "context": "string",
          "lineText": "container.className = 'web-buddy-menu-container';"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/_config.yml",
      "occurrenceCount": 19,
      "references": [
        {
          "variation": "//rydnr.github.io/chatgpt-buddy",
          "line": 5,
          "column": 13,
          "context": "string",
          "lineText": "url: \"https://rydnr.github.io/chatgpt-buddy\""
        },
        {
          "variation": "web-buddy",
          "line": 17,
          "column": 3,
          "context": "code",
          "lineText": "web-buddy:"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 20,
          "column": 3,
          "context": "code",
          "lineText": "chatgpt-buddy:"
        },
        {
          "variation": "\"web-buddy",
          "line": 51,
          "column": 13,
          "context": "code",
          "lineText": "type: \"web-buddy\""
        },
        {
          "variation": "\"web-buddy",
          "line": 54,
          "column": 16,
          "context": "code",
          "lineText": "project: \"web-buddy\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 57,
          "column": 14,
          "context": "string",
          "lineText": "type: \"chatgpt-buddy\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 60,
          "column": 17,
          "context": "string",
          "lineText": "project: \"chatgpt-buddy\""
        },
        {
          "variation": "\"Web-Buddy",
          "line": 67,
          "column": 12,
          "context": "code",
          "lineText": "- title: \"Web-Buddy\""
        },
        {
          "variation": "/web-buddy",
          "line": 68,
          "column": 11,
          "context": "string",
          "lineText": "url: \"/web-buddy/\""
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 70,
          "column": 13,
          "context": "string",
          "lineText": "- title: \"ChatGPT-Buddy\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 71,
          "column": 12,
          "context": "string",
          "lineText": "url: \"/chatgpt-buddy/\""
        },
        {
          "variation": "web-buddy",
          "line": 82,
          "column": 3,
          "context": "code",
          "lineText": "web-buddy:"
        },
        {
          "variation": "\"Web-Buddy",
          "line": 83,
          "column": 11,
          "context": "code",
          "lineText": "name: \"Web-Buddy\""
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 86,
          "column": 20,
          "context": "string",
          "lineText": "github: \"https://github.com/rydnr/web-buddy\""
        },
        {
          "variation": "@web-buddy",
          "line": 87,
          "column": 11,
          "context": "string",
          "lineText": "npm: \"@web-buddy/core\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 88,
          "column": 3,
          "context": "code",
          "lineText": "chatgpt-buddy:"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 89,
          "column": 12,
          "context": "string",
          "lineText": "name: \"ChatGPT-Buddy\""
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 92,
          "column": 20,
          "context": "string",
          "lineText": "github: \"https://github.com/rydnr/chatgpt-buddy\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 93,
          "column": 12,
          "context": "string",
          "lineText": "npm: \"@chatgpt-buddy/client\""
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/src/server.ts",
      "occurrenceCount": 18,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": "WebBuddy",
          "line": 20,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyEvent, EventHandler, EventResponse, createSuccessResponse, createErrorResponse } from './events/base';"
        },
        {
          "variation": "WebBuddy",
          "line": 22,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyMessage } from './messages/base'; // Legacy support"
        },
        {
          "variation": "* Configuration interface for WebBuddy",
          "line": 25,
          "column": 2,
          "context": "code",
          "lineText": "* Configuration interface for WebBuddyServer"
        },
        {
          "variation": "WebBuddy",
          "line": 27,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyServerConfig {"
        },
        {
          "variation": "* Generic Web-Buddy",
          "line": 57,
          "column": 2,
          "context": "code",
          "lineText": "* Generic Web-Buddy server that provides event routing infrastructure"
        },
        {
          "variation": "WebBuddy",
          "line": 61,
          "column": 14,
          "context": "code",
          "lineText": "export class WebBuddyServer {"
        },
        {
          "variation": "WebBuddy",
          "line": 63,
          "column": 58,
          "context": "code",
          "lineText": "private eventListeners = new Map<string, Array<(event: WebBuddyEvent) => void>>();"
        },
        {
          "variation": "WebBuddy",
          "line": 65,
          "column": 42,
          "context": "code",
          "lineText": "private messageQueue = new Map<string, WebBuddyMessage[]>();"
        },
        {
          "variation": "WebBuddy",
          "line": 67,
          "column": 31,
          "context": "code",
          "lineText": "constructor(private config: WebBuddyServerConfig = {}) {}"
        },
        {
          "variation": "WebBuddy",
          "line": 84,
          "column": 57,
          "context": "code",
          "lineText": "addEventListener(eventType: string, listener: (event: WebBuddyEvent) => void): void {"
        },
        {
          "variation": "WebBuddy",
          "line": 103,
          "column": 60,
          "context": "code",
          "lineText": "removeEventListener(eventType: string, listener: (event: WebBuddyEvent) => void): void {"
        },
        {
          "variation": "WebBuddy",
          "line": 127,
          "column": 28,
          "context": "code",
          "lineText": "async handleEvent(event: WebBuddyEvent): Promise<EventResponse> {"
        },
        {
          "variation": "WebBuddy",
          "line": 175,
          "column": 18,
          "context": "code",
          "lineText": "const event: WebBuddyEvent = {"
        },
        {
          "variation": "WebBuddy",
          "line": 191,
          "column": 40,
          "context": "code",
          "lineText": "private triggerEventListeners(event: WebBuddyEvent): void {"
        },
        {
          "variation": "WebBuddy",
          "line": 293,
          "column": 58,
          "context": "code",
          "lineText": "async forwardToExtension(extensionId: string, message: WebBuddyMessage): Promise<boolean> {"
        },
        {
          "variation": "WebBuddy",
          "line": 317,
          "column": 40,
          "context": "code",
          "lineText": "async broadcastToExtensions(message: WebBuddyMessage): Promise<string[]> {"
        },
        {
          "variation": "WebBuddy",
          "line": 343,
          "column": 46,
          "context": "code",
          "lineText": "queueMessage(extensionId: string, message: WebBuddyMessage): void {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/README.md",
      "occurrenceCount": 18,
      "references": [
        {
          "variation": "# Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "# Web-Buddy Node.js Server Framework"
        },
        {
          "variation": "Web-Buddy",
          "line": 12,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy Node.js Server Framework provides a robust, event-driven coordination layer for managing browser extension automation. Built on TypeScript-EDA patterns, it enables seamless communication between external clients and browser extensions through WebSocket connections and REST APIs."
        },
        {
          "variation": "@web-buddy",
          "line": 29,
          "column": 13,
          "context": "code",
          "lineText": "npm install @web-buddy/nodejs-server"
        },
        {
          "variation": "@web-buddy",
          "line": 31,
          "column": 10,
          "context": "code",
          "lineText": "pnpm add @web-buddy/nodejs-server"
        },
        {
          "variation": "@web-buddy",
          "line": 38,
          "column": 36,
          "context": "string",
          "lineText": "import { ServerApplication } from '@web-buddy/nodejs-server';"
        },
        {
          "variation": "@web-buddy",
          "line": 39,
          "column": 44,
          "context": "string",
          "lineText": "import { ServerStartRequestedEvent } from '@web-buddy/nodejs-server';"
        },
        {
          "variation": "Web-Buddy",
          "line": 95,
          "column": 21,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy Server started successfully!');"
        },
        {
          "variation": "@web-buddy",
          "line": 112,
          "column": 42,
          "context": "string",
          "lineText": "import { CoordinationApplication } from '@web-buddy/nodejs-server';"
        },
        {
          "variation": "@web-buddy",
          "line": 116,
          "column": 9,
          "context": "string",
          "lineText": "} from '@web-buddy/nodejs-server';"
        },
        {
          "variation": "web-buddy",
          "line": 575,
          "column": 3,
          "context": "code",
          "lineText": "web-buddy-server:"
        },
        {
          "variation": "web-buddy",
          "line": 599,
          "column": 9,
          "context": "code",
          "lineText": "name: web-buddy-server"
        },
        {
          "variation": "web-buddy",
          "line": 604,
          "column": 12,
          "context": "code",
          "lineText": "app: web-buddy-server"
        },
        {
          "variation": "web-buddy",
          "line": 608,
          "column": 14,
          "context": "code",
          "lineText": "app: web-buddy-server"
        },
        {
          "variation": "web-buddy",
          "line": 612,
          "column": 16,
          "context": "code",
          "lineText": "image: web-buddy/nodejs-server:latest"
        },
        {
          "variation": "@web-buddy",
          "line": 636,
          "column": 4,
          "context": "code",
          "lineText": "- [@web-buddy/browser-extension](https://github.com/rydnr/web-buddy-browser-extension) - Browser extension framework"
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 636,
          "column": 40,
          "context": "code",
          "lineText": "- [@web-buddy/browser-extension](https://github.com/rydnr/web-buddy-browser-extension) - Browser extension framework"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 637,
          "column": 4,
          "context": "code",
          "lineText": "- [ChatGPT-Buddy](https://github.com/rydnr/chatgpt-buddy) - AI automation implementation"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 637,
          "column": 25,
          "context": "code",
          "lineText": "- [ChatGPT-Buddy](https://github.com/rydnr/chatgpt-buddy) - AI automation implementation"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/google.com/MIGRATION.org",
      "occurrenceCount": 18,
      "references": [
        {
          "variation": "#+TITLE: Migration Guide: @google-buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: Migration Guide: @google-buddy/client to @semantest/google.com"
        },
        {
          "variation": "google-buddy",
          "line": 7,
          "column": 62,
          "context": "code",
          "lineText": "This document guides you through migrating from the legacy =@google-buddy/client= package to the new =@semantest/google.com= package, which is built on the TypeScript-EDA foundation."
        },
        {
          "variation": "*Old*: =@google-buddy",
          "line": 16,
          "column": 3,
          "context": "code",
          "lineText": "- *Old*: =@google-buddy/client="
        },
        {
          "variation": "*Old*: =@web-buddy",
          "line": 20,
          "column": 3,
          "context": "code",
          "lineText": "- *Old*: =@web-buddy/core="
        },
        {
          "variation": "google-buddy",
          "line": 31,
          "column": 7,
          "context": "string",
          "lineText": "\"@google-buddy/client\": \"^1.0.0\","
        },
        {
          "variation": "@web-buddy",
          "line": 32,
          "column": 6,
          "context": "string",
          "lineText": "\"@web-buddy/core\": \"^1.0.0\""
        },
        {
          "variation": "GoogleBuddy",
          "line": 50,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from '@google-buddy/client';"
        },
        {
          "variation": "google-buddy",
          "line": 50,
          "column": 37,
          "context": "string",
          "lineText": "import { GoogleBuddyClient } from '@google-buddy/client';"
        },
        {
          "variation": "WebBuddy",
          "line": 51,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "@web-buddy",
          "line": 51,
          "column": 33,
          "context": "string",
          "lineText": "import { WebBuddyClient } from '@web-buddy/core';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 54,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from '@semantest/google.com';"
        },
        {
          "variation": "webBuddy",
          "line": 70,
          "column": 7,
          "context": "code",
          "lineText": "const webBuddyClient = new WebBuddyClient({"
        },
        {
          "variation": "WebBuddy",
          "line": 70,
          "column": 28,
          "context": "code",
          "lineText": "const webBuddyClient = new WebBuddyClient({"
        },
        {
          "variation": "GoogleBuddy",
          "line": 73,
          "column": 26,
          "context": "code",
          "lineText": "const googleClient = new GoogleBuddyClient(webBuddyClient);"
        },
        {
          "variation": "webBuddy",
          "line": 73,
          "column": 44,
          "context": "code",
          "lineText": "const googleClient = new GoogleBuddyClient(webBuddyClient);"
        },
        {
          "variation": "GoogleBuddy",
          "line": 76,
          "column": 26,
          "context": "code",
          "lineText": "const googleClient = new GoogleBuddyClient({"
        },
        {
          "variation": "*WebBuddy",
          "line": 315,
          "column": 4,
          "context": "code",
          "lineText": "1. *WebBuddyClient Dependency*: No longer passed to constructor"
        },
        {
          "variation": "WebBuddy",
          "line": 323,
          "column": 7,
          "context": "code",
          "lineText": "- =getWebBuddyClient()= - Use =getAdapter()= instead"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/google.com/tests/google-images-download.e2e.test.ts",
      "occurrenceCount": 16,
      "references": [
        {
          "variation": "WebBuddy",
          "line": 2,
          "column": 21,
          "context": "code",
          "lineText": "import { EventDrivenWebBuddyClient } from '../src/google-buddy-client';"
        },
        {
          "variation": "google-buddy",
          "line": 2,
          "column": 51,
          "context": "string",
          "lineText": "import { EventDrivenWebBuddyClient } from '../src/google-buddy-client';"
        },
        {
          "variation": "* using the Web-Buddy",
          "line": 10,
          "column": 2,
          "context": "code",
          "lineText": "* using the Web-Buddy Chrome extension."
        },
        {
          "variation": "web-buddy",
          "line": 132,
          "column": 45,
          "context": "string",
          "lineText": "const downloadButton = page.locator('.web-buddy-download-button').first();"
        },
        {
          "variation": "web-buddy",
          "line": 155,
          "column": 52,
          "context": "string",
          "lineText": "const downloadButtons = await page.locator('.web-buddy-download-button').count();"
        },
        {
          "variation": "web-buddy",
          "line": 176,
          "column": 28,
          "context": "string",
          "lineText": "await page.locator('.web-buddy-download-button').first().click();"
        },
        {
          "variation": "web-buddy",
          "line": 204,
          "column": 28,
          "context": "string",
          "lineText": "await page.locator('.web-buddy-download-button').first().click();"
        },
        {
          "variation": "web-buddy",
          "line": 230,
          "column": 28,
          "context": "string",
          "lineText": "await page.locator('.web-buddy-download-button').first().click();"
        },
        {
          "variation": "web-buddy",
          "line": 248,
          "column": 45,
          "context": "string",
          "lineText": "const downloadButton = page.locator('.web-buddy-download-button').first();"
        },
        {
          "variation": "web-buddy",
          "line": 280,
          "column": 28,
          "context": "string",
          "lineText": "await page.locator('.web-buddy-download-button').first().click();"
        },
        {
          "variation": "web-buddy",
          "line": 283,
          "column": 43,
          "context": "string",
          "lineText": "const errorMessage = page.locator('.web-buddy-error-message, [role=\"alert\"]');"
        },
        {
          "variation": "web-buddy",
          "line": 297,
          "column": 43,
          "context": "string",
          "lineText": "const errorElement = page.locator('.web-buddy-error, [data-error]');"
        },
        {
          "variation": "web-buddy",
          "line": 313,
          "column": 36,
          "context": "string",
          "lineText": "await page.waitForSelector('.web-buddy-download-button', { timeout: 1000 });"
        },
        {
          "variation": "web-buddy",
          "line": 334,
          "column": 28,
          "context": "string",
          "lineText": "await page.locator('.web-buddy-download-button').first().click();"
        },
        {
          "variation": ".webBuddy",
          "line": 353,
          "column": 29,
          "context": "code",
          "lineText": "return !!(window as any).webBuddy || document.querySelector('.web-buddy-download-button');"
        },
        {
          "variation": "web-buddy",
          "line": 353,
          "column": 67,
          "context": "string",
          "lineText": "return !!(window as any).webBuddy || document.querySelector('.web-buddy-download-button');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/roadmap/01-cleanup-phase/01-rebranding/README.md",
      "occurrenceCount": 16,
      "references": [
        {
          "variation": "# Milestone: WebBuddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "# Milestone: WebBuddy → Semantest Rebranding"
        },
        {
          "variation": "WebBuddy",
          "line": 9,
          "column": 37,
          "context": "string",
          "lineText": "Complete global replacement of all \"WebBuddy\", \"web-buddy\", and \"buddy\" references with \"Semantest\" or \"semantest\" throughout the entire codebase."
        },
        {
          "variation": "\"web-buddy",
          "line": 9,
          "column": 48,
          "context": "code",
          "lineText": "Complete global replacement of all \"WebBuddy\", \"web-buddy\", and \"buddy\" references with \"Semantest\" or \"semantest\" throughout the entire codebase."
        },
        {
          "variation": "\"buddy",
          "line": 9,
          "column": 65,
          "context": "code",
          "lineText": "Complete global replacement of all \"WebBuddy\", \"web-buddy\", and \"buddy\" references with \"Semantest\" or \"semantest\" throughout the entire codebase."
        },
        {
          "variation": "**Task 001**: Scan entire codebase for all variations of \"buddy",
          "line": 15,
          "column": 7,
          "context": "code",
          "lineText": "- [ ] **Task 001**: Scan entire codebase for all variations of \"buddy\" references"
        },
        {
          "variation": "WebBuddy",
          "line": 21,
          "column": 6,
          "context": "string",
          "lineText": "- `WebBuddy` → `Semantest`"
        },
        {
          "variation": "web-buddy",
          "line": 22,
          "column": 6,
          "context": "string",
          "lineText": "- `web-buddy` → `semantest`"
        },
        {
          "variation": "@web-buddy",
          "line": 23,
          "column": 6,
          "context": "string",
          "lineText": "- `@web-buddy/` → `@semantest/`"
        },
        {
          "variation": "webBuddy",
          "line": 24,
          "column": 6,
          "context": "string",
          "lineText": "- `webBuddy` → `semantest`"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 25,
          "column": 6,
          "context": "string",
          "lineText": "- `WEB_BUDDY` → `SEMANTEST`"
        },
        {
          "variation": "\"buddy",
          "line": 82,
          "column": 27,
          "context": "code",
          "lineText": "- [ ] Zero occurrences of \"buddy\" in any form (except historical references)"
        },
        {
          "variation": "WebBuddy",
          "line": 106,
          "column": 12,
          "context": "code",
          "lineText": "{ from: /WebBuddy/g, to: 'Semantest' },"
        },
        {
          "variation": "/web-buddy",
          "line": 107,
          "column": 11,
          "context": "code",
          "lineText": "{ from: /web-buddy/g, to: 'semantest' },"
        },
        {
          "variation": "webBuddy",
          "line": 108,
          "column": 12,
          "context": "code",
          "lineText": "{ from: /webBuddy/g, to: 'semantest' },"
        },
        {
          "variation": "@web-buddy",
          "line": 109,
          "column": 12,
          "context": "code",
          "lineText": "{ from: /@web-buddy\\//g, to: '@semantest/' },"
        },
        {
          "variation": "WEB_BUDDY",
          "line": 110,
          "column": 12,
          "context": "code",
          "lineText": "{ from: /WEB_BUDDY/g, to: 'SEMANTEST' },"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/research.html",
      "occurrenceCount": 16,
      "references": [
        {
          "variation": "ChatGPT-Buddy",
          "line": 2,
          "column": 9,
          "context": "string",
          "lineText": "title: \"ChatGPT-Buddy Research Documentation\""
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 4,
          "column": 10,
          "context": "string",
          "lineText": "author: \"ChatGPT-Buddy Team\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 7,
          "column": 10,
          "context": "code",
          "lineText": "project: chatgpt-buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 12,
          "column": 15,
          "context": "code",
          "lineText": "developed for ChatGPT-Buddy, including performance studies,"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 32,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy, analyzing whether D-Bus can provide a viable alternative"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 191,
          "column": 9,
          "context": "string",
          "lineText": "<h3 id=\"chatgpt-buddy-events-d-bus-signals\">ChatGPT-buddy Events → D-Bus"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 191,
          "column": 45,
          "context": "code",
          "lineText": "<h3 id=\"chatgpt-buddy-events-d-bus-signals\">ChatGPT-buddy Events → D-Bus"
        },
        {
          "variation": ".buddy",
          "line": 205,
          "column": 16,
          "context": "code",
          "lineText": "<td>org.chatgpt.buddy.automation</td>"
        },
        {
          "variation": ".buddy",
          "line": 211,
          "column": 16,
          "context": "code",
          "lineText": "<td>org.chatgpt.buddy.automation</td>"
        },
        {
          "variation": ".buddy",
          "line": 217,
          "column": 16,
          "context": "code",
          "lineText": "<td>org.chatgpt.buddy.automation</td>"
        },
        {
          "variation": ".buddy",
          "line": 223,
          "column": 16,
          "context": "code",
          "lineText": "<td>org.chatgpt.buddy.automation</td>"
        },
        {
          "variation": ".buddy",
          "line": 231,
          "column": 21,
          "context": "code",
          "lineText": "--dest=org.chatgpt.buddy.automation \\"
        },
        {
          "variation": "/buddy",
          "line": 232,
          "column": 15,
          "context": "code",
          "lineText": "/org/chatgpt/buddy/automation \\"
        },
        {
          "variation": ".buddy",
          "line": 233,
          "column": 14,
          "context": "code",
          "lineText": "org.chatgpt.buddy.automation.AutomationEvent \\"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 461,
          "column": 13,
          "context": "string",
          "lineText": "href=\"https://github.com/rydnr/chatgpt-buddy/tree/main/research\">Complete"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 482,
          "column": 57,
          "context": "code",
          "lineText": "development and helps guide architectural decisions for ChatGPT-Buddy"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/src/google-images-playwright.ts",
      "occurrenceCount": 15,
      "references": [
        {
          "variation": "WebBuddy",
          "line": 11,
          "column": 21,
          "context": "code",
          "lineText": "import { EventDrivenWebBuddyClient } from '../typescript/src/event-driven-client';"
        },
        {
          "variation": ".WEBBUDDY",
          "line": 21,
          "column": 25,
          "context": "code",
          "lineText": "baseUrl: process.env.WEBBUDDY_SERVER_URL || 'http://localhost:3000',"
        },
        {
          "variation": ".WEBBUDDY",
          "line": 22,
          "column": 24,
          "context": "code",
          "lineText": "apiKey: process.env.WEBBUDDY_API_KEY || 'test-api-key',"
        },
        {
          "variation": ".WEBBUDDY",
          "line": 23,
          "column": 29,
          "context": "code",
          "lineText": "extensionId: process.env.WEBBUDDY_EXTENSION_ID || 'test-extension-id',"
        },
        {
          "variation": ".WEBBUDDY",
          "line": 24,
          "column": 31,
          "context": "code",
          "lineText": "extensionPath: process.env.WEBBUDDY_EXTENSION_PATH || path.join(__dirname, '../../extension.chrome'),"
        },
        {
          "variation": "WebBuddy",
          "line": 30,
          "column": 31,
          "context": "code",
          "lineText": "const client = new EventDrivenWebBuddyClient(config);"
        },
        {
          "variation": "* Launch browser with Web-Buddy",
          "line": 33,
          "column": 2,
          "context": "code",
          "lineText": "* Launch browser with Web-Buddy extension loaded"
        },
        {
          "variation": "Web-Buddy",
          "line": 36,
          "column": 44,
          "context": "string",
          "lineText": "console.log('🚀 Launching browser with Web-Buddy extension...');"
        },
        {
          "variation": "// Get the tab ID for Web-Buddy",
          "line": 193,
          "column": 9,
          "context": "code",
          "lineText": "// Get the tab ID for Web-Buddy communication"
        },
        {
          "variation": "Web-Buddy",
          "line": 219,
          "column": 47,
          "context": "string",
          "lineText": "console.log('📥 Downloading image via Web-Buddy...');"
        },
        {
          "variation": "// Request download through Web-Buddy",
          "line": 224,
          "column": 9,
          "context": "code",
          "lineText": "// Request download through Web-Buddy"
        },
        {
          "variation": "* Alternative: Download directly without Web-Buddy",
          "line": 271,
          "column": 2,
          "context": "code",
          "lineText": "* Alternative: Download directly without Web-Buddy extension"
        },
        {
          "variation": "webbuddy",
          "line": 354,
          "column": 30,
          "context": "string",
          "lineText": "const mode = args[0] || 'webbuddy';"
        },
        {
          "variation": "Web-Buddy",
          "line": 379,
          "column": 34,
          "context": "string",
          "lineText": "console.log('\\n✨ Web-Buddy download completed!');"
        },
        {
          "variation": "Web-Buddy",
          "line": 383,
          "column": 37,
          "context": "string",
          "lineText": "console.error('\\n💀 Web-Buddy download failed:', error.message);"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/research.org",
      "occurrenceCount": 15,
      "references": [
        {
          "variation": "#+TITLE: ChatGPT-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: ChatGPT-Buddy Research Documentation"
        },
        {
          "variation": "#+AUTHOR: ChatGPT-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "#+AUTHOR: ChatGPT-Buddy Team"
        },
        {
          "variation": "#+PROJECT: chatgpt-buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "#+PROJECT: chatgpt-buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 10,
          "column": 77,
          "context": "code",
          "lineText": "This section documents the research and experimental features developed for ChatGPT-Buddy, including performance studies, architectural investigations, and proof-of-concept implementations that push the boundaries of web automation."
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 24,
          "column": 58,
          "context": "code",
          "lineText": "Comprehensive research into D-Bus signal integration for ChatGPT-Buddy, analyzing whether D-Bus can provide a viable alternative to WebSocket communication for browser automation on Linux systems."
        },
        {
          "variation": "*** ChatGPT-buddy",
          "line": 132,
          "column": 1,
          "context": "code",
          "lineText": "*** ChatGPT-buddy Events → D-Bus Signals"
        },
        {
          "variation": ".buddy",
          "line": 136,
          "column": 31,
          "context": "code",
          "lineText": "| SELECT_PROJECT | org.chatgpt.buddy.automation | AutomationEvent | [\"SELECT_PROJECT\", JSON_payload] |"
        },
        {
          "variation": ".buddy",
          "line": 137,
          "column": 28,
          "context": "code",
          "lineText": "| FILL_PROMPT | org.chatgpt.buddy.automation | AutomationEvent | [\"FILL_PROMPT\", JSON_payload] |"
        },
        {
          "variation": ".buddy",
          "line": 138,
          "column": 29,
          "context": "code",
          "lineText": "| GET_RESPONSE | org.chatgpt.buddy.automation | AutomationEvent | [\"GET_RESPONSE\", JSON_payload] |"
        },
        {
          "variation": ".buddy",
          "line": 139,
          "column": 27,
          "context": "code",
          "lineText": "| Completion | org.chatgpt.buddy.automation | AutomationCompleted | [JSON_result] |"
        },
        {
          "variation": ".buddy",
          "line": 144,
          "column": 21,
          "context": "code",
          "lineText": "--dest=org.chatgpt.buddy.automation \\"
        },
        {
          "variation": "/buddy",
          "line": 145,
          "column": 15,
          "context": "code",
          "lineText": "/org/chatgpt/buddy/automation \\"
        },
        {
          "variation": ".buddy",
          "line": 146,
          "column": 14,
          "context": "code",
          "lineText": "org.chatgpt.buddy.automation.AutomationEvent \\"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 331,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy/tree/main/research][Complete Research Archive]]: All research files and documentation"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 345,
          "column": 120,
          "context": "code",
          "lineText": "This research documentation provides the foundation for future development and helps guide architectural decisions for ChatGPT-Buddy and related projects."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/src/events/base.ts",
      "occurrenceCount": 14,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core - Event System"
        },
        {
          "variation": "* Base interface for all Web-Buddy",
          "line": 23,
          "column": 2,
          "context": "code",
          "lineText": "* Base interface for all Web-Buddy events"
        },
        {
          "variation": "WebBuddy",
          "line": 26,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyEvent {"
        },
        {
          "variation": "WebBuddy",
          "line": 40,
          "column": 42,
          "context": "code",
          "lineText": "export interface AutomationEvent extends WebBuddyEvent {"
        },
        {
          "variation": "* Abstract base class for all Web-Buddy",
          "line": 51,
          "column": 2,
          "context": "code",
          "lineText": "* Abstract base class for all Web-Buddy events"
        },
        {
          "variation": "WebBuddy",
          "line": 54,
          "column": 44,
          "context": "code",
          "lineText": "export abstract class BaseEvent implements WebBuddyEvent {"
        },
        {
          "variation": "web-buddy",
          "line": 74,
          "column": 13,
          "context": "string",
          "lineText": "return `web-buddy-${Date.now()}-${uuidv4().substr(0, 8)}`;"
        },
        {
          "variation": "WebBuddy",
          "line": 87,
          "column": 13,
          "context": "code",
          "lineText": "toJSON(): WebBuddyEvent {"
        },
        {
          "variation": "WebBuddy",
          "line": 102,
          "column": 25,
          "context": "code",
          "lineText": "static fromJSON(data: WebBuddyEvent): BaseEvent {"
        },
        {
          "variation": "* Interface for event handlers that process Web-Buddy",
          "line": 109,
          "column": 2,
          "context": "code",
          "lineText": "* Interface for event handlers that process Web-Buddy events"
        },
        {
          "variation": "WebBuddy",
          "line": 113,
          "column": 17,
          "context": "code",
          "lineText": "handle(event: WebBuddyEvent): Promise<any>;"
        },
        {
          "variation": "WebBuddy",
          "line": 127,
          "column": 21,
          "context": "code",
          "lineText": "resultingEvents?: WebBuddyEvent[]; // Events that this handler might emit"
        },
        {
          "variation": "WebBuddy",
          "line": 137,
          "column": 21,
          "context": "code",
          "lineText": "resultingEvents?: WebBuddyEvent[]"
        },
        {
          "variation": "WebBuddy",
          "line": 190,
          "column": 40,
          "context": "code",
          "lineText": "export interface MetadataEvent extends WebBuddyEvent {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/extension.js",
      "occurrenceCount": 14,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 3,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": ".WebBuddy",
          "line": 21,
          "column": 43,
          "context": "code",
          "lineText": "exports.ContentScriptIntegration = exports.WebBuddyExtension = void 0;"
        },
        {
          "variation": "* Generic Web-Buddy",
          "line": 27,
          "column": 2,
          "context": "code",
          "lineText": "* Generic Web-Buddy extension that handles browser-side automation"
        },
        {
          "variation": "WebBuddy",
          "line": 31,
          "column": 7,
          "context": "code",
          "lineText": "class WebBuddyExtension {"
        },
        {
          "variation": "* Connects to the Web-Buddy",
          "line": 82,
          "column": 6,
          "context": "code",
          "lineText": "* Connects to the Web-Buddy server"
        },
        {
          "variation": "Web-Buddy",
          "line": 90,
          "column": 34,
          "context": "string",
          "lineText": "console.log('Web-Buddy extension connected to server');"
        },
        {
          "variation": "Web-Buddy",
          "line": 113,
          "column": 34,
          "context": "string",
          "lineText": "console.log('Web-Buddy extension disconnected from server');"
        },
        {
          "variation": "* Disconnects from the Web-Buddy",
          "line": 128,
          "column": 6,
          "context": "code",
          "lineText": "* Disconnects from the Web-Buddy server"
        },
        {
          "variation": ".WebBuddy",
          "line": 449,
          "column": 8,
          "context": "code",
          "lineText": "exports.WebBuddyExtension = WebBuddyExtension;"
        },
        {
          "variation": "WebBuddy",
          "line": 449,
          "column": 29,
          "context": "code",
          "lineText": "exports.WebBuddyExtension = WebBuddyExtension;"
        },
        {
          "variation": "web-buddy",
          "line": 486,
          "column": 25,
          "context": "string",
          "lineText": "indicator.id = 'web-buddy-recording-indicator';"
        },
        {
          "variation": "// Convert content script message to WebBuddy",
          "line": 990,
          "column": 9,
          "context": "code",
          "lineText": "// Convert content script message to WebBuddyEvent format"
        },
        {
          "variation": "webBuddy",
          "line": 991,
          "column": 15,
          "context": "code",
          "lineText": "const webBuddyEvent = {"
        },
        {
          "variation": "webBuddy",
          "line": 1005,
          "column": 37,
          "context": "code",
          "lineText": "return await handler.handle(webBuddyEvent);"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/README_GOOGLE_IMAGES.md",
      "occurrenceCount": 14,
      "references": [
        {
          "variation": "**Web-Buddy Framework Integration** (`google-images-downloader.ts`) - Uses the event-driven architecture to communicate with the Web-Buddy",
          "line": 9,
          "column": 4,
          "context": "code",
          "lineText": "1. **Web-Buddy Framework Integration** (`google-images-downloader.ts`) - Uses the event-driven architecture to communicate with the Web-Buddy extension"
        },
        {
          "variation": "Web-Buddy",
          "line": 20,
          "column": 8,
          "context": "code",
          "lineText": "2. For Web-Buddy integration, ensure:"
        },
        {
          "variation": "Web-Buddy",
          "line": 21,
          "column": 10,
          "context": "code",
          "lineText": "- The Web-Buddy server is running on `http://localhost:3000`"
        },
        {
          "variation": "### Method 1: Simple Web-Buddy",
          "line": 31,
          "column": 1,
          "context": "code",
          "lineText": "### Method 1: Simple Web-Buddy Client (Simulated)"
        },
        {
          "variation": "### Method 2: Playwright with Web-Buddy",
          "line": 43,
          "column": 1,
          "context": "code",
          "lineText": "### Method 2: Playwright with Web-Buddy Extension"
        },
        {
          "variation": "Web-Buddy",
          "line": 45,
          "column": 39,
          "context": "code",
          "lineText": "This launches a real browser with the Web-Buddy extension and performs the search:"
        },
        {
          "variation": "WEBBUDDY",
          "line": 49,
          "column": 8,
          "context": "code",
          "lineText": "export WEBBUDDY_SERVER_URL=http://localhost:3000"
        },
        {
          "variation": "WEBBUDDY",
          "line": 50,
          "column": 8,
          "context": "code",
          "lineText": "export WEBBUDDY_EXTENSION_PATH=/path/to/extension.chrome"
        },
        {
          "variation": "WEBBUDDY",
          "line": 51,
          "column": 8,
          "context": "code",
          "lineText": "export WEBBUDDY_EXTENSION_ID=your-extension-id"
        },
        {
          "variation": "Web-Buddy",
          "line": 59,
          "column": 74,
          "context": "code",
          "lineText": "This uses Playwright to directly interact with Google Images without the Web-Buddy extension:"
        },
        {
          "variation": "Web-Buddy",
          "line": 75,
          "column": 10,
          "context": "code",
          "lineText": "- Via Web-Buddy extension (event-driven)"
        },
        {
          "variation": "### Event-Driven Approach (Web-Buddy",
          "line": 92,
          "column": 1,
          "context": "code",
          "lineText": "### Event-Driven Approach (Web-Buddy)"
        },
        {
          "variation": "WebBuddy",
          "line": 96,
          "column": 31,
          "context": "code",
          "lineText": "const client = new EventDrivenWebBuddyClient(config);"
        },
        {
          "variation": "**Server connection failed**: Start the Web-Buddy",
          "line": 132,
          "column": 4,
          "context": "code",
          "lineText": "2. **Server connection failed**: Start the Web-Buddy server (`npm start` in nodejs.server/)"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/index.html",
      "occurrenceCount": 14,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 228,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy (Generic Web Automation Framework)"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 234,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy (Specialized Implementation)"
        },
        {
          "variation": "Web-Buddy",
          "line": 236,
          "column": 18,
          "context": "code",
          "lineText": "│ implements Web-Buddy for ChatGPT automation"
        },
        {
          "variation": "Web-Buddy",
          "line": 292,
          "column": 21,
          "context": "code",
          "lineText": "<h2>Web-Buddy</h2>"
        },
        {
          "variation": "\"web-buddy",
          "line": 301,
          "column": 29,
          "context": "code",
          "lineText": "<a href=\"web-buddy/\" class=\"btn btn-primary\">📖 Documentation</a>"
        },
        {
          "variation": "\"web-buddy",
          "line": 302,
          "column": 29,
          "context": "code",
          "lineText": "<a href=\"web-buddy/getting-started.html\" class=\"btn btn-secondary\">🚀 Quick Start</a>"
        },
        {
          "variation": "\"web-buddy",
          "line": 303,
          "column": 29,
          "context": "code",
          "lineText": "<a href=\"web-buddy/story.html\" class=\"btn btn-secondary\">📚 Story</a>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 309,
          "column": 21,
          "context": "code",
          "lineText": "<h2>ChatGPT-Buddy</h2>"
        },
        {
          "variation": "Web-Buddy",
          "line": 310,
          "column": 50,
          "context": "code",
          "lineText": "<p>Specialized implementation of Web-Buddy for ChatGPT automation, featuring advanced training capabilities and pattern management.</p>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 318,
          "column": 30,
          "context": "string",
          "lineText": "<a href=\"chatgpt-buddy/\" class=\"btn btn-primary\">📖 Documentation</a>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 319,
          "column": 30,
          "context": "string",
          "lineText": "<a href=\"chatgpt-buddy/getting-started.html\" class=\"btn btn-secondary\">🚀 Quick Start</a>"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 320,
          "column": 30,
          "context": "string",
          "lineText": "<a href=\"chatgpt-buddy/story.html\" class=\"btn btn-secondary\">📚 Story</a>"
        },
        {
          "variation": "Web-Buddy",
          "line": 334,
          "column": 36,
          "context": "code",
          "lineText": "<p>Use <strong>Web-Buddy</strong> for generic browser automation across multiple websites and platforms</p>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 338,
          "column": 49,
          "context": "code",
          "lineText": "<p>Jump straight to <strong>ChatGPT-Buddy</strong> for specialized ChatGPT automation and AI interaction workflows</p>"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/buddy_references.txt",
      "occurrenceCount": 14,
      "references": [
        {
          "variation": "chatgpt-buddy",
          "line": 30,
          "column": 33,
          "context": "code",
          "lineText": "./chatgpt.com/src/compatibility/chatgpt-buddy-compat.ts"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 32,
          "column": 8,
          "context": "code",
          "lineText": "./docs/chatgpt-buddy/atdd-guide.html"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 33,
          "column": 8,
          "context": "code",
          "lineText": "./docs/chatgpt-buddy/development.html"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 34,
          "column": 8,
          "context": "code",
          "lineText": "./docs/chatgpt-buddy/getting-started.html"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 35,
          "column": 8,
          "context": "code",
          "lineText": "./docs/chatgpt-buddy/index.html"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 36,
          "column": 8,
          "context": "code",
          "lineText": "./docs/chatgpt-buddy/research.html"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 37,
          "column": 8,
          "context": "code",
          "lineText": "./docs/chatgpt-buddy/story.html"
        },
        {
          "variation": "/web-buddy",
          "line": 47,
          "column": 7,
          "context": "code",
          "lineText": "./docs/web-buddy/getting-started.html"
        },
        {
          "variation": "/web-buddy",
          "line": 48,
          "column": 7,
          "context": "code",
          "lineText": "./docs/web-buddy/index.html"
        },
        {
          "variation": "/web-buddy",
          "line": 49,
          "column": 7,
          "context": "code",
          "lineText": "./docs/web-buddy/story.html"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 66,
          "column": 34,
          "context": "code",
          "lineText": "./extension.chrome/build/plugins/chatgpt-buddy-plugin.js"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 98,
          "column": 32,
          "context": "code",
          "lineText": "./extension.chrome/src/plugins/chatgpt-buddy-plugin.ts"
        },
        {
          "variation": "google-buddy",
          "line": 115,
          "column": 18,
          "context": "code",
          "lineText": "./google.com/src/google-buddy-client.ts"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 158,
          "column": 25,
          "context": "code",
          "lineText": "./typescript.client/src/chatgpt-buddy-client.ts"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/src/client.ts",
      "occurrenceCount": 13,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": "WebBuddy",
          "line": 21,
          "column": 25,
          "context": "code",
          "lineText": "import { EventResponse, WebBuddyEvent } from './events/base';"
        },
        {
          "variation": "* Configuration interface for WebBuddy",
          "line": 25,
          "column": 2,
          "context": "code",
          "lineText": "* Configuration interface for WebBuddyClient"
        },
        {
          "variation": "WebBuddy",
          "line": 27,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyClientConfig {"
        },
        {
          "variation": "* Generic Web-Buddy",
          "line": 36,
          "column": 2,
          "context": "code",
          "lineText": "* Generic Web-Buddy client that provides low-level event-driven API"
        },
        {
          "variation": "WebBuddy",
          "line": 40,
          "column": 14,
          "context": "code",
          "lineText": "export class WebBuddyClient {"
        },
        {
          "variation": "WebBuddy",
          "line": 45,
          "column": 31,
          "context": "code",
          "lineText": "constructor(private config: WebBuddyClientConfig) {"
        },
        {
          "variation": "WebBuddy",
          "line": 60,
          "column": 12,
          "context": "code",
          "lineText": "event: WebBuddyEvent | Record<string, any>,"
        },
        {
          "variation": "WebBuddy",
          "line": 190,
          "column": 12,
          "context": "code",
          "lineText": "event: WebBuddyEvent | Record<string, any>,"
        },
        {
          "variation": "WebBuddy",
          "line": 192,
          "column": 6,
          "context": "code",
          "lineText": "): WebBuddyEvent {"
        },
        {
          "variation": "WebBuddy",
          "line": 195,
          "column": 23,
          "context": "code",
          "lineText": "return event as WebBuddyEvent;"
        },
        {
          "variation": "WebBuddy",
          "line": 216,
          "column": 12,
          "context": "code",
          "lineText": "event: WebBuddyEvent,"
        },
        {
          "variation": "web-buddy",
          "line": 309,
          "column": 13,
          "context": "string",
          "lineText": "return `web-buddy-${Date.now()}-${uuidv4().substr(0, 8)}`;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/server.d.ts",
      "occurrenceCount": 13,
      "references": [
        {
          "variation": "WebBuddy",
          "line": 1,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyEvent, EventHandler, EventResponse } from './events/base';"
        },
        {
          "variation": "WebBuddy",
          "line": 2,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyMessage } from './messages/base';"
        },
        {
          "variation": "* Configuration interface for WebBuddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* Configuration interface for WebBuddyServer"
        },
        {
          "variation": "WebBuddy",
          "line": 6,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyServerConfig {"
        },
        {
          "variation": "* Generic Web-Buddy",
          "line": 34,
          "column": 2,
          "context": "code",
          "lineText": "* Generic Web-Buddy server that provides event routing infrastructure"
        },
        {
          "variation": "WebBuddy",
          "line": 38,
          "column": 22,
          "context": "code",
          "lineText": "export declare class WebBuddyServer {"
        },
        {
          "variation": "WebBuddy",
          "line": 44,
          "column": 26,
          "context": "code",
          "lineText": "constructor(config?: WebBuddyServerConfig);"
        },
        {
          "variation": "WebBuddy",
          "line": 57,
          "column": 59,
          "context": "code",
          "lineText": "addEventListener(eventType: string, listener: (event: WebBuddyEvent) => void): void;"
        },
        {
          "variation": "WebBuddy",
          "line": 67,
          "column": 62,
          "context": "code",
          "lineText": "removeEventListener(eventType: string, listener: (event: WebBuddyEvent) => void): void;"
        },
        {
          "variation": "WebBuddy",
          "line": 79,
          "column": 24,
          "context": "code",
          "lineText": "handleEvent(event: WebBuddyEvent): Promise<EventResponse>;"
        },
        {
          "variation": "WebBuddy",
          "line": 122,
          "column": 54,
          "context": "code",
          "lineText": "forwardToExtension(extensionId: string, message: WebBuddyMessage): Promise<boolean>;"
        },
        {
          "variation": "WebBuddy",
          "line": 129,
          "column": 36,
          "context": "code",
          "lineText": "broadcastToExtensions(message: WebBuddyMessage): Promise<string[]>;"
        },
        {
          "variation": "WebBuddy",
          "line": 136,
          "column": 48,
          "context": "code",
          "lineText": "queueMessage(extensionId: string, message: WebBuddyMessage): void;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/plugins/chatgpt-buddy-plugin.js",
      "occurrenceCount": 13,
      "references": [
        {
          "variation": "* @fileoverview ChatGPT Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview ChatGPT Buddy Plugin Implementation"
        },
        {
          "variation": "* ChatGPT Buddy",
          "line": 161,
          "column": 2,
          "context": "code",
          "lineText": "* ChatGPT Buddy Plugin - Main plugin implementation"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 163,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyPlugin {"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 165,
          "column": 20,
          "context": "string",
          "lineText": "this.id = 'chatgpt-buddy';"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 166,
          "column": 22,
          "context": "string",
          "lineText": "this.name = 'ChatGPT Buddy';"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 177,
          "column": 32,
          "context": "string",
          "lineText": "repository: 'https://github.com/rydnr/chatgpt-buddy'"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 219,
          "column": 34,
          "context": "string",
          "lineText": "context.logger.info('ChatGPT Buddy Plugin initialized successfully');"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 251,
          "column": 39,
          "context": "string",
          "lineText": "this.context.logger.info('ChatGPT Buddy Plugin activated successfully');"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 276,
          "column": 39,
          "context": "string",
          "lineText": "this.context.logger.info('ChatGPT Buddy Plugin deactivated');"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 279,
          "column": 59,
          "context": "string",
          "lineText": "this.context.logger.error('Error deactivating ChatGPT Buddy Plugin', error);"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 305,
          "column": 45,
          "context": "string",
          "lineText": "console.error('Error destroying ChatGPT Buddy Plugin:', error);"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 436,
          "column": 41,
          "context": "string",
          "lineText": "description: 'Configure ChatGPT Buddy settings',"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 517,
          "column": 39,
          "context": "string",
          "lineText": "this.context.logger.info('ChatGPT Buddy Plugin configuration updated');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/story.html",
      "occurrenceCount": 13,
      "references": [
        {
          "variation": "ChatGPT-Buddy",
          "line": 2,
          "column": 13,
          "context": "string",
          "lineText": "title: \"The ChatGPT-Buddy Story: A Journey to Event-Driven Excellence\""
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 4,
          "column": 10,
          "context": "string",
          "lineText": "author: \"ChatGPT-Buddy Team\""
        },
        {
          "variation": "chatgpt-buddy",
          "line": 7,
          "column": 10,
          "context": "code",
          "lineText": "project: chatgpt-buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 13,
          "column": 47,
          "context": "code",
          "lineText": "applications, a new hero was about to emerge. ChatGPT-Buddy wasn't just"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 20,
          "column": 22,
          "context": "code",
          "lineText": "<p>Once upon a time, ChatGPT-Buddy lived as a traditional"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 159,
          "column": 44,
          "context": "code",
          "lineText": "<pre class=\"typescript\"><code>export class ChatGPTBuddyClient {"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 229,
          "column": 26,
          "context": "code",
          "lineText": "<pre class=\"ascii\"><code>chatgpt-buddy/"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 231,
          "column": 9,
          "context": "code",
          "lineText": "│   ├── chatgpt-buddy-core/     # The shared wisdom"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 232,
          "column": 9,
          "context": "code",
          "lineText": "│   ├── chatgpt-buddy-server/   # The business ruler"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 233,
          "column": 9,
          "context": "code",
          "lineText": "│   ├── chatgpt-buddy-extension/# The browser bridge"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 234,
          "column": 9,
          "context": "code",
          "lineText": "│   └── chatgpt-buddy-client-ts/# The developer gateway"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 348,
          "column": 4,
          "context": "code",
          "lineText": "<p>ChatGPT-Buddy stands as proof that:</p>"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 390,
          "column": 16,
          "context": "code",
          "lineText": "<p>In the end, ChatGPT-Buddy became more than just a tool for automating"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/chatgpt-buddy/story.org",
      "occurrenceCount": 13,
      "references": [
        {
          "variation": "#+TITLE: The ChatGPT-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "#+TITLE: The ChatGPT-Buddy Story: A Journey to Event-Driven Excellence"
        },
        {
          "variation": "#+AUTHOR: ChatGPT-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "#+AUTHOR: ChatGPT-Buddy Team"
        },
        {
          "variation": "#+PROJECT: chatgpt-buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "#+PROJECT: chatgpt-buddy"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 10,
          "column": 177,
          "context": "string",
          "lineText": "In the bustling world of web automation, where developers struggled to bridge the gap between ChatGPT's powerful AI and their own applications, a new hero was about to emerge. ChatGPT-Buddy wasn't just another tool—it was destined to become a shining example of how modern software architecture could transform a simple idea into an elegant, maintainable, and scalable solution."
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 15,
          "column": 19,
          "context": "code",
          "lineText": "Once upon a time, ChatGPT-Buddy lived as a traditional application:"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 141,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyClient {"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 203,
          "column": 1,
          "context": "code",
          "lineText": "chatgpt-buddy/"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 205,
          "column": 9,
          "context": "code",
          "lineText": "│   ├── chatgpt-buddy-core/     # The shared wisdom"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 206,
          "column": 9,
          "context": "code",
          "lineText": "│   ├── chatgpt-buddy-server/   # The business ruler"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 207,
          "column": 9,
          "context": "code",
          "lineText": "│   ├── chatgpt-buddy-extension/# The browser bridge"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 208,
          "column": 9,
          "context": "code",
          "lineText": "│   └── chatgpt-buddy-client-ts/# The developer gateway"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 304,
          "column": 1,
          "context": "code",
          "lineText": "ChatGPT-Buddy stands as proof that:"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 335,
          "column": 13,
          "context": "code",
          "lineText": "In the end, ChatGPT-Buddy became more than just a tool for automating ChatGPT interactions. It became a testament to the power of good software architecture, the discipline of test-driven development, and the elegance of event-driven design."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/python/src/event_driven_client.py",
      "occurrenceCount": 13,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 1,
          "context": "code",
          "lineText": "Web-Buddy Framework Event-Driven Python Client"
        },
        {
          "variation": "Web-Buddy",
          "line": 55,
          "column": 26,
          "context": "string",
          "lineText": "\"\"\"Configuration for Web-Buddy client\"\"\""
        },
        {
          "variation": "WebBuddy",
          "line": 60,
          "column": 24,
          "context": "string",
          "lineText": "user_agent: str = 'WebBuddyPythonSDK/1.0.0'"
        },
        {
          "variation": "WebBuddy",
          "line": 63,
          "column": 18,
          "context": "code",
          "lineText": "class EventDrivenWebBuddyClient:"
        },
        {
          "variation": "Web-Buddy",
          "line": 65,
          "column": 18,
          "context": "code",
          "lineText": "Event-Driven Web-Buddy Python Client"
        },
        {
          "variation": "Web-Buddy",
          "line": 67,
          "column": 47,
          "context": "code",
          "lineText": "Pure event-driven interface following the Web-Buddy Framework's EDA principles."
        },
        {
          "variation": "# Create the dispatch payload in Web-Buddy",
          "line": 91,
          "column": 13,
          "context": "code",
          "lineText": "# Create the dispatch payload in Web-Buddy format"
        },
        {
          "variation": "Web-Buddy",
          "line": 384,
          "column": 33,
          "context": "string",
          "lineText": "\"\"\"Maps domain event to Web-Buddy action\"\"\""
        },
        {
          "variation": "WebBuddy",
          "line": 519,
          "column": 22,
          "context": "code",
          "lineText": "class SyncEventDrivenWebBuddyClient:"
        },
        {
          "variation": "**kwargs) -> EventDrivenWebBuddy",
          "line": 672,
          "column": 54,
          "context": "code",
          "lineText": "def create_async_client(base_url: str, api_key: str, **kwargs) -> EventDrivenWebBuddyClient:"
        },
        {
          "variation": "WebBuddy",
          "line": 675,
          "column": 23,
          "context": "code",
          "lineText": "return EventDrivenWebBuddyClient(config)"
        },
        {
          "variation": "**kwargs) -> SyncEventDrivenWebBuddy",
          "line": 678,
          "column": 53,
          "context": "code",
          "lineText": "def create_sync_client(base_url: str, api_key: str, **kwargs) -> SyncEventDrivenWebBuddyClient:"
        },
        {
          "variation": "WebBuddy",
          "line": 681,
          "column": 27,
          "context": "code",
          "lineText": "return SyncEventDrivenWebBuddyClient(config)"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/events/base.d.ts",
      "occurrenceCount": 12,
      "references": [
        {
          "variation": "* Base interface for all Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* Base interface for all Web-Buddy events"
        },
        {
          "variation": "WebBuddy",
          "line": 5,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyEvent {"
        },
        {
          "variation": "WebBuddy",
          "line": 18,
          "column": 42,
          "context": "code",
          "lineText": "export interface AutomationEvent extends WebBuddyEvent {"
        },
        {
          "variation": "* Abstract base class for all Web-Buddy",
          "line": 28,
          "column": 2,
          "context": "code",
          "lineText": "* Abstract base class for all Web-Buddy events"
        },
        {
          "variation": "WebBuddy",
          "line": 31,
          "column": 52,
          "context": "code",
          "lineText": "export declare abstract class BaseEvent implements WebBuddyEvent {"
        },
        {
          "variation": "WebBuddy",
          "line": 51,
          "column": 15,
          "context": "code",
          "lineText": "toJSON(): WebBuddyEvent;"
        },
        {
          "variation": "WebBuddy",
          "line": 55,
          "column": 27,
          "context": "code",
          "lineText": "static fromJSON(data: WebBuddyEvent): BaseEvent;"
        },
        {
          "variation": "* Interface for event handlers that process Web-Buddy",
          "line": 58,
          "column": 2,
          "context": "code",
          "lineText": "* Interface for event handlers that process Web-Buddy events"
        },
        {
          "variation": "WebBuddy",
          "line": 62,
          "column": 19,
          "context": "code",
          "lineText": "handle(event: WebBuddyEvent): Promise<any>;"
        },
        {
          "variation": "WebBuddy",
          "line": 75,
          "column": 23,
          "context": "code",
          "lineText": "resultingEvents?: WebBuddyEvent[];"
        },
        {
          "variation": "WebBuddy",
          "line": 80,
          "column": 116,
          "context": "code",
          "lineText": "export declare function createSuccessResponse(data: any, correlationId: string, eventId: string, resultingEvents?: WebBuddyEvent[]): EventResponse;"
        },
        {
          "variation": "WebBuddy",
          "line": 107,
          "column": 40,
          "context": "code",
          "lineText": "export interface MetadataEvent extends WebBuddyEvent {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/contracts/contract-discovery-adapter.js",
      "occurrenceCount": 12,
      "references": [
        {
          "variation": "webBuddy",
          "line": 5,
          "column": 10,
          "context": "code",
          "lineText": "import { webBuddyStorage } from '../storage';"
        },
        {
          "variation": "web-buddy",
          "line": 11,
          "column": 16,
          "context": "string",
          "lineText": "super('web-buddy:contracts-discovered', {"
        },
        {
          "variation": "* Contract discovery and management adapter for Web-Buddy",
          "line": 19,
          "column": 2,
          "context": "code",
          "lineText": "* Contract discovery and management adapter for Web-Buddy extension"
        },
        {
          "variation": "webBuddy",
          "line": 102,
          "column": 23,
          "context": "code",
          "lineText": "await webBuddyStorage.saveAutomationPattern(pattern);"
        },
        {
          "variation": "\"web-buddy",
          "line": 299,
          "column": 64,
          "context": "string",
          "lineText": "const metaTags = document.querySelectorAll('meta[name^=\"web-buddy-contract\"]');"
        },
        {
          "variation": "WebBuddy",
          "line": 323,
          "column": 40,
          "context": "string",
          "lineText": "if (data['@type'] === 'WebBuddyContract') {"
        },
        {
          "variation": "web-buddy",
          "line": 338,
          "column": 61,
          "context": "string",
          "lineText": "const contractElements = document.querySelectorAll('web-buddy-contract');"
        },
        {
          "variation": "WEB-BUDDY",
          "line": 392,
          "column": 54,
          "context": "string",
          "lineText": "if (element.tagName === 'WEB-BUDDY-CONTRACT' ||"
        },
        {
          "variation": "web-buddy",
          "line": 394,
          "column": 56,
          "context": "string",
          "lineText": "element.querySelector('web-buddy-contract, [data-automation-contract]')) {"
        },
        {
          "variation": "web-buddy",
          "line": 416,
          "column": 34,
          "context": "string",
          "lineText": "window.addEventListener('web-buddy:contract-registered', (event) => {"
        },
        {
          "variation": "web-buddy",
          "line": 422,
          "column": 38,
          "context": "string",
          "lineText": "if (event.data.type === 'web-buddy:request-contracts') {"
        },
        {
          "variation": "web-buddy",
          "line": 425,
          "column": 28,
          "context": "string",
          "lineText": "type: 'web-buddy:contracts-response',"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/GOOGLE_IMAGES_GETTING_STARTED.md",
      "occurrenceCount": 12,
      "references": [
        {
          "variation": "**Learn Web-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "**Learn Web-Buddy by Example: Building Website-Specific Automation**"
        },
        {
          "variation": "**real-world example** to teach you how to extend Web-Buddy",
          "line": 5,
          "column": 36,
          "context": "code",
          "lineText": "This guide uses Google Images as a **real-world example** to teach you how to extend Web-Buddy Framework for any website. By the end, you'll understand the patterns and architecture needed to create automation for Pinterest, Instagram, Amazon, or any other site."
        },
        {
          "variation": "Web-Buddy",
          "line": 35,
          "column": 19,
          "context": "string",
          "lineText": "Let's examine how Web-Buddy automates Google Images downloads:"
        },
        {
          "variation": "**Right-Click Context Menu**: \"Download with Web-Buddy",
          "line": 40,
          "column": 4,
          "context": "code",
          "lineText": "2. **Right-Click Context Menu**: \"Download with Web-Buddy\" option"
        },
        {
          "variation": "Web-Buddy",
          "line": 341,
          "column": 39,
          "context": "string",
          "lineText": "button.title = 'Download with Web-Buddy';"
        },
        {
          "variation": "web-buddy",
          "line": 342,
          "column": 29,
          "context": "string",
          "lineText": "button.className = 'web-buddy-pinterest-download';"
        },
        {
          "variation": "WebBuddy",
          "line": 480,
          "column": 31,
          "context": "code",
          "lineText": "const client = new EventDrivenWebBuddyClient({"
        },
        {
          "variation": "**universal pattern** for extending Web-Buddy",
          "line": 510,
          "column": 33,
          "context": "code",
          "lineText": "The Pinterest example shows the **universal pattern** for extending Web-Buddy:"
        },
        {
          "variation": "Web-Buddy",
          "line": 893,
          "column": 11,
          "context": "code",
          "lineText": "Help make Web-Buddy better for everyone:"
        },
        {
          "variation": "//github.com/web-buddy",
          "line": 898,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/web-buddy/framework.git"
        },
        {
          "variation": "**🎉 You're now ready to build Web-Buddy",
          "line": 922,
          "column": 1,
          "context": "code",
          "lineText": "**🎉 You're now ready to build Web-Buddy automation for ANY website!**"
        },
        {
          "variation": "**Questions?** Join our [Discord community](https://discord.gg/web-buddy",
          "line": 926,
          "column": 1,
          "context": "code",
          "lineText": "**Questions?** Join our [Discord community](https://discord.gg/web-buddy) - we're here to help! 🚀"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/src/index.ts",
      "occurrenceCount": 11,
      "references": [
        {
          "variation": "* @fileoverview ChatGPT-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview ChatGPT-Buddy Client Example"
        },
        {
          "variation": "* @description Example usage of the ChatGPT-Buddy",
          "line": 3,
          "column": 2,
          "context": "code",
          "lineText": "* @description Example usage of the ChatGPT-Buddy client SDK"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 7,
          "column": 16,
          "context": "code",
          "lineText": "import { createChatGPTBuddyClient, ChatGPTBuddyClientConfig } from './chatgpt-buddy-client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 7,
          "column": 36,
          "context": "code",
          "lineText": "import { createChatGPTBuddyClient, ChatGPTBuddyClientConfig } from './chatgpt-buddy-client';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 7,
          "column": 71,
          "context": "string",
          "lineText": "import { createChatGPTBuddyClient, ChatGPTBuddyClientConfig } from './chatgpt-buddy-client';"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 10,
          "column": 15,
          "context": "code",
          "lineText": "const config: ChatGPTBuddyClientConfig = {"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 19,
          "column": 19,
          "context": "string",
          "lineText": "console.log('🤖 ChatGPT-Buddy Client Demo');"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 24,
          "column": 34,
          "context": "string",
          "lineText": "console.log('1. Initializing ChatGPT-Buddy client...');"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 25,
          "column": 32,
          "context": "code",
          "lineText": "const client = await createChatGPTBuddyClient(config);"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 138,
          "column": 32,
          "context": "code",
          "lineText": "const client = await createChatGPTBuddyClient(config);"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 197,
          "column": 16,
          "context": "code",
          "lineText": "export { createChatGPTBuddyClient, main };"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/google.com/src/google-buddy-client.ts",
      "occurrenceCount": 10,
      "references": [
        {
          "variation": "* @fileoverview Backward-compatible Google Buddy",
          "line": 18,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Backward-compatible Google Buddy client"
        },
        {
          "variation": "* @module google-buddy",
          "line": 20,
          "column": 2,
          "context": "code",
          "lineText": "* @module google-buddy-client"
        },
        {
          "variation": "* Configuration for GoogleBuddy",
          "line": 46,
          "column": 2,
          "context": "code",
          "lineText": "* Configuration for GoogleBuddyClient"
        },
        {
          "variation": "GoogleBuddy",
          "line": 48,
          "column": 18,
          "context": "code",
          "lineText": "export interface GoogleBuddyClientConfig {"
        },
        {
          "variation": "GoogleBuddy",
          "line": 63,
          "column": 14,
          "context": "code",
          "lineText": "export class GoogleBuddyClient {"
        },
        {
          "variation": "GoogleBuddy",
          "line": 67,
          "column": 23,
          "context": "code",
          "lineText": "constructor(config: GoogleBuddyClientConfig) {"
        },
        {
          "variation": "google-buddy",
          "line": 74,
          "column": 18,
          "context": "string",
          "lineText": "clientId: 'google-buddy-legacy-client'"
        },
        {
          "variation": "* Legacy WebBuddy",
          "line": 292,
          "column": 4,
          "context": "code",
          "lineText": "* Legacy WebBuddyClient compatibility"
        },
        {
          "variation": "WebBuddy",
          "line": 295,
          "column": 6,
          "context": "code",
          "lineText": "getWebBuddyClient(): any {"
        },
        {
          "variation": "WebBuddy",
          "line": 296,
          "column": 22,
          "context": "string",
          "lineText": "console.warn('getWebBuddyClient() is deprecated. Use getAdapter() instead.');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/chatgpt-background.ts",
      "occurrenceCount": 10,
      "references": [
        {
          "variation": "* @fileoverview ChatGPT-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview ChatGPT-Buddy Background Script"
        },
        {
          "variation": "* @description AI-enhanced background script extending Web-Buddy",
          "line": 3,
          "column": 2,
          "context": "code",
          "lineText": "* @description AI-enhanced background script extending Web-Buddy framework for ChatGPT automation"
        },
        {
          "variation": "@web-buddy",
          "line": 9,
          "column": 40,
          "context": "string",
          "lineText": "import { BackgroundApplication } from '@web-buddy/browser-extension';"
        },
        {
          "variation": "@web-buddy",
          "line": 15,
          "column": 9,
          "context": "string",
          "lineText": "} from '@web-buddy/browser-extension';"
        },
        {
          "variation": "* ChatGPT-specific background application extending Web-Buddy",
          "line": 25,
          "column": 2,
          "context": "code",
          "lineText": "* ChatGPT-specific background application extending Web-Buddy base functionality"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 31,
          "column": 15,
          "context": "string",
          "lineText": "['name', 'ChatGPT-Buddy Background Application'],"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 63,
          "column": 21,
          "context": "string",
          "lineText": "console.log('🤖 ChatGPT-Buddy Background Application initializing...');"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 315,
          "column": 34,
          "context": "string",
          "lineText": "console.log('🤖 Initializing ChatGPT-Buddy background application');"
        },
        {
          "variation": "// Initialize parent Web-Buddy",
          "line": 317,
          "column": 5,
          "context": "code",
          "lineText": "// Initialize parent Web-Buddy functionality"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 323,
          "column": 20,
          "context": "string",
          "lineText": "console.log('✅ ChatGPT-Buddy background application initialized');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/src/messages/base.ts",
      "occurrenceCount": 10,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": "* Base interface for all Web-Buddy",
          "line": 23,
          "column": 2,
          "context": "code",
          "lineText": "* Base interface for all Web-Buddy messages"
        },
        {
          "variation": "WebBuddy",
          "line": 26,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyMessage {"
        },
        {
          "variation": "* Abstract base class for all Web-Buddy",
          "line": 36,
          "column": 2,
          "context": "code",
          "lineText": "* Abstract base class for all Web-Buddy messages"
        },
        {
          "variation": "WebBuddy",
          "line": 39,
          "column": 46,
          "context": "code",
          "lineText": "export abstract class BaseMessage implements WebBuddyMessage {"
        },
        {
          "variation": "web-buddy",
          "line": 57,
          "column": 13,
          "context": "string",
          "lineText": "return `web-buddy-${Date.now()}-${uuidv4().substr(0, 8)}`;"
        },
        {
          "variation": "WebBuddy",
          "line": 63,
          "column": 13,
          "context": "code",
          "lineText": "toJSON(): WebBuddyMessage {"
        },
        {
          "variation": "WebBuddy",
          "line": 77,
          "column": 25,
          "context": "code",
          "lineText": "static fromJSON(data: WebBuddyMessage): BaseMessage {"
        },
        {
          "variation": "* Interface for message handlers that process Web-Buddy",
          "line": 84,
          "column": 2,
          "context": "code",
          "lineText": "* Interface for message handlers that process Web-Buddy messages"
        },
        {
          "variation": "WebBuddy",
          "line": 87,
          "column": 19,
          "context": "code",
          "lineText": "handle(message: WebBuddyMessage): Promise<any>;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/training/application/training-application.js",
      "occurrenceCount": 10,
      "references": [
        {
          "variation": "ChatGPTBuddy",
          "line": 48,
          "column": 5,
          "context": "code",
          "lineText": "let ChatGPTBuddyTrainingApplication = (() => {"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 54,
          "column": 9,
          "context": "code",
          "lineText": "var ChatGPTBuddyTrainingApplication = _classThis = class extends _classSuper {"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 58,
          "column": 27,
          "context": "string",
          "lineText": "['name', 'ChatGPTBuddyTraining'],"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 101,
          "column": 30,
          "context": "string",
          "lineText": "console.log('ChatGPT Buddy Training Application started', {"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 127,
          "column": 26,
          "context": "string",
          "lineText": "console.log('ChatGPT Buddy Training Application stopped');"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 414,
          "column": 36,
          "context": "string",
          "lineText": "__setFunctionName(_classThis, \"ChatGPTBuddyTrainingApplication\");"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 418,
          "column": 9,
          "context": "code",
          "lineText": "ChatGPTBuddyTrainingApplication = _classThis = _classDescriptor.value;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 422,
          "column": 12,
          "context": "code",
          "lineText": "return ChatGPTBuddyTrainingApplication = _classThis;"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 424,
          "column": 10,
          "context": "code",
          "lineText": "export { ChatGPTBuddyTrainingApplication };"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 426,
          "column": 40,
          "context": "code",
          "lineText": "export const trainingApplication = new ChatGPTBuddyTrainingApplication();"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/getting-started/README.org",
      "occurrenceCount": 10,
      "references": [
        {
          "variation": "* Migration from Web-Buddy",
          "line": 409,
          "column": 1,
          "context": "code",
          "lineText": "* Migration from Web-Buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 411,
          "column": 37,
          "context": "string",
          "lineText": "If you're migrating from the legacy Web-Buddy framework:"
        },
        {
          "variation": "// Old Web-Buddy",
          "line": 426,
          "column": 1,
          "context": "code",
          "lineText": "// Old Web-Buddy code"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 427,
          "column": 10,
          "context": "code",
          "lineText": "import { ChatGPTBuddyClient } from 'chatgpt-buddy';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 427,
          "column": 37,
          "context": "string",
          "lineText": "import { ChatGPTBuddyClient } from 'chatgpt-buddy';"
        },
        {
          "variation": "// Was: new ChatGPTBuddy",
          "line": 433,
          "column": 37,
          "context": "code",
          "lineText": "const client = new ChatGPTClient(); // Was: new ChatGPTBuddyClient()"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 466,
          "column": 18,
          "context": "code",
          "lineText": "- Search [[https://github.com/rydnr/chatgpt-buddy/issues][GitHub Issues]]"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 467,
          "column": 18,
          "context": "code",
          "lineText": "- Ask in [[https://github.com/rydnr/chatgpt-buddy/discussions][GitHub Discussions]]"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 486,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy][GitHub Repository]]"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 487,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy/discussions][Community Discussions]]"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/content_script.ts",
      "occurrenceCount": 9,
      "references": [
        {
          "variation": "// Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "// Web-Buddy content script for DOM automation"
        },
        {
          "variation": "webBuddy",
          "line": 4,
          "column": 10,
          "context": "code",
          "lineText": "import { webBuddyStorage, AutomationPattern, UserInteraction } from './storage';"
        },
        {
          "variation": "webBuddy",
          "line": 96,
          "column": 11,
          "context": "code",
          "lineText": "await webBuddyStorage.saveAutomationPattern(pattern);"
        },
        {
          "variation": "webBuddy",
          "line": 123,
          "column": 11,
          "context": "code",
          "lineText": "await webBuddyStorage.saveUserInteraction(interaction);"
        },
        {
          "variation": "webBuddy",
          "line": 180,
          "column": 34,
          "context": "code",
          "lineText": "const existingPatterns = await webBuddyStorage.getAutomationPatterns({"
        },
        {
          "variation": "webBuddy",
          "line": 419,
          "column": 29,
          "context": "code",
          "lineText": "const stats = await webBuddyStorage.getStorageStats();"
        },
        {
          "variation": "webBuddy",
          "line": 428,
          "column": 32,
          "context": "code",
          "lineText": "const patterns = await webBuddyStorage.getAutomationPatterns({"
        },
        {
          "variation": "webBuddy",
          "line": 440,
          "column": 15,
          "context": "code",
          "lineText": "await webBuddyStorage.clearOldData(payload.days || 30);"
        },
        {
          "variation": "Web-Buddy",
          "line": 587,
          "column": 17,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy content script loaded on:', window.location.href);"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/plugins/plugin-registry.ts",
      "occurrenceCount": 9,
      "references": [
        {
          "variation": "* @fileoverview Plugin Registry implementation for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Registry implementation for Web-Buddy plugin system"
        },
        {
          "variation": "WebBuddy",
          "line": 7,
          "column": 3,
          "context": "code",
          "lineText": "WebBuddyPlugin,"
        },
        {
          "variation": "WebBuddy",
          "line": 26,
          "column": 11,
          "context": "code",
          "lineText": "plugin: WebBuddyPlugin;"
        },
        {
          "variation": "WebBuddy",
          "line": 76,
          "column": 26,
          "context": "code",
          "lineText": "async register(plugin: WebBuddyPlugin, manifest: PluginManifest, context: PluginContext): Promise<void> {"
        },
        {
          "variation": "WebBuddy",
          "line": 182,
          "column": 32,
          "context": "code",
          "lineText": "getPlugin(pluginId: string): WebBuddyPlugin | null {"
        },
        {
          "variation": "WebBuddy",
          "line": 197,
          "column": 20,
          "context": "code",
          "lineText": "getAllPlugins(): WebBuddyPlugin[] {"
        },
        {
          "variation": "WebBuddy",
          "line": 204,
          "column": 39,
          "context": "code",
          "lineText": "getPluginsByDomain(domain: string): WebBuddyPlugin[] {"
        },
        {
          "variation": "WebBuddy",
          "line": 215,
          "column": 42,
          "context": "code",
          "lineText": "getPluginsByState(state: PluginState): WebBuddyPlugin[] {"
        },
        {
          "variation": "WebBuddy",
          "line": 582,
          "column": 34,
          "context": "code",
          "lineText": "private validatePlugin(plugin: WebBuddyPlugin, manifest: PluginManifest): void {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/content_script_old.js",
      "occurrenceCount": 9,
      "references": [
        {
          "variation": "// Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "// Web-Buddy content script for DOM automation"
        },
        {
          "variation": "webBuddy",
          "line": 3,
          "column": 10,
          "context": "code",
          "lineText": "import { webBuddyStorage } from './storage';"
        },
        {
          "variation": "webBuddy",
          "line": 68,
          "column": 15,
          "context": "code",
          "lineText": "await webBuddyStorage.saveAutomationPattern(pattern);"
        },
        {
          "variation": "webBuddy",
          "line": 94,
          "column": 15,
          "context": "code",
          "lineText": "await webBuddyStorage.saveUserInteraction(interaction);"
        },
        {
          "variation": "webBuddy",
          "line": 119,
          "column": 36,
          "context": "code",
          "lineText": "const existingPatterns = await webBuddyStorage.getAutomationPatterns({"
        },
        {
          "variation": "webBuddy",
          "line": 326,
          "column": 37,
          "context": "code",
          "lineText": "const stats = await webBuddyStorage.getStorageStats();"
        },
        {
          "variation": "webBuddy",
          "line": 334,
          "column": 40,
          "context": "code",
          "lineText": "const patterns = await webBuddyStorage.getAutomationPatterns({"
        },
        {
          "variation": "webBuddy",
          "line": 345,
          "column": 23,
          "context": "code",
          "lineText": "await webBuddyStorage.clearOldData(payload.days || 30);"
        },
        {
          "variation": "Web-Buddy",
          "line": 388,
          "column": 17,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy content script loaded on:', window.location.href);"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/content_script.js",
      "occurrenceCount": 9,
      "references": [
        {
          "variation": "// Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "// Web-Buddy content script for DOM automation"
        },
        {
          "variation": "webBuddy",
          "line": 3,
          "column": 10,
          "context": "code",
          "lineText": "import { webBuddyStorage } from './storage';"
        },
        {
          "variation": "webBuddy",
          "line": 89,
          "column": 15,
          "context": "code",
          "lineText": "await webBuddyStorage.saveAutomationPattern(pattern);"
        },
        {
          "variation": "webBuddy",
          "line": 115,
          "column": 15,
          "context": "code",
          "lineText": "await webBuddyStorage.saveUserInteraction(interaction);"
        },
        {
          "variation": "webBuddy",
          "line": 168,
          "column": 36,
          "context": "code",
          "lineText": "const existingPatterns = await webBuddyStorage.getAutomationPatterns({"
        },
        {
          "variation": "webBuddy",
          "line": 375,
          "column": 37,
          "context": "code",
          "lineText": "const stats = await webBuddyStorage.getStorageStats();"
        },
        {
          "variation": "webBuddy",
          "line": 383,
          "column": 40,
          "context": "code",
          "lineText": "const patterns = await webBuddyStorage.getAutomationPatterns({"
        },
        {
          "variation": "webBuddy",
          "line": 394,
          "column": 23,
          "context": "code",
          "lineText": "await webBuddyStorage.clearOldData(payload.days || 30);"
        },
        {
          "variation": "Web-Buddy",
          "line": 526,
          "column": 17,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy content script loaded on:', window.location.href);"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/chatgpt-background.js",
      "occurrenceCount": 9,
      "references": [
        {
          "variation": "* @fileoverview ChatGPT-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview ChatGPT-Buddy Background Script"
        },
        {
          "variation": "* @description AI-enhanced background script extending Web-Buddy",
          "line": 3,
          "column": 2,
          "context": "code",
          "lineText": "* @description AI-enhanced background script extending Web-Buddy framework for ChatGPT automation"
        },
        {
          "variation": "@web-buddy",
          "line": 46,
          "column": 40,
          "context": "string",
          "lineText": "import { BackgroundApplication } from '@web-buddy/browser-extension';"
        },
        {
          "variation": "* ChatGPT-specific background application extending Web-Buddy",
          "line": 50,
          "column": 2,
          "context": "code",
          "lineText": "* ChatGPT-specific background application extending Web-Buddy base functionality"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 68,
          "column": 27,
          "context": "string",
          "lineText": "['name', 'ChatGPT-Buddy Background Application'],"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 96,
          "column": 29,
          "context": "string",
          "lineText": "console.log('🤖 ChatGPT-Buddy Background Application initializing...');"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 298,
          "column": 42,
          "context": "string",
          "lineText": "console.log('🤖 Initializing ChatGPT-Buddy background application');"
        },
        {
          "variation": "// Initialize parent Web-Buddy",
          "line": 299,
          "column": 13,
          "context": "code",
          "lineText": "// Initialize parent Web-Buddy functionality"
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 303,
          "column": 28,
          "context": "string",
          "lineText": "console.log('✅ ChatGPT-Buddy background application initialized');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/extension.d.ts",
      "occurrenceCount": 8,
      "references": [
        {
          "variation": "* Configuration for the Web-Buddy",
          "line": 3,
          "column": 2,
          "context": "code",
          "lineText": "* Configuration for the Web-Buddy extension"
        },
        {
          "variation": "WebBuddy",
          "line": 5,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyExtensionConfig {"
        },
        {
          "variation": "* Generic Web-Buddy",
          "line": 13,
          "column": 2,
          "context": "code",
          "lineText": "* Generic Web-Buddy extension that handles browser-side automation"
        },
        {
          "variation": "WebBuddy",
          "line": 17,
          "column": 22,
          "context": "code",
          "lineText": "export declare class WebBuddyExtension {"
        },
        {
          "variation": "WebBuddy",
          "line": 27,
          "column": 25,
          "context": "code",
          "lineText": "constructor(config: WebBuddyExtensionConfig);"
        },
        {
          "variation": "* Connects to the Web-Buddy",
          "line": 47,
          "column": 6,
          "context": "code",
          "lineText": "* Connects to the Web-Buddy server"
        },
        {
          "variation": "* Disconnects from the Web-Buddy",
          "line": 51,
          "column": 6,
          "context": "code",
          "lineText": "* Disconnects from the Web-Buddy server"
        },
        {
          "variation": "WebBuddy",
          "line": 141,
          "column": 28,
          "context": "code",
          "lineText": "constructor(extension: WebBuddyExtension);"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/messages/base.d.ts",
      "occurrenceCount": 8,
      "references": [
        {
          "variation": "* Base interface for all Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* Base interface for all Web-Buddy messages"
        },
        {
          "variation": "WebBuddy",
          "line": 5,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyMessage {"
        },
        {
          "variation": "* Abstract base class for all Web-Buddy",
          "line": 14,
          "column": 2,
          "context": "code",
          "lineText": "* Abstract base class for all Web-Buddy messages"
        },
        {
          "variation": "WebBuddy",
          "line": 17,
          "column": 54,
          "context": "code",
          "lineText": "export declare abstract class BaseMessage implements WebBuddyMessage {"
        },
        {
          "variation": "WebBuddy",
          "line": 32,
          "column": 15,
          "context": "code",
          "lineText": "toJSON(): WebBuddyMessage;"
        },
        {
          "variation": "WebBuddy",
          "line": 36,
          "column": 27,
          "context": "code",
          "lineText": "static fromJSON(data: WebBuddyMessage): BaseMessage;"
        },
        {
          "variation": "* Interface for message handlers that process Web-Buddy",
          "line": 39,
          "column": 2,
          "context": "code",
          "lineText": "* Interface for message handlers that process Web-Buddy messages"
        },
        {
          "variation": "WebBuddy",
          "line": 42,
          "column": 21,
          "context": "code",
          "lineText": "handle(message: WebBuddyMessage): Promise<any>;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/README.org",
      "occurrenceCount": 8,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 16,
          "column": 56,
          "context": "code",
          "lineText": "- [[file:migration-guide/README.org][📦 Migration from Web-Buddy]] - Seamless transition guide"
        },
        {
          "variation": "Web-Buddy",
          "line": 236,
          "column": 67,
          "context": "code",
          "lineText": "1. [[file:migration-guide/README.org][📦 Migration Guide]] - From Web-Buddy to Semantest"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 254,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy/discussions][💬 GitHub Discussions]] - Community Q&A and ideas"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 255,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy/issues][🐛 GitHub Issues]] - Bug reports and feature requests"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 260,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy][⭐ Star the Project]] - Show your support"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 264,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy/releases][📢 Release Notes]] - Latest updates and features"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 265,
          "column": 11,
          "context": "code",
          "lineText": "- [[https://github.com/rydnr/chatgpt-buddy/discussions][💬 Discussions]] - Community updates and announcements"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 276,
          "column": 17,
          "context": "code",
          "lineText": "See the [[https://github.com/rydnr/chatgpt-buddy/blob/main/LICENSE][LICENSE]] file for complete terms."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/typescript/src/event-driven-client.ts",
      "occurrenceCount": 7,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        },
        {
          "variation": "* Event-Driven Web-Buddy",
          "line": 50,
          "column": 2,
          "context": "code",
          "lineText": "* Event-Driven Web-Buddy Client"
        },
        {
          "variation": "* Pure event-driven interface following the Web-Buddy",
          "line": 52,
          "column": 2,
          "context": "code",
          "lineText": "* Pure event-driven interface following the Web-Buddy Framework's EDA principles."
        },
        {
          "variation": "WebBuddy",
          "line": 55,
          "column": 25,
          "context": "code",
          "lineText": "export class EventDrivenWebBuddyClient {"
        },
        {
          "variation": "// Create the dispatch payload in Web-Buddy",
          "line": 81,
          "column": 13,
          "context": "code",
          "lineText": "// Create the dispatch payload in Web-Buddy format"
        },
        {
          "variation": "WebBuddy",
          "line": 514,
          "column": 53,
          "context": "string",
          "lineText": "'User-Agent': this.config.userAgent || 'WebBuddyEventDrivenSDK/1.0.0'"
        },
        {
          "variation": "WebBuddy",
          "line": 630,
          "column": 27,
          "context": "code",
          "lineText": "export default EventDrivenWebBuddyClient;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/src/google-images-downloader.ts",
      "occurrenceCount": 7,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 7,
          "column": 50,
          "context": "code",
          "lineText": "one of the matching images locally using the Web-Buddy framework."
        },
        {
          "variation": "WebBuddy",
          "line": 10,
          "column": 21,
          "context": "code",
          "lineText": "import { EventDrivenWebBuddyClient } from '../typescript/src/event-driven-client';"
        },
        {
          "variation": ".WEBBUDDY",
          "line": 20,
          "column": 25,
          "context": "code",
          "lineText": "baseUrl: process.env.WEBBUDDY_SERVER_URL || 'http://localhost:3000',"
        },
        {
          "variation": ".WEBBUDDY",
          "line": 21,
          "column": 24,
          "context": "code",
          "lineText": "apiKey: process.env.WEBBUDDY_API_KEY || 'test-api-key',"
        },
        {
          "variation": ".WEBBUDDY",
          "line": 22,
          "column": 29,
          "context": "code",
          "lineText": "extensionId: process.env.WEBBUDDY_EXTENSION_ID || 'test-extension-id',"
        },
        {
          "variation": "WebBuddy",
          "line": 28,
          "column": 31,
          "context": "code",
          "lineText": "const client = new EventDrivenWebBuddyClient(config);"
        },
        {
          "variation": "Web-Buddy",
          "line": 41,
          "column": 48,
          "context": "string",
          "lineText": "throw new Error('Cannot connect to Web-Buddy server. Make sure it\\'s running on ' + config.baseUrl);"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/downloads/infrastructure/adapters/google-images-content-adapter.ts",
      "occurrenceCount": 7,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        },
        {
          "variation": "web-buddy",
          "line": 145,
          "column": 32,
          "context": "string",
          "lineText": "container.className = 'web-buddy-download-container';"
        },
        {
          "variation": "Web-Buddy",
          "line": 166,
          "column": 45,
          "context": "string",
          "lineText": "button.title = 'Download Image with Web-Buddy';"
        },
        {
          "variation": "web-buddy",
          "line": 167,
          "column": 29,
          "context": "string",
          "lineText": "button.className = 'web-buddy-download-btn';"
        },
        {
          "variation": "web-buddy",
          "line": 285,
          "column": 27,
          "context": "string",
          "lineText": "menu.className = 'web-buddy-context-menu';"
        },
        {
          "variation": "Web-Buddy",
          "line": 299,
          "column": 54,
          "context": "string",
          "lineText": "downloadOption.innerHTML = '📥 Download with Web-Buddy';"
        },
        {
          "variation": "web-buddy",
          "line": 514,
          "column": 56,
          "context": "string",
          "lineText": "const containers = document.querySelectorAll('.web-buddy-download-container');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/client.d.ts",
      "occurrenceCount": 7,
      "references": [
        {
          "variation": "WebBuddy",
          "line": 1,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyEvent } from './events/base';"
        },
        {
          "variation": "* Configuration interface for WebBuddy",
          "line": 3,
          "column": 2,
          "context": "code",
          "lineText": "* Configuration interface for WebBuddyClient"
        },
        {
          "variation": "WebBuddy",
          "line": 5,
          "column": 18,
          "context": "code",
          "lineText": "export interface WebBuddyClientConfig {"
        },
        {
          "variation": "* Generic Web-Buddy",
          "line": 13,
          "column": 2,
          "context": "code",
          "lineText": "* Generic Web-Buddy client that provides low-level event-driven API"
        },
        {
          "variation": "WebBuddy",
          "line": 17,
          "column": 22,
          "context": "code",
          "lineText": "export declare class WebBuddyClient {"
        },
        {
          "variation": "WebBuddy",
          "line": 22,
          "column": 25,
          "context": "code",
          "lineText": "constructor(config: WebBuddyClientConfig);"
        },
        {
          "variation": "WebBuddy",
          "line": 31,
          "column": 22,
          "context": "code",
          "lineText": "sendEvent(event: WebBuddyEvent | Record<string, any>, options?: {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/downloads/infrastructure/adapters/google-images-content-adapter.js",
      "occurrenceCount": 7,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        },
        {
          "variation": "web-buddy",
          "line": 122,
          "column": 32,
          "context": "string",
          "lineText": "container.className = 'web-buddy-download-container';"
        },
        {
          "variation": "Web-Buddy",
          "line": 140,
          "column": 45,
          "context": "string",
          "lineText": "button.title = 'Download Image with Web-Buddy';"
        },
        {
          "variation": "web-buddy",
          "line": 141,
          "column": 29,
          "context": "string",
          "lineText": "button.className = 'web-buddy-download-btn';"
        },
        {
          "variation": "web-buddy",
          "line": 242,
          "column": 27,
          "context": "string",
          "lineText": "menu.className = 'web-buddy-context-menu';"
        },
        {
          "variation": "Web-Buddy",
          "line": 255,
          "column": 54,
          "context": "string",
          "lineText": "downloadOption.innerHTML = '📥 Download with Web-Buddy';"
        },
        {
          "variation": "web-buddy",
          "line": 439,
          "column": 56,
          "context": "string",
          "lineText": "const containers = document.querySelectorAll('.web-buddy-download-container');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/client.js",
      "occurrenceCount": 7,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 3,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": ".WebBuddy",
          "line": 21,
          "column": 8,
          "context": "code",
          "lineText": "exports.WebBuddyClient = void 0;"
        },
        {
          "variation": "* Generic Web-Buddy",
          "line": 25,
          "column": 2,
          "context": "code",
          "lineText": "* Generic Web-Buddy client that provides low-level event-driven API"
        },
        {
          "variation": "WebBuddy",
          "line": 29,
          "column": 7,
          "context": "code",
          "lineText": "class WebBuddyClient {"
        },
        {
          "variation": "web-buddy",
          "line": 215,
          "column": 17,
          "context": "string",
          "lineText": "return `web-buddy-${Date.now()}-${(0, uuid_1.v4)().substr(0, 8)}`;"
        },
        {
          "variation": ".WebBuddy",
          "line": 266,
          "column": 8,
          "context": "code",
          "lineText": "exports.WebBuddyClient = WebBuddyClient;"
        },
        {
          "variation": "WebBuddy",
          "line": 266,
          "column": 26,
          "context": "code",
          "lineText": "exports.WebBuddyClient = WebBuddyClient;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/src/server/server-application.ts",
      "occurrenceCount": 6,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        },
        {
          "variation": "Web-Buddy",
          "line": 38,
          "column": 15,
          "context": "string",
          "lineText": "['name', 'Web-Buddy Node.js Server'],"
        },
        {
          "variation": "Web-Buddy",
          "line": 58,
          "column": 30,
          "context": "string",
          "lineText": "console.log(`🚀 Starting Web-Buddy Node.js Server on port ${event.port}`);"
        },
        {
          "variation": "Web-Buddy",
          "line": 73,
          "column": 22,
          "context": "string",
          "lineText": "console.log('✅ Web-Buddy Node.js Server started successfully');"
        },
        {
          "variation": "Web-Buddy",
          "line": 93,
          "column": 30,
          "context": "string",
          "lineText": "console.log('🛑 Stopping Web-Buddy Node.js Server...');"
        },
        {
          "variation": "Web-Buddy",
          "line": 108,
          "column": 22,
          "context": "string",
          "lineText": "console.log('✅ Web-Buddy Node.js Server stopped successfully');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/server/server-application.js",
      "occurrenceCount": 6,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 5,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        },
        {
          "variation": "Web-Buddy",
          "line": 35,
          "column": 23,
          "context": "string",
          "lineText": "['name', 'Web-Buddy Node.js Server'],"
        },
        {
          "variation": "Web-Buddy",
          "line": 51,
          "column": 34,
          "context": "string",
          "lineText": "console.log(`🚀 Starting Web-Buddy Node.js Server on port ${event.port}`);"
        },
        {
          "variation": "Web-Buddy",
          "line": 61,
          "column": 28,
          "context": "string",
          "lineText": "console.log('✅ Web-Buddy Node.js Server started successfully');"
        },
        {
          "variation": "Web-Buddy",
          "line": 78,
          "column": 34,
          "context": "string",
          "lineText": "console.log('🛑 Stopping Web-Buddy Node.js Server...');"
        },
        {
          "variation": "Web-Buddy",
          "line": 88,
          "column": 28,
          "context": "string",
          "lineText": "console.log('✅ Web-Buddy Node.js Server stopped successfully');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/server.js",
      "occurrenceCount": 6,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 3,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": ".WebBuddy",
          "line": 21,
          "column": 8,
          "context": "code",
          "lineText": "exports.WebBuddyServer = void 0;"
        },
        {
          "variation": "* Generic Web-Buddy",
          "line": 25,
          "column": 2,
          "context": "code",
          "lineText": "* Generic Web-Buddy server that provides event routing infrastructure"
        },
        {
          "variation": "WebBuddy",
          "line": 29,
          "column": 7,
          "context": "code",
          "lineText": "class WebBuddyServer {"
        },
        {
          "variation": ".WebBuddy",
          "line": 322,
          "column": 8,
          "context": "code",
          "lineText": "exports.WebBuddyServer = WebBuddyServer;"
        },
        {
          "variation": "WebBuddy",
          "line": 322,
          "column": 26,
          "context": "code",
          "lineText": "exports.WebBuddyServer = WebBuddyServer;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/api-reference/README.org",
      "occurrenceCount": 6,
      "references": [
        {
          "variation": "// Legacy GoogleBuddy",
          "line": 290,
          "column": 1,
          "context": "code",
          "lineText": "// Legacy GoogleBuddyClient interface remains available"
        },
        {
          "variation": "GoogleBuddy",
          "line": 291,
          "column": 14,
          "context": "code",
          "lineText": "export class GoogleBuddyClient {"
        },
        {
          "variation": "** WebBuddy",
          "line": 682,
          "column": 1,
          "context": "code",
          "lineText": "** WebBuddyServer"
        },
        {
          "variation": "WebBuddy",
          "line": 685,
          "column": 14,
          "context": "code",
          "lineText": "export class WebBuddyServer {"
        },
        {
          "variation": "/web-buddy",
          "line": 923,
          "column": 22,
          "context": "code",
          "lineText": "- [[file:../migration/web-buddy-to-semantest.org][Web-Buddy to Semantest Migration]]"
        },
        {
          "variation": "Web-Buddy",
          "line": 923,
          "column": 51,
          "context": "code",
          "lineText": "- [[file:../migration/web-buddy-to-semantest.org][Web-Buddy to Semantest Migration]]"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/storage.ts",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "// IndexedDB Storage Manager for Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "// IndexedDB Storage Manager for Web-Buddy"
        },
        {
          "variation": "WebBuddy",
          "line": 37,
          "column": 7,
          "context": "code",
          "lineText": "class WebBuddyStorage {"
        },
        {
          "variation": "WebBuddy",
          "line": 39,
          "column": 31,
          "context": "string",
          "lineText": "private readonly DB_NAME = 'WebBuddyDB';"
        },
        {
          "variation": "webBuddy",
          "line": 442,
          "column": 14,
          "context": "code",
          "lineText": "export const webBuddyStorage = new WebBuddyStorage();"
        },
        {
          "variation": "WebBuddy",
          "line": 442,
          "column": 36,
          "context": "code",
          "lineText": "export const webBuddyStorage = new WebBuddyStorage();"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/background.ts",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "// Browser extension background script for Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "// Browser extension background script for Web-Buddy integration"
        },
        {
          "variation": "// Handles WebSocket communication with Web-Buddy",
          "line": 2,
          "column": 1,
          "context": "code",
          "lineText": "// Handles WebSocket communication with Web-Buddy server"
        },
        {
          "variation": "Web-Buddy",
          "line": 51,
          "column": 33,
          "context": "string",
          "lineText": "console.log('✅ Connected to Web-Buddy server');"
        },
        {
          "variation": "Web-Buddy",
          "line": 672,
          "column": 19,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy extension installed');"
        },
        {
          "variation": "Web-Buddy",
          "line": 676,
          "column": 19,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy extension starting up');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/training/application/training-application.ts",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "ChatGPTBuddy",
          "line": 46,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyTrainingApplication extends Application {"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 48,
          "column": 15,
          "context": "string",
          "lineText": "['name', 'ChatGPTBuddyTraining'],"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 107,
          "column": 20,
          "context": "string",
          "lineText": "console.log('ChatGPT Buddy Training Application started', {"
        },
        {
          "variation": "ChatGPT Buddy",
          "line": 138,
          "column": 18,
          "context": "string",
          "lineText": "console.log('ChatGPT Buddy Training Application stopped');"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 535,
          "column": 40,
          "context": "code",
          "lineText": "export const trainingApplication = new ChatGPTBuddyTrainingApplication();"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/plugins/plugin-loader.ts",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "* @fileoverview Plugin Loader implementation for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Loader implementation for Web-Buddy plugin system"
        },
        {
          "variation": "WebBuddy",
          "line": 7,
          "column": 3,
          "context": "code",
          "lineText": "WebBuddyPlugin,"
        },
        {
          "variation": "WebBuddy",
          "line": 34,
          "column": 11,
          "context": "code",
          "lineText": "plugin: WebBuddyPlugin;"
        },
        {
          "variation": "WebBuddy",
          "line": 339,
          "column": 101,
          "context": "code",
          "lineText": "private async createPluginInstance(manifest: PluginManifest, options: PluginLoadOptions): Promise<WebBuddyPlugin> {"
        },
        {
          "variation": "WebBuddy",
          "line": 475,
          "column": 48,
          "context": "code",
          "lineText": "private async validatePluginInstance(plugin: WebBuddyPlugin, manifest: PluginManifest): Promise<void> {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/chatgpt.com/src/compatibility/chatgpt-buddy-compat.ts",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "* @fileoverview ChatGPT Buddy",
          "line": 21,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview ChatGPT Buddy backward compatibility wrapper"
        },
        {
          "variation": "* @description Maintains the original ChatGPTBuddy",
          "line": 22,
          "column": 2,
          "context": "code",
          "lineText": "* @description Maintains the original ChatGPTBuddyClient API while using new TypeScript-EDA foundation"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 33,
          "column": 19,
          "context": "string",
          "lineText": "`[DEPRECATED] ChatGPTBuddyClient.${methodName} is deprecated and will be removed in v3.0.0.\\n` +"
        },
        {
          "variation": "* Backward compatibility wrapper for ChatGPTBuddy",
          "line": 98,
          "column": 2,
          "context": "code",
          "lineText": "* Backward compatibility wrapper for ChatGPTBuddyClient"
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 103,
          "column": 14,
          "context": "code",
          "lineText": "export class ChatGPTBuddyClient {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/src/client.test.ts",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": "WebBuddy",
          "line": 20,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyClient } from './client';"
        },
        {
          "variation": "WebBuddy",
          "line": 25,
          "column": 11,
          "context": "string",
          "lineText": "describe('WebBuddyClient', () => {"
        },
        {
          "variation": "WebBuddy",
          "line": 26,
          "column": 15,
          "context": "code",
          "lineText": "let client: WebBuddyClient;"
        },
        {
          "variation": "WebBuddy",
          "line": 30,
          "column": 18,
          "context": "code",
          "lineText": "client = new WebBuddyClient({"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/tests/contract-integration.test.js",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "* @description Tests for contract discovery and execution in Web-Buddy",
          "line": 3,
          "column": 2,
          "context": "code",
          "lineText": "* @description Tests for contract discovery and execution in Web-Buddy extension"
        },
        {
          "variation": "\"web-buddy",
          "line": 93,
          "column": 38,
          "context": "string",
          "lineText": "if (selector === 'meta[name^=\"web-buddy-contract\"]') {"
        },
        {
          "variation": "WebBuddy",
          "line": 115,
          "column": 21,
          "context": "string",
          "lineText": "'@type': 'WebBuddyContract',"
        },
        {
          "variation": "WebBuddy",
          "line": 142,
          "column": 40,
          "context": "string",
          "lineText": "expect(result[0]['@type']).toBe('WebBuddyContract');"
        },
        {
          "variation": "\"web-buddy",
          "line": 153,
          "column": 38,
          "context": "string",
          "lineText": "if (selector === 'meta[name^=\"web-buddy-contract\"]') {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/storage.js",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "// IndexedDB Storage Manager for Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "// IndexedDB Storage Manager for Web-Buddy"
        },
        {
          "variation": "WebBuddy",
          "line": 3,
          "column": 7,
          "context": "code",
          "lineText": "class WebBuddyStorage {"
        },
        {
          "variation": "WebBuddy",
          "line": 6,
          "column": 25,
          "context": "string",
          "lineText": "this.DB_NAME = 'WebBuddyDB';"
        },
        {
          "variation": "webBuddy",
          "line": 332,
          "column": 14,
          "context": "code",
          "lineText": "export const webBuddyStorage = new WebBuddyStorage();"
        },
        {
          "variation": "WebBuddy",
          "line": 332,
          "column": 36,
          "context": "code",
          "lineText": "export const webBuddyStorage = new WebBuddyStorage();"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/background_complex.js",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "// Browser extension background script for Web-Buddy",
          "line": 2,
          "column": 1,
          "context": "code",
          "lineText": "// Browser extension background script for Web-Buddy integration"
        },
        {
          "variation": "// Handles WebSocket communication with Web-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "// Handles WebSocket communication with Web-Buddy server"
        },
        {
          "variation": "Web-Buddy",
          "line": 46,
          "column": 37,
          "context": "string",
          "lineText": "console.log('✅ Connected to Web-Buddy server');"
        },
        {
          "variation": "Web-Buddy",
          "line": 396,
          "column": 21,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy extension installed');"
        },
        {
          "variation": "Web-Buddy",
          "line": 399,
          "column": 21,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy extension starting up');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/background_broken.js",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "// Browser extension background script for Web-Buddy",
          "line": 2,
          "column": 1,
          "context": "code",
          "lineText": "// Browser extension background script for Web-Buddy integration"
        },
        {
          "variation": "// Handles WebSocket communication with Web-Buddy",
          "line": 3,
          "column": 1,
          "context": "code",
          "lineText": "// Handles WebSocket communication with Web-Buddy server"
        },
        {
          "variation": "Web-Buddy",
          "line": 46,
          "column": 37,
          "context": "string",
          "lineText": "console.log('✅ Connected to Web-Buddy server');"
        },
        {
          "variation": "Web-Buddy",
          "line": 396,
          "column": 21,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy extension installed');"
        },
        {
          "variation": "Web-Buddy",
          "line": 399,
          "column": 21,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy extension starting up');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/background.js",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "// Browser extension background script for Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "// Browser extension background script for Web-Buddy integration"
        },
        {
          "variation": "// Handles WebSocket communication with Web-Buddy",
          "line": 2,
          "column": 1,
          "context": "code",
          "lineText": "// Handles WebSocket communication with Web-Buddy server"
        },
        {
          "variation": "Web-Buddy",
          "line": 43,
          "column": 37,
          "context": "string",
          "lineText": "console.log('✅ Connected to Web-Buddy server');"
        },
        {
          "variation": "Web-Buddy",
          "line": 533,
          "column": 21,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy extension installed');"
        },
        {
          "variation": "Web-Buddy",
          "line": 536,
          "column": 21,
          "context": "string",
          "lineText": "console.log('🚀 Web-Buddy extension starting up');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/package.json",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "@web-buddy",
          "line": 2,
          "column": 12,
          "context": "string",
          "lineText": "\"name\": \"@web-buddy/nodejs-server\","
        },
        {
          "variation": "\"Web-Buddy",
          "line": 29,
          "column": 13,
          "context": "code",
          "lineText": "\"author\": \"Web-Buddy Team\","
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 69,
          "column": 19,
          "context": "string",
          "lineText": "\"url\": \"https://github.com/rydnr/web-buddy-nodejs-server.git\""
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 72,
          "column": 19,
          "context": "string",
          "lineText": "\"url\": \"https://github.com/rydnr/web-buddy-nodejs-server/issues\""
        },
        {
          "variation": "//github.com/rydnr/web-buddy",
          "line": 74,
          "column": 22,
          "context": "string",
          "lineText": "\"homepage\": \"https://github.com/rydnr/web-buddy-nodejs-server#readme\","
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/package.json",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "chatgpt-buddy",
          "line": 2,
          "column": 13,
          "context": "string",
          "lineText": "\"name\": \"@chatgpt-buddy/extension\","
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 4,
          "column": 41,
          "context": "string",
          "lineText": "\"description\": \"Browser extension for ChatGPT-buddy - AI automation extension built on Web-Buddy framework\","
        },
        {
          "variation": "Web-Buddy",
          "line": 4,
          "column": 90,
          "context": "string",
          "lineText": "\"description\": \"Browser extension for ChatGPT-buddy - AI automation extension built on Web-Buddy framework\","
        },
        {
          "variation": "\"web-buddy",
          "line": 21,
          "column": 5,
          "context": "code",
          "lineText": "\"web-buddy\","
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 50,
          "column": 19,
          "context": "string",
          "lineText": "\"url\": \"https://github.com/rydnr/chatgpt-buddy.git\","
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/QUICK_START.md",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 33,
          "column": 12,
          "context": "code",
          "lineText": "- Uses the Web-Buddy client API"
        },
        {
          "variation": "### Option 3: Full Web-Buddy",
          "line": 45,
          "column": 1,
          "context": "code",
          "lineText": "### Option 3: Full Web-Buddy Integration"
        },
        {
          "variation": "# First, ensure the Web-Buddy",
          "line": 47,
          "column": 1,
          "context": "code",
          "lineText": "# First, ensure the Web-Buddy server is running"
        },
        {
          "variation": "Web-Buddy",
          "line": 55,
          "column": 21,
          "context": "code",
          "lineText": "- Uses the complete Web-Buddy framework"
        },
        {
          "variation": "Web-Buddy",
          "line": 84,
          "column": 10,
          "context": "code",
          "lineText": "- The Web-Buddy server isn't running"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/roadmap/01-cleanup-phase/README.md",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "WebBuddy",
          "line": 10,
          "column": 29,
          "context": "code",
          "lineText": "1. Complete rebranding from WebBuddy to Semantest"
        },
        {
          "variation": "WebBuddy",
          "line": 19,
          "column": 16,
          "context": "string",
          "lineText": "- Replace all \"WebBuddy\", \"web-buddy\", \"buddy\" references"
        },
        {
          "variation": "\"web-buddy",
          "line": 19,
          "column": 27,
          "context": "code",
          "lineText": "- Replace all \"WebBuddy\", \"web-buddy\", \"buddy\" references"
        },
        {
          "variation": "\"buddy",
          "line": 19,
          "column": 40,
          "context": "code",
          "lineText": "- Replace all \"WebBuddy\", \"web-buddy\", \"buddy\" references"
        },
        {
          "variation": "\"buddy",
          "line": 42,
          "column": 15,
          "context": "code",
          "lineText": "- [ ] 100% of \"buddy\" references replaced with \"semantest\""
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/community/README.org",
      "occurrenceCount": 5,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 57,
          "column": 56,
          "context": "code",
          "lineText": "- [[file:../migration-guide/README.org][Migration from Web-Buddy]]"
        },
        {
          "variation": "* Migration from Web-Buddy",
          "line": 118,
          "column": 1,
          "context": "code",
          "lineText": "* Migration from Web-Buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 120,
          "column": 10,
          "context": "code",
          "lineText": "Existing Web-Buddy users can seamlessly migrate to Semantest:"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 155,
          "column": 12,
          "context": "code",
          "lineText": "3. [[https://github.com/rydnr/chatgpt-buddy][Star the Repository]]"
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 156,
          "column": 12,
          "context": "code",
          "lineText": "4. [[https://github.com/rydnr/chatgpt-buddy/discussions][Join the Discussion]]"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/google.com/src/index.ts",
      "occurrenceCount": 4,
      "references": [
        {
          "variation": "GoogleBuddy",
          "line": 29,
          "column": 10,
          "context": "code",
          "lineText": "export { GoogleBuddyClient } from './google-buddy-client';"
        },
        {
          "variation": "google-buddy",
          "line": 29,
          "column": 38,
          "context": "string",
          "lineText": "export { GoogleBuddyClient } from './google-buddy-client';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 31,
          "column": 3,
          "context": "code",
          "lineText": "GoogleBuddyClientConfig,"
        },
        {
          "variation": "google-buddy",
          "line": 33,
          "column": 11,
          "context": "string",
          "lineText": "} from './google-buddy-client';"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/chatgpt.com/src/index.ts",
      "occurrenceCount": 4,
      "references": [
        {
          "variation": "ChatGPTBuddy",
          "line": 80,
          "column": 10,
          "context": "code",
          "lineText": "export { ChatGPTBuddyClient } from './compatibility/chatgpt-buddy-compat';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 80,
          "column": 53,
          "context": "string",
          "lineText": "export { ChatGPTBuddyClient } from './compatibility/chatgpt-buddy-compat';"
        },
        {
          "variation": "@web-buddy",
          "line": 99,
          "column": 12,
          "context": "string",
          "lineText": "from: '@web-buddy/implementations/chatgpt-buddy',"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 99,
          "column": 39,
          "context": "string",
          "lineText": "from: '@web-buddy/implementations/chatgpt-buddy',"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/package.json",
      "occurrenceCount": 4,
      "references": [
        {
          "variation": "chatgpt-buddy",
          "line": 2,
          "column": 13,
          "context": "string",
          "lineText": "\"name\": \"@chatgpt-buddy/client\","
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 4,
          "column": 45,
          "context": "string",
          "lineText": "\"description\": \"TypeScript client SDK for ChatGPT-buddy - AI automation client library\","
        },
        {
          "variation": "\"web-buddy",
          "line": 26,
          "column": 5,
          "context": "code",
          "lineText": "\"web-buddy\","
        },
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 53,
          "column": 19,
          "context": "string",
          "lineText": "\"url\": \"https://github.com/rydnr/chatgpt-buddy.git\","
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/chatgpt.com/package.json",
      "occurrenceCount": 4,
      "references": [
        {
          "variation": "@web-buddy",
          "line": 91,
          "column": 16,
          "context": "string",
          "lineText": "\"from\": \"@web-buddy/implementations/chatgpt-buddy\","
        },
        {
          "variation": "chatgpt-buddy",
          "line": 91,
          "column": 43,
          "context": "string",
          "lineText": "\"from\": \"@web-buddy/implementations/chatgpt-buddy\","
        },
        {
          "variation": "chatgpt-buddy",
          "line": 93,
          "column": 31,
          "context": "string",
          "lineText": "\"Package name change: chatgpt-buddy → @semantest/chatgpt.com\","
        },
        {
          "variation": "ChatGPTBuddy",
          "line": 94,
          "column": 23,
          "context": "string",
          "lineText": "\"Class names: ChatGPTBuddyClient → ChatGPTClient\","
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/agent-briefs/eng-google-brief.md",
      "occurrenceCount": 4,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 13,
          "column": 35,
          "context": "code",
          "lineText": "2. Ensure proper integration with Web-Buddy framework"
        },
        {
          "variation": "Web-Buddy",
          "line": 20,
          "column": 52,
          "context": "code",
          "lineText": "- `src/google-images-downloader.ts` - Event-driven Web-Buddy client"
        },
        {
          "variation": "**Framework**: Web-Buddy",
          "line": 26,
          "column": 4,
          "context": "code",
          "lineText": "1. **Framework**: Web-Buddy (event-driven architecture)"
        },
        {
          "variation": "Web-Buddy",
          "line": 44,
          "column": 10,
          "context": "code",
          "lineText": "- Follow Web-Buddy patterns"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/google.com/README.org",
      "occurrenceCount": 4,
      "references": [
        {
          "variation": "*Backward Compatible*: Supports legacy =@google-buddy",
          "line": 13,
          "column": 3,
          "context": "code",
          "lineText": "- *Backward Compatible*: Supports legacy =@google-buddy/client= API"
        },
        {
          "variation": "GoogleBuddy",
          "line": 79,
          "column": 10,
          "context": "code",
          "lineText": "import { GoogleBuddyClient } from '@semantest/google.com';"
        },
        {
          "variation": "GoogleBuddy",
          "line": 82,
          "column": 20,
          "context": "code",
          "lineText": "const client = new GoogleBuddyClient({"
        },
        {
          "variation": "google-buddy",
          "line": 277,
          "column": 86,
          "context": "code",
          "lineText": "See [[file:MIGRATION.org][MIGRATION.org]] for detailed migration instructions from =@google-buddy/client=."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/src/test-google-images.ts",
      "occurrenceCount": 3,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 19,
          "column": 53,
          "context": "string",
          "lineText": "console.log('🧪 Running simplified test without Web-Buddy server...\\n');"
        },
        {
          "variation": "Web-Buddy",
          "line": 106,
          "column": 71,
          "context": "string",
          "lineText": "console.log('   1. Run \"npm run download:playwright\" for full Web-Buddy integration');"
        },
        {
          "variation": "Web-Buddy",
          "line": 108,
          "column": 54,
          "context": "string",
          "lineText": "console.log('   3. Install and configure the Web-Buddy extension for actual downloads');"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/pattern-manager.ts",
      "occurrenceCount": 3,
      "references": [
        {
          "variation": "chatgpt-buddy",
          "line": 125,
          "column": 35,
          "context": "string",
          "lineText": "private readonly STORAGE_KEY = 'chatgpt-buddy-patterns';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 126,
          "column": 34,
          "context": "string",
          "lineText": "private readonly SHARES_KEY = 'chatgpt-buddy-pattern-shares';"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 353,
          "column": 20,
          "context": "string",
          "lineText": "exportedBy: 'ChatGPT-buddy Extension',"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/pattern-manager.js",
      "occurrenceCount": 3,
      "references": [
        {
          "variation": "chatgpt-buddy",
          "line": 13,
          "column": 29,
          "context": "string",
          "lineText": "this.STORAGE_KEY = 'chatgpt-buddy-patterns';"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 14,
          "column": 28,
          "context": "string",
          "lineText": "this.SHARES_KEY = 'chatgpt-buddy-pattern-shares';"
        },
        {
          "variation": "ChatGPT-buddy",
          "line": 170,
          "column": 26,
          "context": "string",
          "lineText": "exportedBy: 'ChatGPT-buddy Extension',"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/messages/base.js",
      "occurrenceCount": 3,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 3,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core"
        },
        {
          "variation": "* Abstract base class for all Web-Buddy",
          "line": 26,
          "column": 2,
          "context": "code",
          "lineText": "* Abstract base class for all Web-Buddy messages"
        },
        {
          "variation": "web-buddy",
          "line": 45,
          "column": 17,
          "context": "string",
          "lineText": "return `web-buddy-${Date.now()}-${(0, uuid_1.v4)().substr(0, 8)}`;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/events/base.js",
      "occurrenceCount": 3,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 3,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core - Event System"
        },
        {
          "variation": "* Abstract base class for all Web-Buddy",
          "line": 26,
          "column": 2,
          "context": "code",
          "lineText": "* Abstract base class for all Web-Buddy events"
        },
        {
          "variation": "web-buddy",
          "line": 47,
          "column": 17,
          "context": "string",
          "lineText": "return `web-buddy-${Date.now()}-${(0, uuid_1.v4)().substr(0, 8)}`;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/manifest.json",
      "occurrenceCount": 3,
      "references": [
        {
          "variation": "ChatGPT-Buddy",
          "line": 3,
          "column": 12,
          "context": "string",
          "lineText": "\"name\": \"ChatGPT-Buddy\","
        },
        {
          "variation": "Web-Buddy",
          "line": 5,
          "column": 64,
          "context": "string",
          "lineText": "\"description\": \"AI-powered web automation extension built on Web-Buddy framework for ChatGPT and language model integration\","
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 17,
          "column": 23,
          "context": "string",
          "lineText": "\"default_title\": \"ChatGPT-Buddy: AI Automation\""
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/manifest.json",
      "occurrenceCount": 3,
      "references": [
        {
          "variation": "ChatGPT-Buddy",
          "line": 3,
          "column": 12,
          "context": "string",
          "lineText": "\"name\": \"ChatGPT-Buddy\","
        },
        {
          "variation": "Web-Buddy",
          "line": 5,
          "column": 64,
          "context": "string",
          "lineText": "\"description\": \"AI-powered web automation extension built on Web-Buddy framework for ChatGPT and language model integration\","
        },
        {
          "variation": "ChatGPT-Buddy",
          "line": 17,
          "column": 23,
          "context": "string",
          "lineText": "\"default_title\": \"ChatGPT-Buddy: AI Automation\""
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/scripts/buddy-scan-findings.md",
      "occurrenceCount": 3,
      "references": [
        {
          "variation": "# WebBuddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "# WebBuddy Reference Scan Report"
        },
        {
          "variation": "*.ts\" -o -name \"*.js\" -o -name \"*.json\" -o -name \"*.md\" -o -name \"*.org\" -o -name \"*.yml\" -o -name \"*.yaml\" -o -name \"*.html\" -o -name \"*.txt\" \\) -exec grep -l \"buddy\\|Buddy\\|BUDDY",
          "line": 44,
          "column": 51,
          "context": "string",
          "lineText": "find /home/chous/work/semantest -type f \\( -name \"*.ts\" -o -name \"*.js\" -o -name \"*.json\" -o -name \"*.md\" -o -name \"*.org\" -o -name \"*.yml\" -o -name \"*.yaml\" -o -name \"*.html\" -o -name \"*.txt\" \\) -exec grep -l \"buddy\\|Buddy\\|BUDDY\" {} \\; | wc -l"
        },
        {
          "variation": "*.ts\" -o -name \"*.js\" -o -name \"*.json\" -o -name \"*.md\" -o -name \"*.org\" -o -name \"*.yml\" -o -name \"*.yaml\" -o -name \"*.html\" -o -name \"*.txt\" \\) -exec grep -H \"buddy\\|Buddy\\|BUDDY",
          "line": 47,
          "column": 51,
          "context": "string",
          "lineText": "find /home/chous/work/semantest -type f \\( -name \"*.ts\" -o -name \"*.js\" -o -name \"*.json\" -o -name \"*.md\" -o -name \"*.org\" -o -name \"*.yml\" -o -name \"*.yaml\" -o -name \"*.html\" -o -name \"*.txt\" \\) -exec grep -H \"buddy\\|Buddy\\|BUDDY\" {} \\; | sort | uniq -c | sort -nr"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/google.com/TEST_PLAN_GOOGLE_IMAGES.md",
      "occurrenceCount": 3,
      "references": [
        {
          "variation": "**Test Environment**: Chrome Extension with Web-Buddy",
          "line": 7,
          "column": 1,
          "context": "code",
          "lineText": "**Test Environment**: Chrome Extension with Web-Buddy Framework"
        },
        {
          "variation": "Web-Buddy",
          "line": 85,
          "column": 83,
          "context": "string",
          "lineText": "| TC-019: Right-click download | 1. Right-click image<br>2. Select \"Download with Web-Buddy\" | Context menu works correctly | Pending |"
        },
        {
          "variation": "**Extension**: Web-Buddy",
          "line": 224,
          "column": 3,
          "context": "code",
          "lineText": "- **Extension**: Web-Buddy with Google Images adapter"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/src/index.ts",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "* @fileoverview Main entry point for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Main entry point for Web-Buddy Node.js Server Framework"
        },
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/src/coordination/coordination-application.ts",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        },
        {
          "variation": "Web-Buddy",
          "line": 38,
          "column": 15,
          "context": "string",
          "lineText": "['name', 'Web-Buddy Coordination Engine'],"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/index.d.ts",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "* @fileoverview Main entry point for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Main entry point for Web-Buddy Node.js Server Framework"
        },
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/src/storage/automation-storage.ts",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core - Automation Storage"
        },
        {
          "variation": "web-buddy",
          "line": 85,
          "column": 21,
          "context": "string",
          "lineText": "private dbName = 'web-buddy-automations';"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/src/learning/automation-manager.ts",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core - Automation Learning Manager"
        },
        {
          "variation": "WebBuddy",
          "line": 23,
          "column": 10,
          "context": "code",
          "lineText": "import { WebBuddyEvent } from '../events/base';"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/index.js",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "* @fileoverview Main entry point for Web-Buddy",
          "line": 3,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Main entry point for Web-Buddy Node.js Server Framework"
        },
        {
          "variation": "* @author Web-Buddy",
          "line": 5,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/coordination/coordination-application.js",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 5,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        },
        {
          "variation": "Web-Buddy",
          "line": 31,
          "column": 23,
          "context": "string",
          "lineText": "['name', 'Web-Buddy Coordination Engine'],"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/storage/automation-storage.js",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 3,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core - Automation Storage"
        },
        {
          "variation": "web-buddy",
          "line": 27,
          "column": 15,
          "context": "string",
          "lineText": "dbName = 'web-buddy-automations';"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/package-lock.json",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "chatgpt-buddy",
          "line": 2,
          "column": 13,
          "context": "string",
          "lineText": "\"name\": \"@chatgpt-buddy/client\","
        },
        {
          "variation": "chatgpt-buddy",
          "line": 8,
          "column": 17,
          "context": "string",
          "lineText": "\"name\": \"@chatgpt-buddy/client\","
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/package-lock.json",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "chatgpt-buddy",
          "line": 2,
          "column": 12,
          "context": "string",
          "lineText": "\"name\": \"chatgpt-buddy-extension\","
        },
        {
          "variation": "chatgpt-buddy",
          "line": 8,
          "column": 16,
          "context": "string",
          "lineText": "\"name\": \"chatgpt-buddy-extension\","
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/agent-briefs/pm-semantest-brief.md",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "**Project**: Semantest - Web automation testing framework using Web-Buddy",
          "line": 6,
          "column": 3,
          "context": "code",
          "lineText": "- **Project**: Semantest - Web automation testing framework using Web-Buddy"
        },
        {
          "variation": "Web-Buddy",
          "line": 27,
          "column": 37,
          "context": "code",
          "lineText": "- `google-images-downloader.ts` - Web-Buddy event-driven client"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/_layouts/project.html",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "web-buddy",
          "line": 263,
          "column": 43,
          "context": "string",
          "lineText": "{% elsif page.project == 'web-buddy' %}"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 266,
          "column": 43,
          "context": "string",
          "lineText": "{% elsif page.project == 'chatgpt-buddy' %}"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/examples/README.org",
      "occurrenceCount": 2,
      "references": [
        {
          "variation": "//github.com/rydnr/chatgpt-buddy",
          "line": 1513,
          "column": 17,
          "context": "code",
          "lineText": "git clone https://github.com/rydnr/chatgpt-buddy.git"
        },
        {
          "variation": "chatgpt-buddy",
          "line": 1514,
          "column": 4,
          "context": "code",
          "lineText": "cd chatgpt-buddy"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/typescript.client/typescript/src/types.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/src/server/adapters/http-server-adapter.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/src/core/events/server-events.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/src/core/events/coordination-events.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/src/coordination/adapters/websocket-server-adapter.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/server/server-application.d.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/server/adapters/http-server-adapter.d.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/core/events/server-events.d.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/core/events/coordination-events.d.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/coordination/coordination-application.d.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/coordination/adapters/websocket-server-adapter.d.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 4,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/time-travel-ui.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "web-buddy",
          "line": 515,
          "column": 21,
          "context": "string",
          "lineText": "a.download = `web-buddy-messages-${new Date().toISOString().split('T')[0]}.json`;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/popup.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "// Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "// Web-Buddy Extension Popup Script"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/performance-optimizer.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* for the ChatGPT-buddy",
          "line": 5,
          "column": 2,
          "context": "code",
          "lineText": "* for the ChatGPT-buddy extension system."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/message-store.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "web-buddy",
          "line": 334,
          "column": 29,
          "context": "string",
          "lineText": "private persistenceKey = 'web-buddy-message-store';"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/training/infrastructure/pattern-storage-adapter.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "ChatGPTBuddy",
          "line": 32,
          "column": 38,
          "context": "string",
          "lineText": "private static readonly DB_NAME = 'ChatGPTBuddyTraining';"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/plugins/plugin-storage.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Plugin Storage System for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Storage System for Web-Buddy plugin architecture"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/plugins/plugin-security.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Plugin Security System for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Security System for Web-Buddy plugin architecture"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/plugins/plugin-context.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Plugin Context implementation for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Context implementation for Web-Buddy plugin system"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/plugins/plugin-communication.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Plugin Communication System for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Communication System for Web-Buddy plugin architecture"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/downloads/infrastructure/adapters/chrome-downloads-adapter.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/downloads/domain/events/download-events.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/downloads/domain/entities/google-images-downloader.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/downloads/domain/entities/file-download.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/src/events/automation.ts",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core - Automation Learning Events"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/server/adapters/http-server-adapter.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 5,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/core/events/server-events.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 5,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/core/events/coordination-events.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 5,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/nodejs.server/dist/coordination/adapters/websocket-server-adapter.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @author Web-Buddy",
          "line": 5,
          "column": 2,
          "context": "code",
          "lineText": "* @author Web-Buddy Team"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/popup.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "// Web-Buddy",
          "line": 1,
          "column": 1,
          "context": "code",
          "lineText": "// Web-Buddy Extension Popup Script (JavaScript version)"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/time-travel-ui.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "web-buddy",
          "line": 483,
          "column": 27,
          "context": "string",
          "lineText": "a.download = `web-buddy-messages-${new Date().toISOString().split('T')[0]}.json`;"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/popup.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "// Web-Buddy",
          "line": 2,
          "column": 1,
          "context": "code",
          "lineText": "// Web-Buddy Extension Popup Script"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/performance-optimizer.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* for the ChatGPT-buddy",
          "line": 5,
          "column": 2,
          "context": "code",
          "lineText": "* for the ChatGPT-buddy extension system."
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/message-store.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "web-buddy",
          "line": 242,
          "column": 32,
          "context": "string",
          "lineText": "this.persistenceKey = 'web-buddy-message-store';"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/training/infrastructure/pattern-storage-adapter.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "ChatGPTBuddy",
          "line": 304,
          "column": 34,
          "context": "string",
          "lineText": "PatternStorageAdapter.DB_NAME = 'ChatGPTBuddyTraining';"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/plugins/plugin-storage.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Plugin Storage System for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Storage System for Web-Buddy plugin architecture"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/plugins/plugin-security.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Plugin Security System for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Security System for Web-Buddy plugin architecture"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/plugins/plugin-registry.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Plugin Registry implementation for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Registry implementation for Web-Buddy plugin system"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/plugins/plugin-loader.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Plugin Loader implementation for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Loader implementation for Web-Buddy plugin system"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/plugins/plugin-interface.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Core plugin interfaces and types for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Core plugin interfaces and types for Web-Buddy plugin system"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/plugins/plugin-context.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Plugin Context implementation for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Context implementation for Web-Buddy plugin system"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/plugins/plugin-communication.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "* @fileoverview Plugin Communication System for Web-Buddy",
          "line": 2,
          "column": 2,
          "context": "code",
          "lineText": "* @fileoverview Plugin Communication System for Web-Buddy plugin architecture"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/downloads/infrastructure/adapters/chrome-downloads-adapter.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/downloads/domain/events/download-events.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/downloads/domain/entities/google-images-downloader.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/downloads/domain/entities/file-download.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 2,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Framework"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/learning/automation-manager.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 3,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core - Automation Learning Manager"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/dist/events/automation.js",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 3,
          "column": 25,
          "context": "code",
          "lineText": "Web-Buddy Core - Automation Learning Events"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/browser/package.json",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "@web-buddy",
          "line": 2,
          "column": 12,
          "context": "string",
          "lineText": "\"name\": \"@web-buddy/core\","
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/ROADMAP.md",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "# WebBuddy",
          "line": 13,
          "column": 32,
          "context": "code",
          "lineText": "│   ├── 01-rebranding/         # WebBuddy → Semantest migration"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/roadmap/README.md",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "**Week 1-2**: WebBuddy",
          "line": 25,
          "column": 3,
          "context": "code",
          "lineText": "- **Week 1-2**: WebBuddy → Semantest Rebranding"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/google.com/TEST_REPORT_GOOGLE_IMAGES.md",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "**Environment**: Chrome Extension with Web-Buddy",
          "line": 6,
          "column": 1,
          "context": "code",
          "lineText": "**Environment**: Chrome Extension with Web-Buddy Framework"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/src/popup.html",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 209,
          "column": 12,
          "context": "code",
          "lineText": "<h1>🌐 Web-Buddy</h1>"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/extension.chrome/build/popup.html",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "Web-Buddy",
          "line": 209,
          "column": 12,
          "context": "code",
          "lineText": "<h1>🌐 Web-Buddy</h1>"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/architecture/README.org",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "GoogleBuddy",
          "line": 666,
          "column": 14,
          "context": "code",
          "lineText": "export class GoogleBuddyClient {"
        }
      ]
    },
    {
      "filePath": "/home/chous/work/semantest/docs/robots.txt",
      "occurrenceCount": 1,
      "references": [
        {
          "variation": "//rydnr.github.io/chatgpt-buddy",
          "line": 4,
          "column": 16,
          "context": "code",
          "lineText": "Sitemap: https://rydnr.github.io/chatgpt-buddy/sitemap.xml"
        }
      ]
    }
  ]
}